## cinclude '<sys/epoll.h>'
global __sigset_t: type <cimport,nodecl> = @record{
  __val: [16]culong
}
global timespec: type <cimport,nodecl,ctypedef> = @record{
  tv_sec: ctime_t,
  tv_nsec: clong
}
global EPOLL_CLOEXEC: cint <comptime> = 524288
global EPOLL_EVENTS: type <cimport,nodecl,using,ctypedef> = @enum(cuint){
  EPOLLIN = 1,
  EPOLLPRI = 2,
  EPOLLOUT = 4,
  EPOLLRDNORM = 64,
  EPOLLRDBAND = 128,
  EPOLLWRNORM = 256,
  EPOLLWRBAND = 512,
  EPOLLMSG = 1024,
  EPOLLERR = 8,
  EPOLLHUP = 16,
  EPOLLRDHUP = 8192,
  EPOLLEXCLUSIVE = 268435456,
  EPOLLWAKEUP = 536870912,
  EPOLLONESHOT = 1073741824,
  EPOLLET = 2147483648
}
global epoll_data: type <cimport,nodecl,ctypedef> = @union{
  ptr: pointer,
  fd: cint,
  u32: uint32,
  u64: uint64
}
global epoll_data_t: type = @epoll_data
global epoll_event: type <cimport,nodecl,packed,ctypedef> = @record{
  events: uint32,
  data: epoll_data_t
}
global function epoll_create(size: cint): cint <cimport,nodecl> end
global function epoll_create1(flags: cint): cint <cimport,nodecl> end
global function epoll_ctl(epfd: cint, op: cint, fd: cint, event: *epoll_event): cint <cimport,nodecl> end
global function epoll_wait(epfd: cint, events: *epoll_event, maxevents: cint, timeout: cint): cint <cimport,nodecl> end
global function epoll_pwait(epfd: cint, events: *epoll_event, maxevents: cint, timeout: cint, ss: *__sigset_t): cint <cimport,nodecl> end
global function epoll_pwait2(epfd: cint, events: *epoll_event, maxevents: cint, timeout: *timespec, ss: *__sigset_t): cint <cimport,nodecl> end
global EPOLL_CTL_ADD: cint <comptime> = 1
global EPOLL_CTL_DEL: cint <comptime> = 2
global EPOLL_CTL_MOD: cint <comptime> = 3
