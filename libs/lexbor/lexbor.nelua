##[[
cinclude '<lexbor/core/core.h>'
cinclude '<lexbor/html/html.h>'
cinclude '<lexbor/dom/dom.h>'
cinclude '<lexbor/css/css.h>'
cinclude '<lexbor/encoding/encoding.h>'
cinclude '<lexbor/selectors/selectors.h>'
cinclude '<lexbor/tag/tag.h>'
cinclude '<lexbor/ns/ns.h>'
cinclude '<lexbor/utils/utils.h>'
linklib 'lexbor'
]]
global FILE: type <cimport,nodecl,forwarddecl> = @record{}
global lexbor_callback_f: type <cimport,nodecl> = @function(*cuchar, csize, pointer): cuint
global function lexbor_malloc(size: csize): pointer <cimport,nodecl> end
global function lexbor_realloc(dst: pointer, size: csize): pointer <cimport,nodecl> end
global function lexbor_calloc(num: csize, size: csize): pointer <cimport,nodecl> end
global function lexbor_free(dst: pointer): pointer <cimport,nodecl> end
global lexbor_status_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_STATUS_OK = 0,
  LXB_STATUS_ERROR = 1,
  LXB_STATUS_ERROR_MEMORY_ALLOCATION = 2,
  LXB_STATUS_ERROR_OBJECT_IS_NULL = 3,
  LXB_STATUS_ERROR_SMALL_BUFFER = 4,
  LXB_STATUS_ERROR_INCOMPLETE_OBJECT = 5,
  LXB_STATUS_ERROR_NO_FREE_SLOT = 6,
  LXB_STATUS_ERROR_TOO_SMALL_SIZE = 7,
  LXB_STATUS_ERROR_NOT_EXISTS = 8,
  LXB_STATUS_ERROR_WRONG_ARGS = 9,
  LXB_STATUS_ERROR_WRONG_STAGE = 10,
  LXB_STATUS_ERROR_UNEXPECTED_RESULT = 11,
  LXB_STATUS_ERROR_UNEXPECTED_DATA = 12,
  LXB_STATUS_ERROR_OVERFLOW = 13,
  LXB_STATUS_CONTINUE = 14,
  LXB_STATUS_SMALL_BUFFER = 15,
  LXB_STATUS_ABORTED = 16,
  LXB_STATUS_STOPPED = 17,
  LXB_STATUS_NEXT = 18,
  LXB_STATUS_STOP = 19
}
global lexbor_action_t: type <cimport,nodecl,using> = @enum(cint){
  LEXBOR_ACTION_OK = 0,
  LEXBOR_ACTION_STOP = 1,
  LEXBOR_ACTION_NEXT = 2
}
global lexbor_serialize_cb_f: type <cimport,nodecl> = @function(*cuchar, csize, pointer): cuint
global lexbor_array_t: type <cimport,nodecl> = @record{
  list: *pointer,
  size: csize,
  length: csize
}
global function lexbor_array_create(): *lexbor_array_t <cimport,nodecl> end
global function lexbor_array_init(array: *lexbor_array_t, size: csize): cuint <cimport,nodecl> end
global function lexbor_array_clean(array: *lexbor_array_t): void <cimport,nodecl> end
global function lexbor_array_destroy(array: *lexbor_array_t, self_destroy: boolean): *lexbor_array_t <cimport,nodecl> end
global function lexbor_array_expand(array: *lexbor_array_t, up_to: csize): *pointer <cimport,nodecl> end
global function lexbor_array_push(array: *lexbor_array_t, value: pointer): cuint <cimport,nodecl> end
global function lexbor_array_pop(array: *lexbor_array_t): pointer <cimport,nodecl> end
global function lexbor_array_insert(array: *lexbor_array_t, idx: csize, value: pointer): cuint <cimport,nodecl> end
global function lexbor_array_set(array: *lexbor_array_t, idx: csize, value: pointer): cuint <cimport,nodecl> end
global function lexbor_array_delete(array: *lexbor_array_t, begin: csize, length: csize): void <cimport,nodecl> end
global function lexbor_array_get(array: *lexbor_array_t, idx: csize): pointer <cimport,nodecl> end
global function lexbor_array_length(array: *lexbor_array_t): csize <cimport,nodecl> end
global function lexbor_array_size(array: *lexbor_array_t): csize <cimport,nodecl> end
global function lexbor_array_get_noi(array: *lexbor_array_t, idx: csize): pointer <cimport,nodecl> end
global function lexbor_array_length_noi(array: *lexbor_array_t): csize <cimport,nodecl> end
global function lexbor_array_size_noi(array: *lexbor_array_t): csize <cimport,nodecl> end
global lexbor_array_obj_t: type <cimport,nodecl> = @record{
  list: *uint8,
  size: csize,
  length: csize,
  struct_size: csize
}
global function lexbor_array_obj_create(): *lexbor_array_obj_t <cimport,nodecl> end
global function lexbor_array_obj_init(array: *lexbor_array_obj_t, size: csize, struct_size: csize): cuint <cimport,nodecl> end
global function lexbor_array_obj_clean(array: *lexbor_array_obj_t): void <cimport,nodecl> end
global function lexbor_array_obj_destroy(array: *lexbor_array_obj_t, self_destroy: boolean): *lexbor_array_obj_t <cimport,nodecl> end
global function lexbor_array_obj_expand(array: *lexbor_array_obj_t, up_to: csize): *uint8 <cimport,nodecl> end
global function lexbor_array_obj_push(array: *lexbor_array_obj_t): pointer <cimport,nodecl> end
global function lexbor_array_obj_push_wo_cls(array: *lexbor_array_obj_t): pointer <cimport,nodecl> end
global function lexbor_array_obj_push_n(array: *lexbor_array_obj_t, count: csize): pointer <cimport,nodecl> end
global function lexbor_array_obj_pop(array: *lexbor_array_obj_t): pointer <cimport,nodecl> end
global function lexbor_array_obj_delete(array: *lexbor_array_obj_t, begin: csize, length: csize): void <cimport,nodecl> end
global function lexbor_array_obj_erase(array: *lexbor_array_obj_t): void <cimport,nodecl> end
global function lexbor_array_obj_get(array: *lexbor_array_obj_t, idx: csize): pointer <cimport,nodecl> end
global function lexbor_array_obj_length(array: *lexbor_array_obj_t): csize <cimport,nodecl> end
global function lexbor_array_obj_size(array: *lexbor_array_obj_t): csize <cimport,nodecl> end
global function lexbor_array_obj_struct_size(array: *lexbor_array_obj_t): csize <cimport,nodecl> end
global function lexbor_array_obj_last(array: *lexbor_array_obj_t): pointer <cimport,nodecl> end
global function lexbor_array_obj_erase_noi(array: *lexbor_array_obj_t): void <cimport,nodecl> end
global function lexbor_array_obj_get_noi(array: *lexbor_array_obj_t, idx: csize): pointer <cimport,nodecl> end
global function lexbor_array_obj_length_noi(array: *lexbor_array_obj_t): csize <cimport,nodecl> end
global function lexbor_array_obj_size_noi(array: *lexbor_array_obj_t): csize <cimport,nodecl> end
global function lexbor_array_obj_struct_size_noi(array: *lexbor_array_obj_t): csize <cimport,nodecl> end
global function lexbor_array_obj_last_noi(array: *lexbor_array_obj_t): pointer <cimport,nodecl> end
global lexbor_mem_chunk: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_mem_chunk_t: type = @lexbor_mem_chunk
global lexbor_mem: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_mem_t: type = @lexbor_mem
lexbor_mem_chunk = @record{
  data: *uint8,
  length: csize,
  size: csize,
  next: *lexbor_mem_chunk_t,
  prev: *lexbor_mem_chunk_t
}
lexbor_mem = @record{
  chunk: *lexbor_mem_chunk_t,
  chunk_first: *lexbor_mem_chunk_t,
  chunk_min_size: csize,
  chunk_length: csize
}
global function lexbor_mem_create(): *lexbor_mem_t <cimport,nodecl> end
global function lexbor_mem_init(mem: *lexbor_mem_t, min_chunk_size: csize): cuint <cimport,nodecl> end
global function lexbor_mem_clean(mem: *lexbor_mem_t): void <cimport,nodecl> end
global function lexbor_mem_destroy(mem: *lexbor_mem_t, destroy_self: boolean): *lexbor_mem_t <cimport,nodecl> end
global function lexbor_mem_chunk_init(mem: *lexbor_mem_t, chunk: *lexbor_mem_chunk_t, length: csize): *uint8 <cimport,nodecl> end
global function lexbor_mem_chunk_make(mem: *lexbor_mem_t, length: csize): *lexbor_mem_chunk_t <cimport,nodecl> end
global function lexbor_mem_chunk_destroy(mem: *lexbor_mem_t, chunk: *lexbor_mem_chunk_t, self_destroy: boolean): *lexbor_mem_chunk_t <cimport,nodecl> end
global function lexbor_mem_alloc(mem: *lexbor_mem_t, length: csize): pointer <cimport,nodecl> end
global function lexbor_mem_calloc(mem: *lexbor_mem_t, length: csize): pointer <cimport,nodecl> end
global function lexbor_mem_current_length(mem: *lexbor_mem_t): csize <cimport,nodecl> end
global function lexbor_mem_current_size(mem: *lexbor_mem_t): csize <cimport,nodecl> end
global function lexbor_mem_chunk_length(mem: *lexbor_mem_t): csize <cimport,nodecl> end
global function lexbor_mem_align(size: csize): csize <cimport,nodecl> end
global function lexbor_mem_align_floor(size: csize): csize <cimport,nodecl> end
global function lexbor_mem_current_length_noi(mem: *lexbor_mem_t): csize <cimport,nodecl> end
global function lexbor_mem_current_size_noi(mem: *lexbor_mem_t): csize <cimport,nodecl> end
global function lexbor_mem_chunk_length_noi(mem: *lexbor_mem_t): csize <cimport,nodecl> end
global function lexbor_mem_align_noi(size: csize): csize <cimport,nodecl> end
global function lexbor_mem_align_floor_noi(size: csize): csize <cimport,nodecl> end
global lexbor_dobject_t: type <cimport,nodecl> = @record{
  mem: *lexbor_mem_t,
  cache: *lexbor_array_t,
  allocated: csize,
  struct_size: csize
}
global function lexbor_dobject_create(): *lexbor_dobject_t <cimport,nodecl> end
global function lexbor_dobject_init(dobject: *lexbor_dobject_t, chunk_size: csize, struct_size: csize): cuint <cimport,nodecl> end
global function lexbor_dobject_clean(dobject: *lexbor_dobject_t): void <cimport,nodecl> end
global function lexbor_dobject_destroy(dobject: *lexbor_dobject_t, destroy_self: boolean): *lexbor_dobject_t <cimport,nodecl> end
global function lexbor_dobject_init_list_entries(dobject: *lexbor_dobject_t, pos: csize): *uint8 <cimport,nodecl> end
global function lexbor_dobject_alloc(dobject: *lexbor_dobject_t): pointer <cimport,nodecl> end
global function lexbor_dobject_calloc(dobject: *lexbor_dobject_t): pointer <cimport,nodecl> end
global function lexbor_dobject_free(dobject: *lexbor_dobject_t, data: pointer): pointer <cimport,nodecl> end
global function lexbor_dobject_by_absolute_position(dobject: *lexbor_dobject_t, pos: csize): pointer <cimport,nodecl> end
global function lexbor_dobject_allocated(dobject: *lexbor_dobject_t): csize <cimport,nodecl> end
global function lexbor_dobject_cache_length(dobject: *lexbor_dobject_t): csize <cimport,nodecl> end
global function lexbor_dobject_allocated_noi(dobject: *lexbor_dobject_t): csize <cimport,nodecl> end
global function lexbor_dobject_cache_length_noi(dobject: *lexbor_dobject_t): csize <cimport,nodecl> end
global lexbor_avl_node: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_avl_node_t: type = @lexbor_avl_node
global lexbor_avl_node_f: type <cimport,nodecl> = @function(*lexbor_avl_node_t, pointer): void
lexbor_avl_node = @record{
  type: csize,
  height: cshort,
  value: pointer,
  left: *lexbor_avl_node_t,
  right: *lexbor_avl_node_t,
  parent: *lexbor_avl_node_t
}
global lexbor_avl_t: type <cimport,nodecl> = @record{
  nodes: *lexbor_dobject_t
}
global function lexbor_avl_create(): *lexbor_avl_t <cimport,nodecl> end
global function lexbor_avl_init(avl: *lexbor_avl_t, chunk_len: csize): cuint <cimport,nodecl> end
global function lexbor_avl_clean(avl: *lexbor_avl_t): void <cimport,nodecl> end
global function lexbor_avl_destroy(avl: *lexbor_avl_t, self_destroy: boolean): *lexbor_avl_t <cimport,nodecl> end
global function lexbor_avl_node_make(avl: *lexbor_avl_t, type: csize, value: pointer): *lexbor_avl_node_t <cimport,nodecl> end
global function lexbor_avl_node_clean(node: *lexbor_avl_node_t): void <cimport,nodecl> end
global function lexbor_avl_node_destroy(avl: *lexbor_avl_t, node: *lexbor_avl_node_t, self_destroy: boolean): *lexbor_avl_node_t <cimport,nodecl> end
global function lexbor_avl_insert(avl: *lexbor_avl_t, scope: **lexbor_avl_node_t, type: csize, value: pointer): *lexbor_avl_node_t <cimport,nodecl> end
global function lexbor_avl_search(avl: *lexbor_avl_t, scope: *lexbor_avl_node_t, type: csize): *lexbor_avl_node_t <cimport,nodecl> end
global function lexbor_avl_remove(avl: *lexbor_avl_t, scope: **lexbor_avl_node_t, type: csize): pointer <cimport,nodecl> end
global function lexbor_avl_foreach_recursion(avl: *lexbor_avl_t, scope: *lexbor_avl_node_t, callback: lexbor_avl_node_f, ctx: pointer): void <cimport,nodecl> end
global lexbor_bst_entry: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_bst_entry_t: type = @lexbor_bst_entry
global lexbor_bst: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_bst_t: type = @lexbor_bst
global lexbor_bst_entry_f: type <cimport,nodecl> = @function(*lexbor_bst_t, *lexbor_bst_entry_t, pointer): boolean
lexbor_bst_entry = @record{
  value: pointer,
  right: *lexbor_bst_entry_t,
  left: *lexbor_bst_entry_t,
  next: *lexbor_bst_entry_t,
  parent: *lexbor_bst_entry_t,
  size: csize
}
lexbor_bst = @record{
  dobject: *lexbor_dobject_t,
  root: *lexbor_bst_entry_t,
  tree_length: csize
}
global function lexbor_bst_create(): *lexbor_bst_t <cimport,nodecl> end
global function lexbor_bst_init(bst: *lexbor_bst_t, size: csize): cuint <cimport,nodecl> end
global function lexbor_bst_clean(bst: *lexbor_bst_t): void <cimport,nodecl> end
global function lexbor_bst_destroy(bst: *lexbor_bst_t, self_destroy: boolean): *lexbor_bst_t <cimport,nodecl> end
global function lexbor_bst_entry_make(bst: *lexbor_bst_t, size: csize): *lexbor_bst_entry_t <cimport,nodecl> end
global function lexbor_bst_insert(bst: *lexbor_bst_t, scope: **lexbor_bst_entry_t, size: csize, value: pointer): *lexbor_bst_entry_t <cimport,nodecl> end
global function lexbor_bst_insert_not_exists(bst: *lexbor_bst_t, scope: **lexbor_bst_entry_t, size: csize): *lexbor_bst_entry_t <cimport,nodecl> end
global function lexbor_bst_search(bst: *lexbor_bst_t, scope: *lexbor_bst_entry_t, size: csize): *lexbor_bst_entry_t <cimport,nodecl> end
global function lexbor_bst_search_close(bst: *lexbor_bst_t, scope: *lexbor_bst_entry_t, size: csize): *lexbor_bst_entry_t <cimport,nodecl> end
global function lexbor_bst_remove(bst: *lexbor_bst_t, root: **lexbor_bst_entry_t, size: csize): pointer <cimport,nodecl> end
global function lexbor_bst_remove_close(bst: *lexbor_bst_t, root: **lexbor_bst_entry_t, size: csize, found_size: *csize): pointer <cimport,nodecl> end
global function lexbor_bst_remove_by_pointer(bst: *lexbor_bst_t, entry: *lexbor_bst_entry_t, root: **lexbor_bst_entry_t): pointer <cimport,nodecl> end
global function lexbor_bst_serialize(bst: *lexbor_bst_t, callback: lexbor_callback_f, ctx: pointer): void <cimport,nodecl> end
global function lexbor_bst_serialize_entry(entry: *lexbor_bst_entry_t, callback: lexbor_callback_f, ctx: pointer, tabs: csize): void <cimport,nodecl> end
global lexbor_mraw_t: type <cimport,nodecl> = @record{
  mem: *lexbor_mem_t,
  cache: *lexbor_bst_t,
  ref_count: csize
}
global function lexbor_mraw_create(): *lexbor_mraw_t <cimport,nodecl> end
global function lexbor_mraw_init(mraw: *lexbor_mraw_t, chunk_size: csize): cuint <cimport,nodecl> end
global function lexbor_mraw_clean(mraw: *lexbor_mraw_t): void <cimport,nodecl> end
global function lexbor_mraw_destroy(mraw: *lexbor_mraw_t, destroy_self: boolean): *lexbor_mraw_t <cimport,nodecl> end
global function lexbor_mraw_alloc(mraw: *lexbor_mraw_t, size: csize): pointer <cimport,nodecl> end
global function lexbor_mraw_calloc(mraw: *lexbor_mraw_t, size: csize): pointer <cimport,nodecl> end
global function lexbor_mraw_realloc(mraw: *lexbor_mraw_t, data: pointer, new_size: csize): pointer <cimport,nodecl> end
global function lexbor_mraw_free(mraw: *lexbor_mraw_t, data: pointer): pointer <cimport,nodecl> end
global function lexbor_mraw_data_size(data: pointer): csize <cimport,nodecl> end
global function lexbor_mraw_data_size_set(data: pointer, size: csize): void <cimport,nodecl> end
global function lexbor_mraw_dup(mraw: *lexbor_mraw_t, src: pointer, size: csize): pointer <cimport,nodecl> end
global function lexbor_mraw_reference_count(mraw: *lexbor_mraw_t): csize <cimport,nodecl> end
global function lexbor_mraw_data_size_noi(data: pointer): csize <cimport,nodecl> end
global function lexbor_mraw_data_size_set_noi(data: pointer, size: csize): void <cimport,nodecl> end
global function lexbor_mraw_dup_noi(mraw: *lexbor_mraw_t, src: pointer, size: csize): pointer <cimport,nodecl> end
global function lexbor_utils_power(t: csize, k: csize): csize <cimport,nodecl> end
global function lexbor_utils_hash_hash(key: *cuchar, key_size: csize): csize <cimport,nodecl> end
global lexbor_str_t: type <cimport,nodecl> = @record{
  data: *cuchar,
  length: csize
}
global function lexbor_str_create(): *lexbor_str_t <cimport,nodecl> end
global function lexbor_str_init(str: *lexbor_str_t, mraw: *lexbor_mraw_t, size: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_clean(str: *lexbor_str_t): void <cimport,nodecl> end
global function lexbor_str_clean_all(str: *lexbor_str_t): void <cimport,nodecl> end
global function lexbor_str_destroy(str: *lexbor_str_t, mraw: *lexbor_mraw_t, destroy_obj: boolean): *lexbor_str_t <cimport,nodecl> end
global function lexbor_str_realloc(str: *lexbor_str_t, mraw: *lexbor_mraw_t, new_size: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_check_size(str: *lexbor_str_t, mraw: *lexbor_mraw_t, plus_len: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_append(str: *lexbor_str_t, mraw: *lexbor_mraw_t, data: *cuchar, length: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_append_before(str: *lexbor_str_t, mraw: *lexbor_mraw_t, buff: *cuchar, length: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_append_one(str: *lexbor_str_t, mraw: *lexbor_mraw_t, data: cuchar): *cuchar <cimport,nodecl> end
global function lexbor_str_append_lowercase(str: *lexbor_str_t, mraw: *lexbor_mraw_t, data: *cuchar, length: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_append_with_rep_null_chars(str: *lexbor_str_t, mraw: *lexbor_mraw_t, buff: *cuchar, length: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_copy(dest: *lexbor_str_t, target: *lexbor_str_t, mraw: *lexbor_mraw_t): *cuchar <cimport,nodecl> end
global function lexbor_str_stay_only_whitespace(target: *lexbor_str_t): void <cimport,nodecl> end
global function lexbor_str_strip_collapse_whitespace(target: *lexbor_str_t): void <cimport,nodecl> end
global function lexbor_str_crop_whitespace_from_begin(target: *lexbor_str_t): csize <cimport,nodecl> end
global function lexbor_str_whitespace_from_begin(target: *lexbor_str_t): csize <cimport,nodecl> end
global function lexbor_str_whitespace_from_end(target: *lexbor_str_t): csize <cimport,nodecl> end
global function lexbor_str_data_ncasecmp_first(first: *cuchar, sec: *cuchar, sec_size: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_data_ncasecmp_end(first: *cuchar, sec: *cuchar, size: csize): boolean <cimport,nodecl> end
global function lexbor_str_data_ncasecmp_contain(where: *cuchar, where_size: csize, what: *cuchar, what_size: csize): boolean <cimport,nodecl> end
global function lexbor_str_data_ncasecmp(first: *cuchar, sec: *cuchar, size: csize): boolean <cimport,nodecl> end
global function lexbor_str_data_nlocmp_right(first: *cuchar, sec: *cuchar, size: csize): boolean <cimport,nodecl> end
global function lexbor_str_data_nupcmp_right(first: *cuchar, sec: *cuchar, size: csize): boolean <cimport,nodecl> end
global function lexbor_str_data_casecmp(first: *cuchar, sec: *cuchar): boolean <cimport,nodecl> end
global function lexbor_str_data_ncmp_end(first: *cuchar, sec: *cuchar, size: csize): boolean <cimport,nodecl> end
global function lexbor_str_data_ncmp_contain(where: *cuchar, where_size: csize, what: *cuchar, what_size: csize): boolean <cimport,nodecl> end
global function lexbor_str_data_ncmp(first: *cuchar, sec: *cuchar, size: csize): boolean <cimport,nodecl> end
global function lexbor_str_data_cmp(first: *cuchar, sec: *cuchar): boolean <cimport,nodecl> end
global function lexbor_str_data_cmp_ws(first: *cuchar, sec: *cuchar): boolean <cimport,nodecl> end
global function lexbor_str_data_to_lowercase(to: *cuchar, from: *cuchar, len: csize): void <cimport,nodecl> end
global function lexbor_str_data_to_uppercase(to: *cuchar, from: *cuchar, len: csize): void <cimport,nodecl> end
global function lexbor_str_data_find_lowercase(data: *cuchar, len: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_data_find_uppercase(data: *cuchar, len: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_data(str: *lexbor_str_t): *cuchar <cimport,nodecl> end
global function lexbor_str_length(str: *lexbor_str_t): csize <cimport,nodecl> end
global function lexbor_str_size(str: *lexbor_str_t): csize <cimport,nodecl> end
global function lexbor_str_data_set(str: *lexbor_str_t, data: *cuchar): void <cimport,nodecl> end
global function lexbor_str_length_set(str: *lexbor_str_t, mraw: *lexbor_mraw_t, length: csize): *cuchar <cimport,nodecl> end
global function lexbor_str_data_noi(str: *lexbor_str_t): *cuchar <cimport,nodecl> end
global function lexbor_str_length_noi(str: *lexbor_str_t): csize <cimport,nodecl> end
global function lexbor_str_size_noi(str: *lexbor_str_t): csize <cimport,nodecl> end
global function lexbor_str_data_set_noi(str: *lexbor_str_t, data: *cuchar): void <cimport,nodecl> end
global function lexbor_str_length_set_noi(str: *lexbor_str_t, mraw: *lexbor_mraw_t, length: csize): *cuchar <cimport,nodecl> end
global lexbor_bst_map_entry_t: type <cimport,nodecl> = @record{
  str: lexbor_str_t,
  value: pointer
}
global lexbor_bst_map_t: type <cimport,nodecl> = @record{
  bst: *lexbor_bst_t,
  mraw: *lexbor_mraw_t,
  entries: *lexbor_dobject_t
}
global function lexbor_bst_map_create(): *lexbor_bst_map_t <cimport,nodecl> end
global function lexbor_bst_map_init(bst_map: *lexbor_bst_map_t, size: csize): cuint <cimport,nodecl> end
global function lexbor_bst_map_clean(bst_map: *lexbor_bst_map_t): void <cimport,nodecl> end
global function lexbor_bst_map_destroy(bst_map: *lexbor_bst_map_t, self_destroy: boolean): *lexbor_bst_map_t <cimport,nodecl> end
global function lexbor_bst_map_search(bst_map: *lexbor_bst_map_t, scope: *lexbor_bst_entry_t, key: *cuchar, key_len: csize): *lexbor_bst_map_entry_t <cimport,nodecl> end
global function lexbor_bst_map_insert(bst_map: *lexbor_bst_map_t, scope: **lexbor_bst_entry_t, key: *cuchar, key_len: csize, value: pointer): *lexbor_bst_map_entry_t <cimport,nodecl> end
global function lexbor_bst_map_insert_not_exists(bst_map: *lexbor_bst_map_t, scope: **lexbor_bst_entry_t, key: *cuchar, key_len: csize): *lexbor_bst_map_entry_t <cimport,nodecl> end
global function lexbor_bst_map_remove(bst_map: *lexbor_bst_map_t, scope: **lexbor_bst_entry_t, key: *cuchar, key_len: csize): pointer <cimport,nodecl> end
global function lexbor_bst_map_mraw(bst_map: *lexbor_bst_map_t): *lexbor_mraw_t <cimport,nodecl> end
global function lexbor_bst_map_mraw_noi(bst_map: *lexbor_bst_map_t): *lexbor_mraw_t <cimport,nodecl> end
global lexbor_fs_dir_file_f: type <cimport,nodecl> = @function(*cuchar, csize, *cuchar, csize, pointer): lexbor_action_t
global lexbor_fs_dir_opt: type <cimport,nodecl,using,ctypedef> = @enum(cint){
  LEXBOR_FS_DIR_OPT_UNDEF = 0,
  LEXBOR_FS_DIR_OPT_WITHOUT_DIR = 1,
  LEXBOR_FS_DIR_OPT_WITHOUT_FILE = 2,
  LEXBOR_FS_DIR_OPT_WITHOUT_HIDDEN = 4
}
global lexbor_fs_file_type_t: type <cimport,nodecl,using> = @enum(cint){
  LEXBOR_FS_FILE_TYPE_UNDEF = 0,
  LEXBOR_FS_FILE_TYPE_FILE = 1,
  LEXBOR_FS_FILE_TYPE_DIRECTORY = 2,
  LEXBOR_FS_FILE_TYPE_BLOCK_DEVICE = 3,
  LEXBOR_FS_FILE_TYPE_CHARACTER_DEVICE = 4,
  LEXBOR_FS_FILE_TYPE_PIPE = 5,
  LEXBOR_FS_FILE_TYPE_SYMLINK = 6,
  LEXBOR_FS_FILE_TYPE_SOCKET = 7
}
global function lexbor_fs_dir_read(dirpath: *cuchar, opt: cint, callback: lexbor_fs_dir_file_f, ctx: pointer): cuint <cimport,nodecl> end
global function lexbor_fs_file_type(full_path: *cuchar): lexbor_fs_file_type_t <cimport,nodecl> end
global function lexbor_fs_file_easy_read(full_path: *cuchar, len: *csize): *cuchar <cimport,nodecl> end
global lexbor_in_node: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_in_node_t: type = @lexbor_in_node
global lexbor_in_opt: type <cimport,nodecl,using,ctypedef> = @enum(cint){
  LEXBOR_IN_OPT_UNDEF = 0,
  LEXBOR_IN_OPT_READONLY = 1,
  LEXBOR_IN_OPT_DONE = 2,
  LEXBOR_IN_OPT_FAKE = 4,
  LEXBOR_IN_OPT_ALLOC = 8
}
global lexbor_in_t: type <cimport,nodecl> = @record{
  nodes: *lexbor_dobject_t
}
lexbor_in_node = @record{
  offset: csize,
  opt: cint,
  begin: *cuchar,
  End: *cuchar,
  use: *cuchar,
  next: *lexbor_in_node_t,
  prev: *lexbor_in_node_t,
  incoming: *lexbor_in_t
}
global function lexbor_in_create(): *lexbor_in_t <cimport,nodecl> end
global function lexbor_in_init(incoming: *lexbor_in_t, chunk_size: csize): cuint <cimport,nodecl> end
global function lexbor_in_clean(incoming: *lexbor_in_t): void <cimport,nodecl> end
global function lexbor_in_destroy(incoming: *lexbor_in_t, self_destroy: boolean): *lexbor_in_t <cimport,nodecl> end
global function lexbor_in_node_make(incoming: *lexbor_in_t, last_node: *lexbor_in_node_t, buf: *cuchar, buf_size: csize): *lexbor_in_node_t <cimport,nodecl> end
global function lexbor_in_node_clean(node: *lexbor_in_node_t): void <cimport,nodecl> end
global function lexbor_in_node_destroy(incoming: *lexbor_in_t, node: *lexbor_in_node_t, self_destroy: boolean): *lexbor_in_node_t <cimport,nodecl> end
global function lexbor_in_node_split(node: *lexbor_in_node_t, pos: *cuchar): *lexbor_in_node_t <cimport,nodecl> end
global function lexbor_in_node_find(node: *lexbor_in_node_t, pos: *cuchar): *lexbor_in_node_t <cimport,nodecl> end
global function lexbor_in_node_pos_up(node: *lexbor_in_node_t, return_node: **lexbor_in_node_t, pos: *cuchar, offset: csize): *cuchar <cimport,nodecl> end
global function lexbor_in_node_pos_down(node: *lexbor_in_node_t, return_node: **lexbor_in_node_t, pos: *cuchar, offset: csize): *cuchar <cimport,nodecl> end
global function lexbor_in_node_begin(node: *lexbor_in_node_t): *cuchar <cimport,nodecl> end
global function lexbor_in_node_end(node: *lexbor_in_node_t): *cuchar <cimport,nodecl> end
global function lexbor_in_node_offset(node: *lexbor_in_node_t): csize <cimport,nodecl> end
global function lexbor_in_node_next(node: *lexbor_in_node_t): *lexbor_in_node_t <cimport,nodecl> end
global function lexbor_in_node_prev(node: *lexbor_in_node_t): *lexbor_in_node_t <cimport,nodecl> end
global function lexbor_in_node_in(node: *lexbor_in_node_t): *lexbor_in_t <cimport,nodecl> end
global function lexbor_in_segment(node: *lexbor_in_node_t, data: *cuchar): boolean <cimport,nodecl> end
global function lexbor_in_node_begin_noi(node: *lexbor_in_node_t): *cuchar <cimport,nodecl> end
global function lexbor_in_node_end_noi(node: *lexbor_in_node_t): *cuchar <cimport,nodecl> end
global function lexbor_in_node_offset_noi(node: *lexbor_in_node_t): csize <cimport,nodecl> end
global function lexbor_in_node_next_noi(node: *lexbor_in_node_t): *lexbor_in_node_t <cimport,nodecl> end
global function lexbor_in_node_prev_noi(node: *lexbor_in_node_t): *lexbor_in_node_t <cimport,nodecl> end
global function lexbor_in_node_in_noi(node: *lexbor_in_node_t): *lexbor_in_t <cimport,nodecl> end
global function lexbor_in_segment_noi(node: *lexbor_in_node_t, data: *cuchar): boolean <cimport,nodecl> end
global lexbor_sbst_entry_static_t: type <cimport,nodecl> = @record{
  key: cuchar,
  value: pointer,
  value_len: csize,
  left: csize,
  right: csize,
  next: csize
}
global function lexbor_sbst_entry_static_find(strt: *lexbor_sbst_entry_static_t, root: *lexbor_sbst_entry_static_t, key: cuchar): *lexbor_sbst_entry_static_t <cimport,nodecl> end
global lexbor_shs_entry_t: type <cimport,nodecl> = @record{
  key: cstring,
  value: pointer,
  key_len: csize,
  next: csize
}
global lexbor_shs_hash_t: type <cimport,nodecl> = @record{
  key: uint32,
  value: pointer,
  next: csize
}
global function lexbor_shs_entry_get_static(tree: *lexbor_shs_entry_t, key: *cuchar, size: csize): *lexbor_shs_entry_t <cimport,nodecl> end
global function lexbor_shs_entry_get_lower_static(root: *lexbor_shs_entry_t, key: *cuchar, key_len: csize): *lexbor_shs_entry_t <cimport,nodecl> end
global function lexbor_shs_entry_get_upper_static(root: *lexbor_shs_entry_t, key: *cuchar, key_len: csize): *lexbor_shs_entry_t <cimport,nodecl> end
global function lexbor_shs_hash_get_static(table: *lexbor_shs_hash_t, table_size: csize, key: uint32): *lexbor_shs_hash_t <cimport,nodecl> end
global function lexbor_conv_float_to_data(num: float64, buf: *cuchar, len: csize): csize <cimport,nodecl> end
global function lexbor_conv_data_to_double(start: **cuchar, len: csize): float64 <cimport,nodecl> end
global function lexbor_conv_data_to_ulong(data: **cuchar, length: csize): culong <cimport,nodecl> end
global function lexbor_conv_data_to_long(data: **cuchar, length: csize): clong <cimport,nodecl> end
global function lexbor_conv_data_to_uint(data: **cuchar, length: csize): cuint <cimport,nodecl> end
global function lexbor_conv_double_to_long(number: float64): clong <cimport,nodecl> end
global lexbor_diyfp_t: type <cimport,nodecl> = @record{
  significand: uint64,
  exp: cint
}
global function lexbor_cached_power_dec(exp: cint, dec_exp: *cint): lexbor_diyfp_t <cimport,nodecl> end
global function lexbor_cached_power_bin(exp: cint, dec_exp: *cint): lexbor_diyfp_t <cimport,nodecl> end
global function lexbor_diyfp_leading_zeros64(x: uint64): uint64 <cimport,nodecl> end
global function lexbor_diyfp_from_d2(d: float64): lexbor_diyfp_t <cimport,nodecl> end
global function lexbor_diyfp_2d(v: lexbor_diyfp_t): float64 <cimport,nodecl> end
global function lexbor_diyfp_shift_left(v: lexbor_diyfp_t, shift: cuint): lexbor_diyfp_t <cimport,nodecl> end
global function lexbor_diyfp_shift_right(v: lexbor_diyfp_t, shift: cuint): lexbor_diyfp_t <cimport,nodecl> end
global function lexbor_diyfp_sub(lhs: lexbor_diyfp_t, rhs: lexbor_diyfp_t): lexbor_diyfp_t <cimport,nodecl> end
global function lexbor_diyfp_mul(lhs: lexbor_diyfp_t, rhs: lexbor_diyfp_t): lexbor_diyfp_t <cimport,nodecl> end
global function lexbor_diyfp_normalize(v: lexbor_diyfp_t): lexbor_diyfp_t <cimport,nodecl> end
global function lexbor_dtoa(value: float64, begin: *cuchar, len: csize): csize <cimport,nodecl> end
global function lexbor_strtod_internal(start: *cuchar, length: csize, exp: cint): float64 <cimport,nodecl> end
global function lexbor_serialize_length_cb(data: *cuchar, length: csize, ctx: pointer): cuint <cimport,nodecl> end
global function lexbor_serialize_copy_cb(data: *cuchar, length: csize, ctx: pointer): cuint <cimport,nodecl> end
global lxb_html_tokenizer: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_tokenizer_t: type = @lxb_html_tokenizer
global lxb_html_tree: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_tree_t: type = @lxb_html_tree
global lxb_html_status_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_HTML_STATUS_OK = 0
}
global lexbor_hash_search: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_hash_search_t: type = @lexbor_hash_search
global lexbor_hash_insert: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_hash_insert_t: type = @lexbor_hash_insert
global lexbor_hash_insert_raw: *lexbor_hash_insert_t <cimport,nodecl>
global lexbor_hash_insert_lower: *lexbor_hash_insert_t <cimport,nodecl>
global lexbor_hash_insert_upper: *lexbor_hash_insert_t <cimport,nodecl>
global lexbor_hash_search_raw: *lexbor_hash_search_t <cimport,nodecl>
global lexbor_hash_search_lower: *lexbor_hash_search_t <cimport,nodecl>
global lexbor_hash_search_upper: *lexbor_hash_search_t <cimport,nodecl>
global lexbor_hash: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_hash_t: type = @lexbor_hash
global lexbor_hash_entry: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lexbor_hash_entry_t: type = @lexbor_hash_entry
global lexbor_hash_id_f: type <cimport,nodecl> = @function(*cuchar, csize): uint32
global lexbor_hash_copy_f: type <cimport,nodecl> = @function(*lexbor_hash_t, *lexbor_hash_entry_t, *cuchar, csize): cuint
global lexbor_hash_cmp_f: type <cimport,nodecl> = @function(*cuchar, *cuchar, csize): boolean
lexbor_hash_entry = @record{
  u: union{
    long_str: *cuchar,
    short_str: [17]cuchar
  },
  length: csize,
  next: *lexbor_hash_entry_t
}
lexbor_hash = @record{
  entries: *lexbor_dobject_t,
  mraw: *lexbor_mraw_t,
  table: **lexbor_hash_entry_t,
  table_size: csize,
  struct_size: csize
}
lexbor_hash_insert = @record{
  hash: lexbor_hash_id_f,
  cmp: lexbor_hash_cmp_f,
  copy: lexbor_hash_copy_f
}
lexbor_hash_search = @record{
  hash: lexbor_hash_id_f,
  cmp: lexbor_hash_cmp_f
}
global function lexbor_hash_create(): *lexbor_hash_t <cimport,nodecl> end
global function lexbor_hash_init(hash: *lexbor_hash_t, table_size: csize, struct_size: csize): cuint <cimport,nodecl> end
global function lexbor_hash_clean(hash: *lexbor_hash_t): void <cimport,nodecl> end
global function lexbor_hash_destroy(hash: *lexbor_hash_t, destroy_obj: boolean): *lexbor_hash_t <cimport,nodecl> end
global function lexbor_hash_insert_by_entry(hash: *lexbor_hash_t, entry: *lexbor_hash_entry_t, search: *lexbor_hash_search_t, key: *cuchar, length: csize): pointer <cimport,nodecl> end
global function lexbor_hash_remove(hash: *lexbor_hash_t, search: *lexbor_hash_search_t, key: *cuchar, length: csize): void <cimport,nodecl> end
global function lexbor_hash_remove_by_hash_id(hash: *lexbor_hash_t, hash_id: uint32, key: *cuchar, length: csize, cmp_func: lexbor_hash_cmp_f): void <cimport,nodecl> end
global function lexbor_hash_search_by_hash_id(hash: *lexbor_hash_t, hash_id: uint32, key: *cuchar, length: csize, cmp_func: lexbor_hash_cmp_f): pointer <cimport,nodecl> end
global function lexbor_hash_make_id(key: *cuchar, length: csize): uint32 <cimport,nodecl> end
global function lexbor_hash_make_id_lower(key: *cuchar, length: csize): uint32 <cimport,nodecl> end
global function lexbor_hash_make_id_upper(key: *cuchar, length: csize): uint32 <cimport,nodecl> end
global function lexbor_hash_copy(hash: *lexbor_hash_t, entry: *lexbor_hash_entry_t, key: *cuchar, length: csize): cuint <cimport,nodecl> end
global function lexbor_hash_copy_lower(hash: *lexbor_hash_t, entry: *lexbor_hash_entry_t, key: *cuchar, length: csize): cuint <cimport,nodecl> end
global function lexbor_hash_copy_upper(hash: *lexbor_hash_t, entry: *lexbor_hash_entry_t, key: *cuchar, length: csize): cuint <cimport,nodecl> end
global function lexbor_hash_mraw(hash: *lexbor_hash_t): *lexbor_mraw_t <cimport,nodecl> end
global function lexbor_hash_entry_str(entry: *lexbor_hash_entry_t): *cuchar <cimport,nodecl> end
global function lexbor_hash_entry_str_set(entry: *lexbor_hash_entry_t, data: *cuchar, length: csize): *cuchar <cimport,nodecl> end
global function lexbor_hash_entry_str_free(hash: *lexbor_hash_t, entry: *lexbor_hash_entry_t): void <cimport,nodecl> end
global function lexbor_hash_entry_create(hash: *lexbor_hash_t): *lexbor_hash_entry_t <cimport,nodecl> end
global function lexbor_hash_entry_destroy(hash: *lexbor_hash_t, entry: *lexbor_hash_entry_t): *lexbor_hash_entry_t <cimport,nodecl> end
global function lexbor_hash_entries_count(hash: *lexbor_hash_t): csize <cimport,nodecl> end
global lxb_ns_id_enum_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_NS__UNDEF = 0,
  LXB_NS__ANY = 1,
  LXB_NS_HTML = 2,
  LXB_NS_MATH = 3,
  LXB_NS_SVG = 4,
  LXB_NS_XLINK = 5,
  LXB_NS_XML = 6,
  LXB_NS_XMLNS = 7,
  LXB_NS__LAST_ENTRY = 8
}
global lxb_ns_data_t: type <cimport,nodecl> = @record{
  entry: lexbor_hash_entry_t,
  ns_id: culong,
  ref_count: csize,
  read_only: boolean
}
global lxb_ns_prefix_data_t: type <cimport,nodecl> = @record{
  entry: lexbor_hash_entry_t,
  prefix_id: culong,
  ref_count: csize,
  read_only: boolean
}
global function lxb_ns_by_id(hash: *lexbor_hash_t, ns_id: culong, length: *csize): *cuchar <cimport,nodecl> end
global function lxb_ns_data_by_id(hash: *lexbor_hash_t, ns_id: culong): *lxb_ns_data_t <cimport,nodecl> end
global function lxb_ns_data_by_link(hash: *lexbor_hash_t, name: *cuchar, length: csize): *lxb_ns_data_t <cimport,nodecl> end
global function lxb_ns_prefix_append(hash: *lexbor_hash_t, prefix: *cuchar, length: csize): *lxb_ns_prefix_data_t <cimport,nodecl> end
global function lxb_ns_prefix_data_by_id(hash: *lexbor_hash_t, prefix_id: culong): *lxb_ns_prefix_data_t <cimport,nodecl> end
global function lxb_ns_prefix_data_by_name(hash: *lexbor_hash_t, name: *cuchar, length: csize): *lxb_ns_prefix_data_t <cimport,nodecl> end
global lxb_tag_id_enum_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_TAG__UNDEF = 0,
  LXB_TAG__END_OF_FILE = 1,
  LXB_TAG__TEXT = 2,
  LXB_TAG__DOCUMENT = 3,
  LXB_TAG__EM_COMMENT = 4,
  LXB_TAG__EM_DOCTYPE = 5,
  LXB_TAG_A = 6,
  LXB_TAG_ABBR = 7,
  LXB_TAG_ACRONYM = 8,
  LXB_TAG_ADDRESS = 9,
  LXB_TAG_ALTGLYPH = 10,
  LXB_TAG_ALTGLYPHDEF = 11,
  LXB_TAG_ALTGLYPHITEM = 12,
  LXB_TAG_ANIMATECOLOR = 13,
  LXB_TAG_ANIMATEMOTION = 14,
  LXB_TAG_ANIMATETRANSFORM = 15,
  LXB_TAG_ANNOTATION_XML = 16,
  LXB_TAG_APPLET = 17,
  LXB_TAG_AREA = 18,
  LXB_TAG_ARTICLE = 19,
  LXB_TAG_ASIDE = 20,
  LXB_TAG_AUDIO = 21,
  LXB_TAG_B = 22,
  LXB_TAG_BASE = 23,
  LXB_TAG_BASEFONT = 24,
  LXB_TAG_BDI = 25,
  LXB_TAG_BDO = 26,
  LXB_TAG_BGSOUND = 27,
  LXB_TAG_BIG = 28,
  LXB_TAG_BLINK = 29,
  LXB_TAG_BLOCKQUOTE = 30,
  LXB_TAG_BODY = 31,
  LXB_TAG_BR = 32,
  LXB_TAG_BUTTON = 33,
  LXB_TAG_CANVAS = 34,
  LXB_TAG_CAPTION = 35,
  LXB_TAG_CENTER = 36,
  LXB_TAG_CITE = 37,
  LXB_TAG_CLIPPATH = 38,
  LXB_TAG_CODE = 39,
  LXB_TAG_COL = 40,
  LXB_TAG_COLGROUP = 41,
  LXB_TAG_DATA = 42,
  LXB_TAG_DATALIST = 43,
  LXB_TAG_DD = 44,
  LXB_TAG_DEL = 45,
  LXB_TAG_DESC = 46,
  LXB_TAG_DETAILS = 47,
  LXB_TAG_DFN = 48,
  LXB_TAG_DIALOG = 49,
  LXB_TAG_DIR = 50,
  LXB_TAG_DIV = 51,
  LXB_TAG_DL = 52,
  LXB_TAG_DT = 53,
  LXB_TAG_EM = 54,
  LXB_TAG_EMBED = 55,
  LXB_TAG_FEBLEND = 56,
  LXB_TAG_FECOLORMATRIX = 57,
  LXB_TAG_FECOMPONENTTRANSFER = 58,
  LXB_TAG_FECOMPOSITE = 59,
  LXB_TAG_FECONVOLVEMATRIX = 60,
  LXB_TAG_FEDIFFUSELIGHTING = 61,
  LXB_TAG_FEDISPLACEMENTMAP = 62,
  LXB_TAG_FEDISTANTLIGHT = 63,
  LXB_TAG_FEDROPSHADOW = 64,
  LXB_TAG_FEFLOOD = 65,
  LXB_TAG_FEFUNCA = 66,
  LXB_TAG_FEFUNCB = 67,
  LXB_TAG_FEFUNCG = 68,
  LXB_TAG_FEFUNCR = 69,
  LXB_TAG_FEGAUSSIANBLUR = 70,
  LXB_TAG_FEIMAGE = 71,
  LXB_TAG_FEMERGE = 72,
  LXB_TAG_FEMERGENODE = 73,
  LXB_TAG_FEMORPHOLOGY = 74,
  LXB_TAG_FEOFFSET = 75,
  LXB_TAG_FEPOINTLIGHT = 76,
  LXB_TAG_FESPECULARLIGHTING = 77,
  LXB_TAG_FESPOTLIGHT = 78,
  LXB_TAG_FETILE = 79,
  LXB_TAG_FETURBULENCE = 80,
  LXB_TAG_FIELDSET = 81,
  LXB_TAG_FIGCAPTION = 82,
  LXB_TAG_FIGURE = 83,
  LXB_TAG_FONT = 84,
  LXB_TAG_FOOTER = 85,
  LXB_TAG_FOREIGNOBJECT = 86,
  LXB_TAG_FORM = 87,
  LXB_TAG_FRAME = 88,
  LXB_TAG_FRAMESET = 89,
  LXB_TAG_GLYPHREF = 90,
  LXB_TAG_H1 = 91,
  LXB_TAG_H2 = 92,
  LXB_TAG_H3 = 93,
  LXB_TAG_H4 = 94,
  LXB_TAG_H5 = 95,
  LXB_TAG_H6 = 96,
  LXB_TAG_HEAD = 97,
  LXB_TAG_HEADER = 98,
  LXB_TAG_HGROUP = 99,
  LXB_TAG_HR = 100,
  LXB_TAG_HTML = 101,
  LXB_TAG_I = 102,
  LXB_TAG_IFRAME = 103,
  LXB_TAG_IMAGE = 104,
  LXB_TAG_IMG = 105,
  LXB_TAG_INPUT = 106,
  LXB_TAG_INS = 107,
  LXB_TAG_ISINDEX = 108,
  LXB_TAG_KBD = 109,
  LXB_TAG_KEYGEN = 110,
  LXB_TAG_LABEL = 111,
  LXB_TAG_LEGEND = 112,
  LXB_TAG_LI = 113,
  LXB_TAG_LINEARGRADIENT = 114,
  LXB_TAG_LINK = 115,
  LXB_TAG_LISTING = 116,
  LXB_TAG_MAIN = 117,
  LXB_TAG_MALIGNMARK = 118,
  LXB_TAG_MAP = 119,
  LXB_TAG_MARK = 120,
  LXB_TAG_MARQUEE = 121,
  LXB_TAG_MATH = 122,
  LXB_TAG_MENU = 123,
  LXB_TAG_META = 124,
  LXB_TAG_METER = 125,
  LXB_TAG_MFENCED = 126,
  LXB_TAG_MGLYPH = 127,
  LXB_TAG_MI = 128,
  LXB_TAG_MN = 129,
  LXB_TAG_MO = 130,
  LXB_TAG_MS = 131,
  LXB_TAG_MTEXT = 132,
  LXB_TAG_MULTICOL = 133,
  LXB_TAG_NAV = 134,
  LXB_TAG_NEXTID = 135,
  LXB_TAG_NOBR = 136,
  LXB_TAG_NOEMBED = 137,
  LXB_TAG_NOFRAMES = 138,
  LXB_TAG_NOSCRIPT = 139,
  LXB_TAG_OBJECT = 140,
  LXB_TAG_OL = 141,
  LXB_TAG_OPTGROUP = 142,
  LXB_TAG_OPTION = 143,
  LXB_TAG_OUTPUT = 144,
  LXB_TAG_P = 145,
  LXB_TAG_PARAM = 146,
  LXB_TAG_PATH = 147,
  LXB_TAG_PICTURE = 148,
  LXB_TAG_PLAINTEXT = 149,
  LXB_TAG_PRE = 150,
  LXB_TAG_PROGRESS = 151,
  LXB_TAG_Q = 152,
  LXB_TAG_RADIALGRADIENT = 153,
  LXB_TAG_RB = 154,
  LXB_TAG_RP = 155,
  LXB_TAG_RT = 156,
  LXB_TAG_RTC = 157,
  LXB_TAG_RUBY = 158,
  LXB_TAG_S = 159,
  LXB_TAG_SAMP = 160,
  LXB_TAG_SCRIPT = 161,
  LXB_TAG_SECTION = 162,
  LXB_TAG_SELECT = 163,
  LXB_TAG_SLOT = 164,
  LXB_TAG_SMALL = 165,
  LXB_TAG_SOURCE = 166,
  LXB_TAG_SPACER = 167,
  LXB_TAG_SPAN = 168,
  LXB_TAG_STRIKE = 169,
  LXB_TAG_STRONG = 170,
  LXB_TAG_STYLE = 171,
  LXB_TAG_SUB = 172,
  LXB_TAG_SUMMARY = 173,
  LXB_TAG_SUP = 174,
  LXB_TAG_SVG = 175,
  LXB_TAG_TABLE = 176,
  LXB_TAG_TBODY = 177,
  LXB_TAG_TD = 178,
  LXB_TAG_TEMPLATE = 179,
  LXB_TAG_TEXTAREA = 180,
  LXB_TAG_TEXTPATH = 181,
  LXB_TAG_TFOOT = 182,
  LXB_TAG_TH = 183,
  LXB_TAG_THEAD = 184,
  LXB_TAG_TIME = 185,
  LXB_TAG_TITLE = 186,
  LXB_TAG_TR = 187,
  LXB_TAG_TRACK = 188,
  LXB_TAG_TT = 189,
  LXB_TAG_U = 190,
  LXB_TAG_UL = 191,
  LXB_TAG_VAR = 192,
  LXB_TAG_VIDEO = 193,
  LXB_TAG_WBR = 194,
  LXB_TAG_XMP = 195,
  LXB_TAG__LAST_ENTRY = 196
}
global lxb_dom_exception_code_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_DOM_INDEX_SIZE_ERR = 0,
  LXB_DOM_DOMSTRING_SIZE_ERR = 1,
  LXB_DOM_HIERARCHY_REQUEST_ERR = 2,
  LXB_DOM_WRONG_DOCUMENT_ERR = 3,
  LXB_DOM_INVALID_CHARACTER_ERR = 4,
  LXB_DOM_NO_DATA_ALLOWED_ERR = 5,
  LXB_DOM_NO_MODIFICATION_ALLOWED_ERR = 6,
  LXB_DOM_NOT_FOUND_ERR = 7,
  LXB_DOM_NOT_SUPPORTED_ERR = 8,
  LXB_DOM_INUSE_ATTRIBUTE_ERR = 9,
  LXB_DOM_INVALID_STATE_ERR = 10,
  LXB_DOM_SYNTAX_ERR = 11,
  LXB_DOM_INVALID_MODIFICATION_ERR = 12,
  LXB_DOM_NAMESPACE_ERR = 13,
  LXB_DOM_INVALID_ACCESS_ERR = 14,
  LXB_DOM_VALIDATION_ERR = 15,
  LXB_DOM_TYPE_MISMATCH_ERR = 16,
  LXB_DOM_SECURITY_ERR = 17,
  LXB_DOM_NETWORK_ERR = 18,
  LXB_DOM_ABORT_ERR = 19,
  LXB_DOM_URL_MISMATCH_ERR = 20,
  LXB_DOM_QUOTA_EXCEEDED_ERR = 21,
  LXB_DOM_TIMEOUT_ERR = 22,
  LXB_DOM_INVALID_NODE_TYPE_ERR = 23,
  LXB_DOM_DATA_CLONE_ERR = 24
}
global function lxb_dom_exception_code_ref_set(var: *lxb_dom_exception_code_t, code: lxb_dom_exception_code_t): pointer <cimport,nodecl> end
global function lxb_dom_exception_code_ref_set_noi(var: *lxb_dom_exception_code_t, code: lxb_dom_exception_code_t): pointer <cimport,nodecl> end
global lxb_dom_event_target: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_event_target_t: type = @lxb_dom_event_target
global lxb_dom_node: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_node_t: type = @lxb_dom_node
global lxb_dom_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_element_t: type = @lxb_dom_element
global lxb_dom_attr: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_attr_t: type = @lxb_dom_attr
global lxb_dom_document: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_document_t: type = @lxb_dom_document
global lxb_dom_document_type: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_document_type_t: type = @lxb_dom_document_type
global lxb_dom_document_fragment: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_document_fragment_t: type = @lxb_dom_document_fragment
global lxb_dom_shadow_root: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_shadow_root_t: type = @lxb_dom_shadow_root
global lxb_dom_character_data: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_character_data_t: type = @lxb_dom_character_data
global lxb_dom_text: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_text_t: type = @lxb_dom_text
global lxb_dom_cdata_section: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_cdata_section_t: type = @lxb_dom_cdata_section
global lxb_dom_processing_instruction: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_processing_instruction_t: type = @lxb_dom_processing_instruction
global lxb_dom_comment: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_dom_comment_t: type = @lxb_dom_comment
global lxb_dom_interface_constructor_f: type <cimport,nodecl> = @function(pointer): pointer
global lxb_dom_interface_destructor_f: type <cimport,nodecl> = @function(pointer): pointer
global lxb_dom_interface_create_f: type <cimport,nodecl> = @function(*lxb_dom_document_t, culong, culong): pointer
global lxb_dom_interface_clone_f: type <cimport,nodecl> = @function(*lxb_dom_document_t, pointer): pointer
global lxb_dom_interface_destroy_f: type <cimport,nodecl> = @function(pointer): pointer
global function lxb_dom_interface_create(document: *lxb_dom_document_t, tag_id: culong, ns: culong): pointer <cimport,nodecl> end
global function lxb_dom_interface_clone(document: *lxb_dom_document_t, intrfc: pointer): pointer <cimport,nodecl> end
global function lxb_dom_interface_destroy(intrfc: pointer): pointer <cimport,nodecl> end
lxb_dom_event_target = @record{
  events: pointer
}
global function lxb_dom_event_target_create(document: *lxb_dom_document_t): *lxb_dom_event_target_t <cimport,nodecl> end
global function lxb_dom_event_target_destroy(event_target: *lxb_dom_event_target_t, document: *lxb_dom_document_t): *lxb_dom_event_target_t <cimport,nodecl> end
global lxb_dom_node_simple_walker_f: type <cimport,nodecl> = @function(*lxb_dom_node_t, pointer): lexbor_action_t
global lxb_dom_node_type_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_DOM_NODE_TYPE_UNDEF = 0,
  LXB_DOM_NODE_TYPE_ELEMENT = 1,
  LXB_DOM_NODE_TYPE_ATTRIBUTE = 2,
  LXB_DOM_NODE_TYPE_TEXT = 3,
  LXB_DOM_NODE_TYPE_CDATA_SECTION = 4,
  LXB_DOM_NODE_TYPE_ENTITY_REFERENCE = 5,
  LXB_DOM_NODE_TYPE_ENTITY = 6,
  LXB_DOM_NODE_TYPE_PROCESSING_INSTRUCTION = 7,
  LXB_DOM_NODE_TYPE_COMMENT = 8,
  LXB_DOM_NODE_TYPE_DOCUMENT = 9,
  LXB_DOM_NODE_TYPE_DOCUMENT_TYPE = 10,
  LXB_DOM_NODE_TYPE_DOCUMENT_FRAGMENT = 11,
  LXB_DOM_NODE_TYPE_NOTATION = 12,
  LXB_DOM_NODE_TYPE_LAST_ENTRY = 13
}
lxb_dom_node = @record{
  event_target: lxb_dom_event_target_t,
  local_name: usize,
  prefix: usize,
  ns: usize,
  owner_document: *lxb_dom_document_t,
  next: *lxb_dom_node_t,
  prev: *lxb_dom_node_t,
  parent: *lxb_dom_node_t,
  first_child: *lxb_dom_node_t,
  last_child: *lxb_dom_node_t,
  user: pointer,
  type: lxb_dom_node_type_t
}
global function lxb_dom_node_interface_create(document: *lxb_dom_document_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_interface_clone(document: *lxb_dom_document_t, node: *lxb_dom_node_t, is_attr: boolean): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_interface_destroy(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_interface_copy(dst: *lxb_dom_node_t, src: *lxb_dom_node_t, is_attr: boolean): cuint <cimport,nodecl> end
global function lxb_dom_node_destroy(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_destroy_deep(root: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_clone(node: *lxb_dom_node_t, deep: boolean): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_name(node: *lxb_dom_node_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_node_insert_child(to: *lxb_dom_node_t, node: *lxb_dom_node_t): void <cimport,nodecl> end
global function lxb_dom_node_insert_before(to: *lxb_dom_node_t, node: *lxb_dom_node_t): void <cimport,nodecl> end
global function lxb_dom_node_insert_after(to: *lxb_dom_node_t, node: *lxb_dom_node_t): void <cimport,nodecl> end
global function lxb_dom_node_remove(node: *lxb_dom_node_t): void <cimport,nodecl> end
global function lxb_dom_node_replace_all(parent: *lxb_dom_node_t, node: *lxb_dom_node_t): cuint <cimport,nodecl> end
global function lxb_dom_node_simple_walk(root: *lxb_dom_node_t, walker_cb: lxb_dom_node_simple_walker_f, ctx: pointer): void <cimport,nodecl> end
global function lxb_dom_node_text_content(node: *lxb_dom_node_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_node_text_content_set(node: *lxb_dom_node_t, content: *cuchar, len: csize): cuint <cimport,nodecl> end
global function lxb_dom_node_is_empty(root: *lxb_dom_node_t): boolean <cimport,nodecl> end
global function lxb_dom_node_tag_id(node: *lxb_dom_node_t): culong <cimport,nodecl> end
global function lxb_dom_node_next(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_prev(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_parent(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_first_child(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_last_child(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_tag_id_noi(node: *lxb_dom_node_t): culong <cimport,nodecl> end
global function lxb_dom_node_next_noi(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_prev_noi(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_parent_noi(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_first_child_noi(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_node_last_child_noi(node: *lxb_dom_node_t): *lxb_dom_node_t <cimport,nodecl> end
global lxb_dom_attr_id_enum_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_DOM_ATTR__UNDEF = 0,
  LXB_DOM_ATTR_ACTIVE = 1,
  LXB_DOM_ATTR_ALT = 2,
  LXB_DOM_ATTR_CHARSER = 3,
  LXB_DOM_ATTR_CHECKED = 4,
  LXB_DOM_ATTR_CLASS = 5,
  LXB_DOM_ATTR_COLOR = 6,
  LXB_DOM_ATTR_CONTENT = 7,
  LXB_DOM_ATTR_DIR = 8,
  LXB_DOM_ATTR_DISABLED = 9,
  LXB_DOM_ATTR_FACE = 10,
  LXB_DOM_ATTR_FOCUS = 11,
  LXB_DOM_ATTR_FOR = 12,
  LXB_DOM_ATTR_HEIGHT = 13,
  LXB_DOM_ATTR_HOVER = 14,
  LXB_DOM_ATTR_HREF = 15,
  LXB_DOM_ATTR_HTML = 16,
  LXB_DOM_ATTR_HTTP_EQUIV = 17,
  LXB_DOM_ATTR_ID = 18,
  LXB_DOM_ATTR_IS = 19,
  LXB_DOM_ATTR_MAXLENGTH = 20,
  LXB_DOM_ATTR_PLACEHOLDER = 21,
  LXB_DOM_ATTR_POOL = 22,
  LXB_DOM_ATTR_PUBLIC = 23,
  LXB_DOM_ATTR_READONLY = 24,
  LXB_DOM_ATTR_REQUIRED = 25,
  LXB_DOM_ATTR_SCHEME = 26,
  LXB_DOM_ATTR_SELECTED = 27,
  LXB_DOM_ATTR_SIZE = 28,
  LXB_DOM_ATTR_SLOT = 29,
  LXB_DOM_ATTR_SRC = 30,
  LXB_DOM_ATTR_STYLE = 31,
  LXB_DOM_ATTR_SYSTEM = 32,
  LXB_DOM_ATTR_TITLE = 33,
  LXB_DOM_ATTR_TYPE = 34,
  LXB_DOM_ATTR_WIDTH = 35,
  LXB_DOM_ATTR__LAST_ENTRY = 36
}
global lxb_dom_document_cmode_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_DOM_DOCUMENT_CMODE_NO_QUIRKS = 0,
  LXB_DOM_DOCUMENT_CMODE_QUIRKS = 1,
  LXB_DOM_DOCUMENT_CMODE_LIMITED_QUIRKS = 2
}
global lxb_dom_document_dtype_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_DOM_DOCUMENT_DTYPE_UNDEF = 0,
  LXB_DOM_DOCUMENT_DTYPE_HTML = 1,
  LXB_DOM_DOCUMENT_DTYPE_XML = 2
}
lxb_dom_document = @record{
  node: lxb_dom_node_t,
  compat_mode: lxb_dom_document_cmode_t,
  type: lxb_dom_document_dtype_t,
  doctype: *lxb_dom_document_type_t,
  element: *lxb_dom_element_t,
  create_interface: lxb_dom_interface_create_f,
  clone_interface: lxb_dom_interface_clone_f,
  destroy_interface: lxb_dom_interface_destroy_f,
  mraw: *lexbor_mraw_t,
  text: *lexbor_mraw_t,
  tags: *lexbor_hash_t,
  attrs: *lexbor_hash_t,
  prefix: *lexbor_hash_t,
  ns: *lexbor_hash_t,
  parser: pointer,
  user: pointer,
  tags_inherited: boolean,
  ns_inherited: boolean,
  scripting: boolean
}
global function lxb_dom_document_interface_create(document: *lxb_dom_document_t): *lxb_dom_document_t <cimport,nodecl> end
global function lxb_dom_document_interface_clone(document: *lxb_dom_document_t, doc: *lxb_dom_document_t): *lxb_dom_document_t <cimport,nodecl> end
global function lxb_dom_document_interface_destroy(document: *lxb_dom_document_t): *lxb_dom_document_t <cimport,nodecl> end
global function lxb_dom_document_create(owner: *lxb_dom_document_t): *lxb_dom_document_t <cimport,nodecl> end
global function lxb_dom_document_init(document: *lxb_dom_document_t, owner: *lxb_dom_document_t, create_interface: lxb_dom_interface_create_f, clone_interface: lxb_dom_interface_clone_f, destroy_interface: lxb_dom_interface_destroy_f, type: lxb_dom_document_dtype_t, ns: cuint): cuint <cimport,nodecl> end
global function lxb_dom_document_clean(document: *lxb_dom_document_t): cuint <cimport,nodecl> end
global function lxb_dom_document_destroy(document: *lxb_dom_document_t): *lxb_dom_document_t <cimport,nodecl> end
global function lxb_dom_document_attach_doctype(document: *lxb_dom_document_t, doctype: *lxb_dom_document_type_t): void <cimport,nodecl> end
global function lxb_dom_document_attach_element(document: *lxb_dom_document_t, element: *lxb_dom_element_t): void <cimport,nodecl> end
global function lxb_dom_document_create_element(document: *lxb_dom_document_t, local_name: *cuchar, lname_len: csize, reserved_for_opt: pointer): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_document_destroy_element(element: *lxb_dom_element_t): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_document_create_document_fragment(document: *lxb_dom_document_t): *lxb_dom_document_fragment_t <cimport,nodecl> end
global function lxb_dom_document_create_text_node(document: *lxb_dom_document_t, data: *cuchar, len: csize): *lxb_dom_text_t <cimport,nodecl> end
global function lxb_dom_document_create_cdata_section(document: *lxb_dom_document_t, data: *cuchar, len: csize): *lxb_dom_cdata_section_t <cimport,nodecl> end
global function lxb_dom_document_create_processing_instruction(document: *lxb_dom_document_t, target: *cuchar, target_len: csize, data: *cuchar, data_len: csize): *lxb_dom_processing_instruction_t <cimport,nodecl> end
global function lxb_dom_document_create_comment(document: *lxb_dom_document_t, data: *cuchar, len: csize): *lxb_dom_comment_t <cimport,nodecl> end
global function lxb_dom_document_root(document: *lxb_dom_document_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_document_import_node(doc: *lxb_dom_document_t, node: *lxb_dom_node_t, deep: boolean): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_document_create_interface(document: *lxb_dom_document_t, tag_id: culong, ns: culong): pointer <cimport,nodecl> end
global function lxb_dom_document_destroy_interface(intrfc: pointer): pointer <cimport,nodecl> end
global function lxb_dom_document_create_struct(document: *lxb_dom_document_t, struct_size: csize): pointer <cimport,nodecl> end
global function lxb_dom_document_destroy_struct(document: *lxb_dom_document_t, structure: pointer): pointer <cimport,nodecl> end
global function lxb_dom_document_create_text(document: *lxb_dom_document_t, len: csize): *cuchar <cimport,nodecl> end
global function lxb_dom_document_destroy_text(document: *lxb_dom_document_t, text: *cuchar): pointer <cimport,nodecl> end
global function lxb_dom_document_element(document: *lxb_dom_document_t): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_document_scripting(document: *lxb_dom_document_t): boolean <cimport,nodecl> end
global function lxb_dom_document_scripting_set(document: *lxb_dom_document_t, scripting: boolean): void <cimport,nodecl> end
global function lxb_dom_document_owner(document: *lxb_dom_document_t): *lxb_dom_document_t <cimport,nodecl> end
global function lxb_dom_document_is_original(document: *lxb_dom_document_t): boolean <cimport,nodecl> end
global function lxb_dom_document_create_interface_noi(document: *lxb_dom_document_t, tag_id: culong, ns: culong): pointer <cimport,nodecl> end
global function lxb_dom_document_destroy_interface_noi(intrfc: pointer): pointer <cimport,nodecl> end
global function lxb_dom_document_create_struct_noi(document: *lxb_dom_document_t, struct_size: csize): pointer <cimport,nodecl> end
global function lxb_dom_document_destroy_struct_noi(document: *lxb_dom_document_t, structure: pointer): pointer <cimport,nodecl> end
global function lxb_dom_document_create_text_noi(document: *lxb_dom_document_t, len: csize): *cuchar <cimport,nodecl> end
global function lxb_dom_document_destroy_text_noi(document: *lxb_dom_document_t, text: *cuchar): pointer <cimport,nodecl> end
global function lxb_dom_document_element_noi(document: *lxb_dom_document_t): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_document_scripting_noi(document: *lxb_dom_document_t): boolean <cimport,nodecl> end
global function lxb_dom_document_scripting_set_noi(document: *lxb_dom_document_t, scripting: boolean): void <cimport,nodecl> end
global lxb_dom_attr_data_t: type <cimport,nodecl> = @record{
  entry: lexbor_hash_entry_t,
  attr_id: culong,
  ref_count: csize,
  read_only: boolean
}
lxb_dom_attr = @record{
  node: lxb_dom_node_t,
  upper_name: culong,
  qualified_name: culong,
  value: *lexbor_str_t,
  owner: *lxb_dom_element_t,
  next: *lxb_dom_attr_t,
  prev: *lxb_dom_attr_t
}
global function lxb_dom_attr_interface_create(document: *lxb_dom_document_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_attr_interface_clone(document: *lxb_dom_document_t, attr: *lxb_dom_attr_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_attr_interface_destroy(attr: *lxb_dom_attr_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_attr_set_name(attr: *lxb_dom_attr_t, local_name: *cuchar, local_name_len: csize, to_lowercase: boolean): cuint <cimport,nodecl> end
global function lxb_dom_attr_set_value(attr: *lxb_dom_attr_t, value: *cuchar, value_len: csize): cuint <cimport,nodecl> end
global function lxb_dom_attr_set_value_wo_copy(attr: *lxb_dom_attr_t, value: *cuchar, value_len: csize): cuint <cimport,nodecl> end
global function lxb_dom_attr_set_existing_value(attr: *lxb_dom_attr_t, value: *cuchar, value_len: csize): cuint <cimport,nodecl> end
global function lxb_dom_attr_clone_name_value(attr_from: *lxb_dom_attr_t, attr_to: *lxb_dom_attr_t): cuint <cimport,nodecl> end
global function lxb_dom_attr_compare(first: *lxb_dom_attr_t, second: *lxb_dom_attr_t): boolean <cimport,nodecl> end
global function lxb_dom_attr_data_undef(): *lxb_dom_attr_data_t <cimport,nodecl> end
global function lxb_dom_attr_data_by_id(hash: *lexbor_hash_t, attr_id: culong): *lxb_dom_attr_data_t <cimport,nodecl> end
global function lxb_dom_attr_data_by_local_name(hash: *lexbor_hash_t, name: *cuchar, length: csize): *lxb_dom_attr_data_t <cimport,nodecl> end
global function lxb_dom_attr_data_by_qualified_name(hash: *lexbor_hash_t, name: *cuchar, length: csize): *lxb_dom_attr_data_t <cimport,nodecl> end
global function lxb_dom_attr_qualified_name(attr: *lxb_dom_attr_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_attr_local_name(attr: *lxb_dom_attr_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_attr_value(attr: *lxb_dom_attr_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_attr_local_name_noi(attr: *lxb_dom_attr_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_attr_value_noi(attr: *lxb_dom_attr_t, len: *csize): *cuchar <cimport,nodecl> end
global lxb_html_token_attr: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_token_attr_t: type = @lxb_html_token_attr
global lxb_html_token_attr_type: type <cimport,nodecl,using,ctypedef> = @enum(cint){
  LXB_HTML_TOKEN_ATTR_TYPE_UNDEF = 0,
  LXB_HTML_TOKEN_ATTR_TYPE_NAME_NULL = 1,
  LXB_HTML_TOKEN_ATTR_TYPE_VALUE_NULL = 2
}
lxb_html_token_attr = @record{
  name_begin: *cuchar,
  name_end: *cuchar,
  value_begin: *cuchar,
  value_end: *cuchar,
  name: *lxb_dom_attr_data_t,
  value: *cuchar,
  value_size: csize,
  next: *lxb_html_token_attr_t,
  prev: *lxb_html_token_attr_t,
  type: cint
}
global function lxb_html_token_attr_create(dobj: *lexbor_dobject_t): *lxb_html_token_attr_t <cimport,nodecl> end
global function lxb_html_token_attr_clean(attr: *lxb_html_token_attr_t): void <cimport,nodecl> end
global function lxb_html_token_attr_destroy(attr: *lxb_html_token_attr_t, dobj: *lexbor_dobject_t): *lxb_html_token_attr_t <cimport,nodecl> end
global function lxb_html_token_attr_name(attr: *lxb_html_token_attr_t, length: *csize): *cuchar <cimport,nodecl> end
global lxb_tag_data_t: type <cimport,nodecl> = @record{
  entry: lexbor_hash_entry_t,
  tag_id: culong,
  ref_count: csize,
  read_only: boolean
}
global function lxb_tag_data_by_id(hash: *lexbor_hash_t, tag_id: culong): *lxb_tag_data_t <cimport,nodecl> end
global function lxb_tag_data_by_name(hash: *lexbor_hash_t, name: *cuchar, len: csize): *lxb_tag_data_t <cimport,nodecl> end
global function lxb_tag_data_by_name_upper(hash: *lexbor_hash_t, name: *cuchar, len: csize): *lxb_tag_data_t <cimport,nodecl> end
global function lxb_tag_name_by_id(hash: *lexbor_hash_t, tag_id: culong, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_tag_name_upper_by_id(hash: *lexbor_hash_t, tag_id: culong, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_tag_id_by_name(hash: *lexbor_hash_t, name: *cuchar, len: csize): culong <cimport,nodecl> end
global function lxb_tag_mraw(hash: *lexbor_hash_t): *lexbor_mraw_t <cimport,nodecl> end
global function lxb_tag_name_by_id_noi(hash: *lexbor_hash_t, tag_id: culong, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_tag_name_upper_by_id_noi(hash: *lexbor_hash_t, tag_id: culong, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_tag_id_by_name_noi(hash: *lexbor_hash_t, name: *cuchar, len: csize): culong <cimport,nodecl> end
global function lxb_tag_mraw_noi(hash: *lexbor_hash_t): *lexbor_mraw_t <cimport,nodecl> end
global lxb_html_token_type: type <cimport,nodecl,using,ctypedef> = @enum(cint){
  LXB_HTML_TOKEN_TYPE_OPEN = 0,
  LXB_HTML_TOKEN_TYPE_CLOSE = 1,
  LXB_HTML_TOKEN_TYPE_CLOSE_SELF = 2,
  LXB_HTML_TOKEN_TYPE_FORCE_QUIRKS = 4,
  LXB_HTML_TOKEN_TYPE_DONE = 8
}
global lxb_html_token_t: type <cimport,nodecl> = @record{
  begin: *cuchar,
  End: *cuchar,
  text_start: *cuchar,
  text_end: *cuchar,
  attr_first: *lxb_html_token_attr_t,
  attr_last: *lxb_html_token_attr_t,
  base_element: pointer,
  null_count: csize,
  tag_id: culong,
  type: cint
}
global function lxb_html_token_create(dobj: *lexbor_dobject_t): *lxb_html_token_t <cimport,nodecl> end
global function lxb_html_token_destroy(token: *lxb_html_token_t, dobj: *lexbor_dobject_t): *lxb_html_token_t <cimport,nodecl> end
global function lxb_html_token_attr_append(token: *lxb_html_token_t, dobj: *lexbor_dobject_t): *lxb_html_token_attr_t <cimport,nodecl> end
global function lxb_html_token_attr_remove(token: *lxb_html_token_t, attr: *lxb_html_token_attr_t): void <cimport,nodecl> end
global function lxb_html_token_attr_delete(token: *lxb_html_token_t, attr: *lxb_html_token_attr_t, dobj: *lexbor_dobject_t): void <cimport,nodecl> end
global function lxb_html_token_make_text(token: *lxb_html_token_t, str: *lexbor_str_t, mraw: *lexbor_mraw_t): cuint <cimport,nodecl> end
global function lxb_html_token_make_text_drop_null(token: *lxb_html_token_t, str: *lexbor_str_t, mraw: *lexbor_mraw_t): cuint <cimport,nodecl> end
global function lxb_html_token_make_text_replace_null(token: *lxb_html_token_t, str: *lexbor_str_t, mraw: *lexbor_mraw_t): cuint <cimport,nodecl> end
global function lxb_html_token_data_skip_ws_begin(token: *lxb_html_token_t): cuint <cimport,nodecl> end
global function lxb_html_token_data_skip_one_newline_begin(token: *lxb_html_token_t): cuint <cimport,nodecl> end
global function lxb_html_token_data_split_ws_begin(token: *lxb_html_token_t, ws_token: *lxb_html_token_t): cuint <cimport,nodecl> end
global function lxb_html_token_doctype_parse(token: *lxb_html_token_t, doc_type: *lxb_dom_document_type_t): cuint <cimport,nodecl> end
global function lxb_html_token_find_attr(tkz: *lxb_html_tokenizer_t, token: *lxb_html_token_t, name: *cuchar, name_len: csize): *lxb_html_token_attr_t <cimport,nodecl> end
global function lxb_html_token_clean(token: *lxb_html_token_t): void <cimport,nodecl> end
global function lxb_html_token_create_eof(dobj: *lexbor_dobject_t): *lxb_html_token_t <cimport,nodecl> end
global function lxb_html_token_clean_noi(token: *lxb_html_token_t): void <cimport,nodecl> end
global function lxb_html_token_create_eof_noi(dobj: *lexbor_dobject_t): *lxb_html_token_t <cimport,nodecl> end
global lxb_html_tree_error_id_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_HTML_RULES_ERROR_UNTO = 0,
  LXB_HTML_RULES_ERROR_UNCLTO = 1,
  LXB_HTML_RULES_ERROR_NUCH = 2,
  LXB_HTML_RULES_ERROR_UNCHTO = 3,
  LXB_HTML_RULES_ERROR_UNTOININMO = 4,
  LXB_HTML_RULES_ERROR_BADOTOININMO = 5,
  LXB_HTML_RULES_ERROR_DOTOINBEHTMO = 6,
  LXB_HTML_RULES_ERROR_UNCLTOINBEHTMO = 7,
  LXB_HTML_RULES_ERROR_DOTOINBEHEMO = 8,
  LXB_HTML_RULES_ERROR_UNCLTOINBEHEMO = 9,
  LXB_HTML_RULES_ERROR_DOTOINHEMO = 10,
  LXB_HTML_RULES_ERROR_NOVOHTELSTTAWITRSO = 11,
  LXB_HTML_RULES_ERROR_HETOINHEMO = 12,
  LXB_HTML_RULES_ERROR_UNCLTOINHEMO = 13,
  LXB_HTML_RULES_ERROR_TECLTOWIOPINHEMO = 14,
  LXB_HTML_RULES_ERROR_TEELISNOCUINHEMO = 15,
  LXB_HTML_RULES_ERROR_DOTOINHENOMO = 16,
  LXB_HTML_RULES_ERROR_DOTOAFHEMO = 17,
  LXB_HTML_RULES_ERROR_HETOAFHEMO = 18,
  LXB_HTML_RULES_ERROR_DOTOINBOMO = 19,
  LXB_HTML_RULES_ERROR_BAENOPELISWR = 20,
  LXB_HTML_RULES_ERROR_OPELISWR = 21,
  LXB_HTML_RULES_ERROR_UNELINOPELST = 22,
  LXB_HTML_RULES_ERROR_MIELINOPELST = 23,
  LXB_HTML_RULES_ERROR_NOBOELINSC = 24,
  LXB_HTML_RULES_ERROR_MIELINSC = 25,
  LXB_HTML_RULES_ERROR_UNELINSC = 26,
  LXB_HTML_RULES_ERROR_UNELINACFOST = 27,
  LXB_HTML_RULES_ERROR_UNENOFFI = 28,
  LXB_HTML_RULES_ERROR_CHINTATE = 29,
  LXB_HTML_RULES_ERROR_DOTOINTAMO = 30,
  LXB_HTML_RULES_ERROR_DOTOINSEMO = 31,
  LXB_HTML_RULES_ERROR_DOTOAFBOMO = 32,
  LXB_HTML_RULES_ERROR_DOTOINFRMO = 33,
  LXB_HTML_RULES_ERROR_DOTOAFFRMO = 34,
  LXB_HTML_RULES_ERROR_DOTOFOCOMO = 35,
  LXB_HTML_RULES_ERROR_LAST_ENTRY = 36
}
global lxb_html_tree_error_t: type <cimport,nodecl> = @record{
  id: lxb_html_tree_error_id_t
}
global function lxb_html_tree_error_add(parse_errors: *lexbor_array_obj_t, token: *lxb_html_token_t, id: lxb_html_tree_error_id_t): *lxb_html_tree_error_t <cimport,nodecl> end
global function lxb_html_node_is_void(node: *lxb_dom_node_t): boolean <cimport,nodecl> end
global function lxb_html_node_is_void_noi(node: *lxb_dom_node_t): boolean <cimport,nodecl> end
global lxb_html_tokenizer_state_f: type <cimport,nodecl> = @function(*lxb_html_tokenizer_t, *cuchar, *cuchar): *cuchar
global lxb_html_tokenizer_token_f: type <cimport,nodecl> = @function(*lxb_html_tokenizer_t, *lxb_html_token_t, pointer): *lxb_html_token_t
lxb_html_tokenizer = @record{
  state: lxb_html_tokenizer_state_f,
  state_return: lxb_html_tokenizer_state_f,
  callback_token_done: lxb_html_tokenizer_token_f,
  callback_token_ctx: pointer,
  tags: *lexbor_hash_t,
  attrs: *lexbor_hash_t,
  attrs_mraw: *lexbor_mraw_t,
  mraw: *lexbor_mraw_t,
  token: *lxb_html_token_t,
  dobj_token: *lexbor_dobject_t,
  dobj_token_attr: *lexbor_dobject_t,
  parse_errors: *lexbor_array_obj_t,
  tree: *lxb_html_tree_t,
  markup: *cuchar,
  temp: *cuchar,
  tmp_tag_id: culong,
  start: *cuchar,
  pos: *cuchar,
  End: *cuchar,
  begin: *cuchar,
  last: *cuchar,
  entity: *lexbor_sbst_entry_static_t,
  entity_match: *lexbor_sbst_entry_static_t,
  entity_start: usize,
  entity_end: usize,
  entity_length: uint32,
  entity_number: uint32,
  is_attribute: boolean,
  opt: cuint,
  status: cuint,
  is_eof: boolean,
  base: *lxb_html_tokenizer_t,
  ref_count: csize
}
global lxb_html_tokenizer_error_id_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_HTML_TOKENIZER_ERROR_ABCLOFEMCO = 0,
  LXB_HTML_TOKENIZER_ERROR_ABDOPUID = 1,
  LXB_HTML_TOKENIZER_ERROR_ABDOSYID = 2,
  LXB_HTML_TOKENIZER_ERROR_ABOFDIINNUCHRE = 3,
  LXB_HTML_TOKENIZER_ERROR_CDINHTCO = 4,
  LXB_HTML_TOKENIZER_ERROR_CHREOUUNRA = 5,
  LXB_HTML_TOKENIZER_ERROR_COCHININST = 6,
  LXB_HTML_TOKENIZER_ERROR_COCHRE = 7,
  LXB_HTML_TOKENIZER_ERROR_ENTAWIAT = 8,
  LXB_HTML_TOKENIZER_ERROR_DUAT = 9,
  LXB_HTML_TOKENIZER_ERROR_ENTAWITRSO = 10,
  LXB_HTML_TOKENIZER_ERROR_EOBETANA = 11,
  LXB_HTML_TOKENIZER_ERROR_EOINCD = 12,
  LXB_HTML_TOKENIZER_ERROR_EOINCO = 13,
  LXB_HTML_TOKENIZER_ERROR_EOINDO = 14,
  LXB_HTML_TOKENIZER_ERROR_EOINSCHTCOLITE = 15,
  LXB_HTML_TOKENIZER_ERROR_EOINTA = 16,
  LXB_HTML_TOKENIZER_ERROR_INCLCO = 17,
  LXB_HTML_TOKENIZER_ERROR_INOPCO = 18,
  LXB_HTML_TOKENIZER_ERROR_INCHSEAFDONA = 19,
  LXB_HTML_TOKENIZER_ERROR_INFICHOFTANA = 20,
  LXB_HTML_TOKENIZER_ERROR_MIATVA = 21,
  LXB_HTML_TOKENIZER_ERROR_MIDONA = 22,
  LXB_HTML_TOKENIZER_ERROR_MIDOPUID = 23,
  LXB_HTML_TOKENIZER_ERROR_MIDOSYID = 24,
  LXB_HTML_TOKENIZER_ERROR_MIENTANA = 25,
  LXB_HTML_TOKENIZER_ERROR_MIQUBEDOPUID = 26,
  LXB_HTML_TOKENIZER_ERROR_MIQUBEDOSYID = 27,
  LXB_HTML_TOKENIZER_ERROR_MISEAFCHRE = 28,
  LXB_HTML_TOKENIZER_ERROR_MIWHAFDOPUKE = 29,
  LXB_HTML_TOKENIZER_ERROR_MIWHAFDOSYKE = 30,
  LXB_HTML_TOKENIZER_ERROR_MIWHBEDONA = 31,
  LXB_HTML_TOKENIZER_ERROR_MIWHBEAT = 32,
  LXB_HTML_TOKENIZER_ERROR_MIWHBEDOPUANSYID = 33,
  LXB_HTML_TOKENIZER_ERROR_NECO = 34,
  LXB_HTML_TOKENIZER_ERROR_NOCHRE = 35,
  LXB_HTML_TOKENIZER_ERROR_NOININST = 36,
  LXB_HTML_TOKENIZER_ERROR_NOVOHTELSTTAWITRSO = 37,
  LXB_HTML_TOKENIZER_ERROR_NUCHRE = 38,
  LXB_HTML_TOKENIZER_ERROR_SUCHRE = 39,
  LXB_HTML_TOKENIZER_ERROR_SUININST = 40,
  LXB_HTML_TOKENIZER_ERROR_UNCHAFDOSYID = 41,
  LXB_HTML_TOKENIZER_ERROR_UNCHINATNA = 42,
  LXB_HTML_TOKENIZER_ERROR_UNCHINUNATVA = 43,
  LXB_HTML_TOKENIZER_ERROR_UNEQSIBEATNA = 44,
  LXB_HTML_TOKENIZER_ERROR_UNNUCH = 45,
  LXB_HTML_TOKENIZER_ERROR_UNQUMAINOFTANA = 46,
  LXB_HTML_TOKENIZER_ERROR_UNSOINTA = 47,
  LXB_HTML_TOKENIZER_ERROR_UNNACHRE = 48,
  LXB_HTML_TOKENIZER_ERROR_LAST_ENTRY = 49
}
global lxb_html_tokenizer_error_t: type <cimport,nodecl> = @record{
  pos: *cuchar,
  id: lxb_html_tokenizer_error_id_t
}
global function lxb_html_tokenizer_error_add(parse_errors: *lexbor_array_obj_t, pos: *cuchar, id: lxb_html_tokenizer_error_id_t): *lxb_html_tokenizer_error_t <cimport,nodecl> end
global lxb_html_tokenizer_eof: *cuchar <cimport,nodecl>
global function lxb_html_tokenizer_create(): *lxb_html_tokenizer_t <cimport,nodecl> end
global function lxb_html_tokenizer_init(tkz: *lxb_html_tokenizer_t): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_inherit(tkz_to: *lxb_html_tokenizer_t, tkz_from: *lxb_html_tokenizer_t): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_ref(tkz: *lxb_html_tokenizer_t): *lxb_html_tokenizer_t <cimport,nodecl> end
global function lxb_html_tokenizer_unref(tkz: *lxb_html_tokenizer_t): *lxb_html_tokenizer_t <cimport,nodecl> end
global function lxb_html_tokenizer_clean(tkz: *lxb_html_tokenizer_t): void <cimport,nodecl> end
global function lxb_html_tokenizer_destroy(tkz: *lxb_html_tokenizer_t): *lxb_html_tokenizer_t <cimport,nodecl> end
global function lxb_html_tokenizer_tags_make(tkz: *lxb_html_tokenizer_t, table_size: csize): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_tags_destroy(tkz: *lxb_html_tokenizer_t): void <cimport,nodecl> end
global function lxb_html_tokenizer_attrs_make(tkz: *lxb_html_tokenizer_t, table_size: csize): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_attrs_destroy(tkz: *lxb_html_tokenizer_t): void <cimport,nodecl> end
global function lxb_html_tokenizer_begin(tkz: *lxb_html_tokenizer_t): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_chunk(tkz: *lxb_html_tokenizer_t, data: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_end(tkz: *lxb_html_tokenizer_t): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_change_incoming(tkz: *lxb_html_tokenizer_t, pos: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_current_namespace(tkz: *lxb_html_tokenizer_t): culong <cimport,nodecl> end
global function lxb_html_tokenizer_set_state_by_tag(tkz: *lxb_html_tokenizer_t, scripting: boolean, tag_id: culong, ns: culong): void <cimport,nodecl> end
global function lxb_html_tokenizer_status_set(tkz: *lxb_html_tokenizer_t, status: cuint): void <cimport,nodecl> end
global function lxb_html_tokenizer_tags_set(tkz: *lxb_html_tokenizer_t, tags: *lexbor_hash_t): void <cimport,nodecl> end
global function lxb_html_tokenizer_tags(tkz: *lxb_html_tokenizer_t): *lexbor_hash_t <cimport,nodecl> end
global function lxb_html_tokenizer_attrs_set(tkz: *lxb_html_tokenizer_t, attrs: *lexbor_hash_t): void <cimport,nodecl> end
global function lxb_html_tokenizer_attrs(tkz: *lxb_html_tokenizer_t): *lexbor_hash_t <cimport,nodecl> end
global function lxb_html_tokenizer_attrs_mraw_set(tkz: *lxb_html_tokenizer_t, mraw: *lexbor_mraw_t): void <cimport,nodecl> end
global function lxb_html_tokenizer_attrs_mraw(tkz: *lxb_html_tokenizer_t): *lexbor_mraw_t <cimport,nodecl> end
global function lxb_html_tokenizer_callback_token_done_set(tkz: *lxb_html_tokenizer_t, call_func: lxb_html_tokenizer_token_f, ctx: pointer): void <cimport,nodecl> end
global function lxb_html_tokenizer_callback_token_done_ctx(tkz: *lxb_html_tokenizer_t): pointer <cimport,nodecl> end
global function lxb_html_tokenizer_state_set(tkz: *lxb_html_tokenizer_t, state: lxb_html_tokenizer_state_f): void <cimport,nodecl> end
global function lxb_html_tokenizer_tmp_tag_id_set(tkz: *lxb_html_tokenizer_t, tag_id: culong): void <cimport,nodecl> end
global function lxb_html_tokenizer_tree(tkz: *lxb_html_tokenizer_t): *lxb_html_tree_t <cimport,nodecl> end
global function lxb_html_tokenizer_tree_set(tkz: *lxb_html_tokenizer_t, tree: *lxb_html_tree_t): void <cimport,nodecl> end
global function lxb_html_tokenizer_mraw(tkz: *lxb_html_tokenizer_t): *lexbor_mraw_t <cimport,nodecl> end
global function lxb_html_tokenizer_temp_realloc(tkz: *lxb_html_tokenizer_t, size: csize): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_temp_append_data(tkz: *lxb_html_tokenizer_t, data: *cuchar): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_temp_append(tkz: *lxb_html_tokenizer_t, data: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_tokenizer_status_set_noi(tkz: *lxb_html_tokenizer_t, status: cuint): void <cimport,nodecl> end
global function lxb_html_tokenizer_callback_token_done_set_noi(tkz: *lxb_html_tokenizer_t, call_func: lxb_html_tokenizer_token_f, ctx: pointer): void <cimport,nodecl> end
global function lxb_html_tokenizer_callback_token_done_ctx_noi(tkz: *lxb_html_tokenizer_t): pointer <cimport,nodecl> end
global function lxb_html_tokenizer_state_set_noi(tkz: *lxb_html_tokenizer_t, state: lxb_html_tokenizer_state_f): void <cimport,nodecl> end
global function lxb_html_tokenizer_tmp_tag_id_set_noi(tkz: *lxb_html_tokenizer_t, tag_id: culong): void <cimport,nodecl> end
global function lxb_html_tokenizer_tree_noi(tkz: *lxb_html_tokenizer_t): *lxb_html_tree_t <cimport,nodecl> end
global function lxb_html_tokenizer_tree_set_noi(tkz: *lxb_html_tokenizer_t, tree: *lxb_html_tree_t): void <cimport,nodecl> end
global function lxb_html_tokenizer_mraw_noi(tkz: *lxb_html_tokenizer_t): *lexbor_mraw_t <cimport,nodecl> end
global function lxb_html_tokenizer_tags_noi(tkz: *lxb_html_tokenizer_t): *lexbor_hash_t <cimport,nodecl> end
global lxb_html_document: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_document_t: type = @lxb_html_document
global lxb_html_anchor_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_anchor_element_t: type = @lxb_html_anchor_element
global lxb_html_area_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_area_element_t: type = @lxb_html_area_element
global lxb_html_audio_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_audio_element_t: type = @lxb_html_audio_element
global lxb_html_br_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_br_element_t: type = @lxb_html_br_element
global lxb_html_base_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_base_element_t: type = @lxb_html_base_element
global lxb_html_body_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_body_element_t: type = @lxb_html_body_element
global lxb_html_button_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_button_element_t: type = @lxb_html_button_element
global lxb_html_canvas_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_canvas_element_t: type = @lxb_html_canvas_element
global lxb_html_d_list_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_d_list_element_t: type = @lxb_html_d_list_element
global lxb_html_data_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_data_element_t: type = @lxb_html_data_element
global lxb_html_data_list_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_data_list_element_t: type = @lxb_html_data_list_element
global lxb_html_details_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_details_element_t: type = @lxb_html_details_element
global lxb_html_dialog_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_dialog_element_t: type = @lxb_html_dialog_element
global lxb_html_directory_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_directory_element_t: type = @lxb_html_directory_element
global lxb_html_div_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_div_element_t: type = @lxb_html_div_element
global lxb_html_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_element_t: type = @lxb_html_element
global lxb_html_embed_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_embed_element_t: type = @lxb_html_embed_element
global lxb_html_field_set_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_field_set_element_t: type = @lxb_html_field_set_element
global lxb_html_font_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_font_element_t: type = @lxb_html_font_element
global lxb_html_form_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_form_element_t: type = @lxb_html_form_element
global lxb_html_frame_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_frame_element_t: type = @lxb_html_frame_element
global lxb_html_frame_set_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_frame_set_element_t: type = @lxb_html_frame_set_element
global lxb_html_hr_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_hr_element_t: type = @lxb_html_hr_element
global lxb_html_head_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_head_element_t: type = @lxb_html_head_element
global lxb_html_heading_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_heading_element_t: type = @lxb_html_heading_element
global lxb_html_html_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_html_element_t: type = @lxb_html_html_element
global lxb_html_iframe_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_iframe_element_t: type = @lxb_html_iframe_element
global lxb_html_image_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_image_element_t: type = @lxb_html_image_element
global lxb_html_input_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_input_element_t: type = @lxb_html_input_element
global lxb_html_li_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_li_element_t: type = @lxb_html_li_element
global lxb_html_label_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_label_element_t: type = @lxb_html_label_element
global lxb_html_legend_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_legend_element_t: type = @lxb_html_legend_element
global lxb_html_link_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_link_element_t: type = @lxb_html_link_element
global lxb_html_map_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_map_element_t: type = @lxb_html_map_element
global lxb_html_marquee_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_marquee_element_t: type = @lxb_html_marquee_element
global lxb_html_media_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_media_element_t: type = @lxb_html_media_element
global lxb_html_menu_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_menu_element_t: type = @lxb_html_menu_element
global lxb_html_meta_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_meta_element_t: type = @lxb_html_meta_element
global lxb_html_meter_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_meter_element_t: type = @lxb_html_meter_element
global lxb_html_mod_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_mod_element_t: type = @lxb_html_mod_element
global lxb_html_o_list_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_o_list_element_t: type = @lxb_html_o_list_element
global lxb_html_object_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_object_element_t: type = @lxb_html_object_element
global lxb_html_opt_group_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_opt_group_element_t: type = @lxb_html_opt_group_element
global lxb_html_option_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_option_element_t: type = @lxb_html_option_element
global lxb_html_output_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_output_element_t: type = @lxb_html_output_element
global lxb_html_paragraph_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_paragraph_element_t: type = @lxb_html_paragraph_element
global lxb_html_param_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_param_element_t: type = @lxb_html_param_element
global lxb_html_picture_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_picture_element_t: type = @lxb_html_picture_element
global lxb_html_pre_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_pre_element_t: type = @lxb_html_pre_element
global lxb_html_progress_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_progress_element_t: type = @lxb_html_progress_element
global lxb_html_quote_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_quote_element_t: type = @lxb_html_quote_element
global lxb_html_script_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_script_element_t: type = @lxb_html_script_element
global lxb_html_select_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_select_element_t: type = @lxb_html_select_element
global lxb_html_slot_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_slot_element_t: type = @lxb_html_slot_element
global lxb_html_source_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_source_element_t: type = @lxb_html_source_element
global lxb_html_span_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_span_element_t: type = @lxb_html_span_element
global lxb_html_style_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_style_element_t: type = @lxb_html_style_element
global lxb_html_table_caption_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_table_caption_element_t: type = @lxb_html_table_caption_element
global lxb_html_table_cell_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_table_cell_element_t: type = @lxb_html_table_cell_element
global lxb_html_table_col_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_table_col_element_t: type = @lxb_html_table_col_element
global lxb_html_table_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_table_element_t: type = @lxb_html_table_element
global lxb_html_table_row_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_table_row_element_t: type = @lxb_html_table_row_element
global lxb_html_table_section_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_table_section_element_t: type = @lxb_html_table_section_element
global lxb_html_template_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_template_element_t: type = @lxb_html_template_element
global lxb_html_text_area_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_text_area_element_t: type = @lxb_html_text_area_element
global lxb_html_time_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_time_element_t: type = @lxb_html_time_element
global lxb_html_title_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_title_element_t: type = @lxb_html_title_element
global lxb_html_track_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_track_element_t: type = @lxb_html_track_element
global lxb_html_u_list_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_u_list_element_t: type = @lxb_html_u_list_element
global lxb_html_unknown_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_unknown_element_t: type = @lxb_html_unknown_element
global lxb_html_video_element: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_video_element_t: type = @lxb_html_video_element
global lxb_html_window: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_html_window_t: type = @lxb_html_window
global function lxb_html_interface_create(document: *lxb_html_document_t, tag_id: culong, ns: culong): pointer <cimport,nodecl> end
global function lxb_html_interface_clone(document: *lxb_dom_document_t, intrfc: pointer): pointer <cimport,nodecl> end
global function lxb_html_interface_destroy(intrfc: pointer): pointer <cimport,nodecl> end
global lxb_html_document_ready_state_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_HTML_DOCUMENT_READY_STATE_UNDEF = 0,
  LXB_HTML_DOCUMENT_READY_STATE_LOADING = 1,
  LXB_HTML_DOCUMENT_READY_STATE_INTERACTIVE = 2,
  LXB_HTML_DOCUMENT_READY_STATE_COMPLETE = 3
}
global lxb_html_document_opt: type <cimport,nodecl,using,ctypedef> = @enum(cint){
  LXB_HTML_DOCUMENT_OPT_UNDEF = 0,
  LXB_HTML_DOCUMENT_PARSE_WO_COPY = 1
}
lxb_html_document = @record{
  dom_document: lxb_dom_document_t,
  iframe_srcdoc: pointer,
  head: *lxb_html_head_element_t,
  body: *lxb_html_body_element_t,
  ready_state: lxb_html_document_ready_state_t,
  opt: cuint
}
global function lxb_html_document_interface_create(document: *lxb_html_document_t): *lxb_html_document_t <cimport,nodecl> end
global function lxb_html_document_interface_destroy(document: *lxb_html_document_t): *lxb_html_document_t <cimport,nodecl> end
global function lxb_html_document_create(): *lxb_html_document_t <cimport,nodecl> end
global function lxb_html_document_clean(document: *lxb_html_document_t): void <cimport,nodecl> end
global function lxb_html_document_destroy(document: *lxb_html_document_t): *lxb_html_document_t <cimport,nodecl> end
global function lxb_html_document_parse(document: *lxb_html_document_t, html: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_document_parse_chunk_begin(document: *lxb_html_document_t): cuint <cimport,nodecl> end
global function lxb_html_document_parse_chunk(document: *lxb_html_document_t, html: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_document_parse_chunk_end(document: *lxb_html_document_t): cuint <cimport,nodecl> end
global function lxb_html_document_parse_fragment(document: *lxb_html_document_t, element: *lxb_dom_element_t, html: *cuchar, size: csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_document_parse_fragment_chunk_begin(document: *lxb_html_document_t, element: *lxb_dom_element_t): cuint <cimport,nodecl> end
global function lxb_html_document_parse_fragment_chunk(document: *lxb_html_document_t, html: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_document_parse_fragment_chunk_end(document: *lxb_html_document_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_document_title(document: *lxb_html_document_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_html_document_title_set(document: *lxb_html_document_t, title: *cuchar, len: csize): cuint <cimport,nodecl> end
global function lxb_html_document_title_raw(document: *lxb_html_document_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_html_document_import_node(doc: *lxb_html_document_t, node: *lxb_dom_node_t, deep: boolean): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_document_head_element(document: *lxb_html_document_t): *lxb_html_head_element_t <cimport,nodecl> end
global function lxb_html_document_body_element(document: *lxb_html_document_t): *lxb_html_body_element_t <cimport,nodecl> end
global function lxb_html_document_original_ref(document: *lxb_html_document_t): *lxb_dom_document_t <cimport,nodecl> end
global function lxb_html_document_is_original(document: *lxb_html_document_t): boolean <cimport,nodecl> end
global function lxb_html_document_mraw(document: *lxb_html_document_t): *lexbor_mraw_t <cimport,nodecl> end
global function lxb_html_document_mraw_text(document: *lxb_html_document_t): *lexbor_mraw_t <cimport,nodecl> end
global function lxb_html_document_opt_set(document: *lxb_html_document_t, opt: cuint): void <cimport,nodecl> end
global function lxb_html_document_tags(document: *lxb_html_document_t): *lexbor_hash_t <cimport,nodecl> end
global function lxb_html_document_create_struct(document: *lxb_html_document_t, struct_size: csize): pointer <cimport,nodecl> end
global function lxb_html_document_destroy_struct(document: *lxb_html_document_t, data: pointer): pointer <cimport,nodecl> end
global function lxb_html_document_create_element(document: *lxb_html_document_t, local_name: *cuchar, lname_len: csize, reserved_for_opt: pointer): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_document_destroy_element(element: *lxb_dom_element_t): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_html_document_head_element_noi(document: *lxb_html_document_t): *lxb_html_head_element_t <cimport,nodecl> end
global function lxb_html_document_body_element_noi(document: *lxb_html_document_t): *lxb_html_body_element_t <cimport,nodecl> end
global function lxb_html_document_original_ref_noi(document: *lxb_html_document_t): *lxb_dom_document_t <cimport,nodecl> end
global function lxb_html_document_is_original_noi(document: *lxb_html_document_t): boolean <cimport,nodecl> end
global function lxb_html_document_mraw_noi(document: *lxb_html_document_t): *lexbor_mraw_t <cimport,nodecl> end
global function lxb_html_document_mraw_text_noi(document: *lxb_html_document_t): *lexbor_mraw_t <cimport,nodecl> end
global function lxb_html_document_opt_set_noi(document: *lxb_html_document_t, opt: cuint): void <cimport,nodecl> end
global function lxb_html_document_opt_noi(document: *lxb_html_document_t): cuint <cimport,nodecl> end
global function lxb_html_document_create_struct_noi(document: *lxb_html_document_t, struct_size: csize): pointer <cimport,nodecl> end
global function lxb_html_document_destroy_struct_noi(document: *lxb_html_document_t, data: pointer): pointer <cimport,nodecl> end
global function lxb_html_document_create_element_noi(document: *lxb_html_document_t, local_name: *cuchar, lname_len: csize, reserved_for_opt: pointer): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_document_destroy_element_noi(element: *lxb_dom_element_t): *lxb_dom_element_t <cimport,nodecl> end
global lxb_html_tag_category: type <cimport,nodecl,using,ctypedef> = @enum(cint){
  LXB_HTML_TAG_CATEGORY__UNDEF = 0,
  LXB_HTML_TAG_CATEGORY_ORDINARY = 1,
  LXB_HTML_TAG_CATEGORY_SPECIAL = 2,
  LXB_HTML_TAG_CATEGORY_FORMATTING = 4,
  LXB_HTML_TAG_CATEGORY_SCOPE = 8,
  LXB_HTML_TAG_CATEGORY_SCOPE_LIST_ITEM = 16,
  LXB_HTML_TAG_CATEGORY_SCOPE_BUTTON = 32,
  LXB_HTML_TAG_CATEGORY_SCOPE_TABLE = 64,
  LXB_HTML_TAG_CATEGORY_SCOPE_SELECT = 128
}
global lxb_html_tag_fixname_t: type <cimport,nodecl> = @record{
  name: *cuchar,
  len: cuint
}
global lxb_html_tag_res_cats: [196][8]cint <cimport,nodecl>
global lxb_html_tag_res_fixname_svg: [196]lxb_html_tag_fixname_t <cimport,nodecl>
global function lxb_html_tag_is_category(tag_id: culong, ns: culong, cat: cint): boolean <cimport,nodecl> end
global function lxb_html_tag_fixname_svg(tag_id: culong): *lxb_html_tag_fixname_t <cimport,nodecl> end
global function lxb_html_tag_is_void(tag_id: culong): boolean <cimport,nodecl> end
global lxb_html_tree_insertion_mode_f: type <cimport,nodecl> = @function(*lxb_html_tree_t, *lxb_html_token_t): boolean
global lxb_html_tree_append_attr_f: type <cimport,nodecl> = @function(*lxb_html_tree_t, *lxb_dom_attr_t, pointer): cuint
global lxb_html_tree_pending_table_t: type <cimport,nodecl> = @record{
  text_list: *lexbor_array_obj_t,
  have_non_ws: boolean
}
lxb_html_tree = @record{
  tkz_ref: *lxb_html_tokenizer_t,
  document: *lxb_html_document_t,
  fragment: *lxb_dom_node_t,
  form: *lxb_html_form_element_t,
  open_elements: *lexbor_array_t,
  active_formatting: *lexbor_array_t,
  template_insertion_modes: *lexbor_array_obj_t,
  pending_table: lxb_html_tree_pending_table_t,
  parse_errors: *lexbor_array_obj_t,
  foster_parenting: boolean,
  frameset_ok: boolean,
  scripting: boolean,
  mode: lxb_html_tree_insertion_mode_f,
  original_mode: lxb_html_tree_insertion_mode_f,
  before_append_attr: lxb_html_tree_append_attr_f,
  status: cuint,
  ref_count: csize
}
global lxb_html_tree_insertion_position_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_HTML_TREE_INSERTION_POSITION_CHILD = 0,
  LXB_HTML_TREE_INSERTION_POSITION_BEFORE = 1
}
global function lxb_html_tree_create(): *lxb_html_tree_t <cimport,nodecl> end
global function lxb_html_tree_init(tree: *lxb_html_tree_t, tkz: *lxb_html_tokenizer_t): cuint <cimport,nodecl> end
global function lxb_html_tree_ref(tree: *lxb_html_tree_t): *lxb_html_tree_t <cimport,nodecl> end
global function lxb_html_tree_unref(tree: *lxb_html_tree_t): *lxb_html_tree_t <cimport,nodecl> end
global function lxb_html_tree_clean(tree: *lxb_html_tree_t): void <cimport,nodecl> end
global function lxb_html_tree_destroy(tree: *lxb_html_tree_t): *lxb_html_tree_t <cimport,nodecl> end
global function lxb_html_tree_stop_parsing(tree: *lxb_html_tree_t): cuint <cimport,nodecl> end
global function lxb_html_tree_process_abort(tree: *lxb_html_tree_t): boolean <cimport,nodecl> end
global function lxb_html_tree_parse_error(tree: *lxb_html_tree_t, token: *lxb_html_token_t, id: lxb_html_tree_error_id_t): void <cimport,nodecl> end
global function lxb_html_tree_construction_dispatcher(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_appropriate_place_inserting_node(tree: *lxb_html_tree_t, override_target: *lxb_dom_node_t, ipos: *lxb_html_tree_insertion_position_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_insert_foreign_element(tree: *lxb_html_tree_t, token: *lxb_html_token_t, ns: culong): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_tree_create_element_for_token(tree: *lxb_html_tree_t, token: *lxb_html_token_t, ns: culong, parent: *lxb_dom_node_t): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_tree_append_attributes(tree: *lxb_html_tree_t, element: *lxb_dom_element_t, token: *lxb_html_token_t, ns: culong): cuint <cimport,nodecl> end
global function lxb_html_tree_append_attributes_from_element(tree: *lxb_html_tree_t, element: *lxb_dom_element_t, from: *lxb_dom_element_t, ns: culong): cuint <cimport,nodecl> end
global function lxb_html_tree_adjust_mathml_attributes(tree: *lxb_html_tree_t, attr: *lxb_dom_attr_t, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_tree_adjust_svg_attributes(tree: *lxb_html_tree_t, attr: *lxb_dom_attr_t, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_tree_adjust_foreign_attributes(tree: *lxb_html_tree_t, attr: *lxb_dom_attr_t, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_tree_insert_character(tree: *lxb_html_tree_t, token: *lxb_html_token_t, ret_node: **lxb_dom_node_t): cuint <cimport,nodecl> end
global function lxb_html_tree_insert_character_for_data(tree: *lxb_html_tree_t, str: *lexbor_str_t, ret_node: **lxb_dom_node_t): cuint <cimport,nodecl> end
global function lxb_html_tree_insert_comment(tree: *lxb_html_tree_t, token: *lxb_html_token_t, pos: *lxb_dom_node_t): *lxb_dom_comment_t <cimport,nodecl> end
global function lxb_html_tree_create_document_type_from_token(tree: *lxb_html_tree_t, token: *lxb_html_token_t): *lxb_dom_document_type_t <cimport,nodecl> end
global function lxb_html_tree_node_delete_deep(tree: *lxb_html_tree_t, node: *lxb_dom_node_t): void <cimport,nodecl> end
global function lxb_html_tree_generic_rawtext_parsing(tree: *lxb_html_tree_t, token: *lxb_html_token_t): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_tree_generic_rcdata_parsing(tree: *lxb_html_tree_t, token: *lxb_html_token_t): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_tree_generate_implied_end_tags(tree: *lxb_html_tree_t, ex_tag: culong, ex_ns: culong): void <cimport,nodecl> end
global function lxb_html_tree_generate_all_implied_end_tags_thoroughly(tree: *lxb_html_tree_t, ex_tag: culong, ex_ns: culong): void <cimport,nodecl> end
global function lxb_html_tree_reset_insertion_mode_appropriately(tree: *lxb_html_tree_t): void <cimport,nodecl> end
global function lxb_html_tree_element_in_scope(tree: *lxb_html_tree_t, tag_id: culong, ns: culong, ct: cint): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_element_in_scope_by_node(tree: *lxb_html_tree_t, by_node: *lxb_dom_node_t, ct: cint): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_element_in_scope_h123456(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_element_in_scope_tbody_thead_tfoot(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_element_in_scope_td_th(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_check_scope_element(tree: *lxb_html_tree_t): boolean <cimport,nodecl> end
global function lxb_html_tree_close_p_element(tree: *lxb_html_tree_t, token: *lxb_html_token_t): void <cimport,nodecl> end
global function lxb_html_tree_adoption_agency_algorithm(tree: *lxb_html_tree_t, token: *lxb_html_token_t, status: *cuint): boolean <cimport,nodecl> end
global function lxb_html_tree_html_integration_point(node: *lxb_dom_node_t): boolean <cimport,nodecl> end
global function lxb_html_tree_adjust_attributes_mathml(tree: *lxb_html_tree_t, attr: *lxb_dom_attr_t, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_tree_adjust_attributes_svg(tree: *lxb_html_tree_t, attr: *lxb_dom_attr_t, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_tree_begin(tree: *lxb_html_tree_t, document: *lxb_html_document_t): cuint <cimport,nodecl> end
global function lxb_html_tree_chunk(tree: *lxb_html_tree_t, html: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_tree_end(tree: *lxb_html_tree_t): cuint <cimport,nodecl> end
global function lxb_html_tree_build(tree: *lxb_html_tree_t, document: *lxb_html_document_t, html: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_tree_create_node(tree: *lxb_html_tree_t, tag_id: culong, ns: culong): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_node_is(node: *lxb_dom_node_t, tag_id: culong): boolean <cimport,nodecl> end
global function lxb_html_tree_current_node(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_adjusted_current_node(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_insert_html_element(tree: *lxb_html_tree_t, token: *lxb_html_token_t): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_tree_insert_node(to: *lxb_dom_node_t, node: *lxb_dom_node_t, ipos: lxb_html_tree_insertion_position_t): void <cimport,nodecl> end
global function lxb_html_tree_acknowledge_token_self_closing(tree: *lxb_html_tree_t, token: *lxb_html_token_t): void <cimport,nodecl> end
global function lxb_html_tree_mathml_text_integration_point(node: *lxb_dom_node_t): boolean <cimport,nodecl> end
global function lxb_html_tree_scripting(tree: *lxb_html_tree_t): boolean <cimport,nodecl> end
global function lxb_html_tree_scripting_set(tree: *lxb_html_tree_t, scripting: boolean): void <cimport,nodecl> end
global function lxb_html_tree_attach_document(tree: *lxb_html_tree_t, doc: *lxb_html_document_t): void <cimport,nodecl> end
global function lxb_html_tree_begin_noi(tree: *lxb_html_tree_t, document: *lxb_html_document_t): cuint <cimport,nodecl> end
global function lxb_html_tree_chunk_noi(tree: *lxb_html_tree_t, html: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_tree_end_noi(tree: *lxb_html_tree_t): cuint <cimport,nodecl> end
global function lxb_html_tree_build_noi(tree: *lxb_html_tree_t, document: *lxb_html_document_t, html: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_tree_create_node_noi(tree: *lxb_html_tree_t, tag_id: culong, ns: culong): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_node_is_noi(node: *lxb_dom_node_t, tag_id: culong): boolean <cimport,nodecl> end
global function lxb_html_tree_current_node_noi(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_adjusted_current_node_noi(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_insert_html_element_noi(tree: *lxb_html_tree_t, token: *lxb_html_token_t): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_tree_insert_node_noi(to: *lxb_dom_node_t, node: *lxb_dom_node_t, ipos: lxb_html_tree_insertion_position_t): void <cimport,nodecl> end
global function lxb_html_tree_acknowledge_token_self_closing_noi(tree: *lxb_html_tree_t, token: *lxb_html_token_t): void <cimport,nodecl> end
global function lxb_html_tree_mathml_text_integration_point_noi(node: *lxb_dom_node_t): boolean <cimport,nodecl> end
global function lxb_html_tree_scripting_noi(tree: *lxb_html_tree_t): boolean <cimport,nodecl> end
global function lxb_html_tree_scripting_set_noi(tree: *lxb_html_tree_t, scripting: boolean): void <cimport,nodecl> end
global function lxb_html_tree_attach_document_noi(tree: *lxb_html_tree_t, doc: *lxb_html_document_t): void <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_initial(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_before_html(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_before_head(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_head(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_head_noscript(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_after_head(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_body(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_body_skip_new_line(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_body_skip_new_line_textarea(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_body_text_append(tree: *lxb_html_tree_t, str: *lexbor_str_t): cuint <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_text(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_table(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_table_anything_else(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_table_text(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_caption(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_column_group(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_table_body(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_row(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_cell(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_select(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_select_in_table(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_template(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_after_body(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_in_frameset(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_after_frameset(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_after_after_body(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_after_after_frameset(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global function lxb_html_tree_insertion_mode_foreign_content(tree: *lxb_html_tree_t, token: *lxb_html_token_t): boolean <cimport,nodecl> end
global lxb_html_tree_template_insertion_t: type <cimport,nodecl> = @record{
  mode: lxb_html_tree_insertion_mode_f
}
global function lxb_html_tree_template_insertion_current(tree: *lxb_html_tree_t): lxb_html_tree_insertion_mode_f <cimport,nodecl> end
global function lxb_html_tree_template_insertion_get(tree: *lxb_html_tree_t, idx: csize): lxb_html_tree_insertion_mode_f <cimport,nodecl> end
global function lxb_html_tree_template_insertion_first(tree: *lxb_html_tree_t): lxb_html_tree_insertion_mode_f <cimport,nodecl> end
global function lxb_html_tree_template_insertion_push(tree: *lxb_html_tree_t, mode: lxb_html_tree_insertion_mode_f): cuint <cimport,nodecl> end
global function lxb_html_tree_template_insertion_pop(tree: *lxb_html_tree_t): lxb_html_tree_insertion_mode_f <cimport,nodecl> end
global function lxb_html_tree_active_formatting_marker(): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_tree_active_formatting_up_to_last_marker(tree: *lxb_html_tree_t): void <cimport,nodecl> end
global function lxb_html_tree_active_formatting_remove_by_node(tree: *lxb_html_tree_t, node: *lxb_dom_node_t): void <cimport,nodecl> end
global function lxb_html_tree_active_formatting_find_by_node(tree: *lxb_html_tree_t, node: *lxb_dom_node_t, return_pos: *csize): boolean <cimport,nodecl> end
global function lxb_html_tree_active_formatting_find_by_node_reverse(tree: *lxb_html_tree_t, node: *lxb_dom_node_t, return_pos: *csize): boolean <cimport,nodecl> end
global function lxb_html_tree_active_formatting_reconstruct_elements(tree: *lxb_html_tree_t): cuint <cimport,nodecl> end
global function lxb_html_tree_active_formatting_between_last_marker(tree: *lxb_html_tree_t, tag_idx: culong, return_idx: *csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_active_formatting_push_with_check_dupl(tree: *lxb_html_tree_t, node: *lxb_dom_node_t): void <cimport,nodecl> end
global function lxb_html_tree_active_formatting_current_node(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_active_formatting_first(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_active_formatting_get(tree: *lxb_html_tree_t, idx: csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_active_formatting_push(tree: *lxb_html_tree_t, node: *lxb_dom_node_t): cuint <cimport,nodecl> end
global function lxb_html_tree_active_formatting_pop(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_active_formatting_push_marker(tree: *lxb_html_tree_t): cuint <cimport,nodecl> end
global function lxb_html_tree_active_formatting_insert(tree: *lxb_html_tree_t, node: *lxb_dom_node_t, idx: csize): cuint <cimport,nodecl> end
global function lxb_html_tree_active_formatting_remove(tree: *lxb_html_tree_t, idx: csize): void <cimport,nodecl> end
global function lxb_html_tree_open_elements_remove_by_node(tree: *lxb_html_tree_t, node: *lxb_dom_node_t): void <cimport,nodecl> end
global function lxb_html_tree_open_elements_pop_until_tag_id(tree: *lxb_html_tree_t, tag_id: culong, ns: culong, exclude: boolean): void <cimport,nodecl> end
global function lxb_html_tree_open_elements_pop_until_h123456(tree: *lxb_html_tree_t): void <cimport,nodecl> end
global function lxb_html_tree_open_elements_pop_until_td_th(tree: *lxb_html_tree_t): void <cimport,nodecl> end
global function lxb_html_tree_open_elements_pop_until_node(tree: *lxb_html_tree_t, node: *lxb_dom_node_t, exclude: boolean): void <cimport,nodecl> end
global function lxb_html_tree_open_elements_pop_until(tree: *lxb_html_tree_t, idx: csize, exclude: boolean): void <cimport,nodecl> end
global function lxb_html_tree_open_elements_find_by_node(tree: *lxb_html_tree_t, node: *lxb_dom_node_t, return_pos: *csize): boolean <cimport,nodecl> end
global function lxb_html_tree_open_elements_find_by_node_reverse(tree: *lxb_html_tree_t, node: *lxb_dom_node_t, return_pos: *csize): boolean <cimport,nodecl> end
global function lxb_html_tree_open_elements_find(tree: *lxb_html_tree_t, tag_id: culong, ns: culong, return_index: *csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_open_elements_find_reverse(tree: *lxb_html_tree_t, tag_id: culong, ns: culong, return_index: *csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_open_elements_first(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_open_elements_get(tree: *lxb_html_tree_t, idx: csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_open_elements_push(tree: *lxb_html_tree_t, node: *lxb_dom_node_t): cuint <cimport,nodecl> end
global function lxb_html_tree_open_elements_pop(tree: *lxb_html_tree_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_tree_open_elements_insert_after(tree: *lxb_html_tree_t, node: *lxb_dom_node_t, idx: csize): cuint <cimport,nodecl> end
global lxb_html_parser_state_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_HTML_PARSER_STATE_BEGIN = 0,
  LXB_HTML_PARSER_STATE_PROCESS = 1,
  LXB_HTML_PARSER_STATE_END = 2,
  LXB_HTML_PARSER_STATE_FRAGMENT_PROCESS = 3,
  LXB_HTML_PARSER_STATE_ERROR = 4
}
global lxb_html_parser_t: type <cimport,nodecl> = @record{
  tkz: *lxb_html_tokenizer_t,
  tree: *lxb_html_tree_t,
  original_tree: *lxb_html_tree_t,
  root: *lxb_dom_node_t,
  form: *lxb_dom_node_t,
  state: lxb_html_parser_state_t,
  status: cuint,
  ref_count: csize
}
global function lxb_html_parser_create(): *lxb_html_parser_t <cimport,nodecl> end
global function lxb_html_parser_init(parser: *lxb_html_parser_t): cuint <cimport,nodecl> end
global function lxb_html_parser_clean(parser: *lxb_html_parser_t): void <cimport,nodecl> end
global function lxb_html_parser_destroy(parser: *lxb_html_parser_t): *lxb_html_parser_t <cimport,nodecl> end
global function lxb_html_parser_ref(parser: *lxb_html_parser_t): *lxb_html_parser_t <cimport,nodecl> end
global function lxb_html_parser_unref(parser: *lxb_html_parser_t): *lxb_html_parser_t <cimport,nodecl> end
global function lxb_html_parse(parser: *lxb_html_parser_t, html: *cuchar, size: csize): *lxb_html_document_t <cimport,nodecl> end
global function lxb_html_parse_fragment(parser: *lxb_html_parser_t, element: *lxb_html_element_t, html: *cuchar, size: csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_parse_fragment_by_tag_id(parser: *lxb_html_parser_t, document: *lxb_html_document_t, tag_id: culong, ns: culong, html: *cuchar, size: csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_parse_chunk_begin(parser: *lxb_html_parser_t): *lxb_html_document_t <cimport,nodecl> end
global function lxb_html_parse_chunk_process(parser: *lxb_html_parser_t, html: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_parse_chunk_end(parser: *lxb_html_parser_t): cuint <cimport,nodecl> end
global function lxb_html_parse_fragment_chunk_begin(parser: *lxb_html_parser_t, document: *lxb_html_document_t, tag_id: culong, ns: culong): cuint <cimport,nodecl> end
global function lxb_html_parse_fragment_chunk_process(parser: *lxb_html_parser_t, html: *cuchar, size: csize): cuint <cimport,nodecl> end
global function lxb_html_parse_fragment_chunk_end(parser: *lxb_html_parser_t): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_html_parser_tokenizer(parser: *lxb_html_parser_t): *lxb_html_tokenizer_t <cimport,nodecl> end
global function lxb_html_parser_tree(parser: *lxb_html_parser_t): *lxb_html_tree_t <cimport,nodecl> end
global function lxb_html_parser_status(parser: *lxb_html_parser_t): cuint <cimport,nodecl> end
global function lxb_html_parser_state(parser: *lxb_html_parser_t): cuint <cimport,nodecl> end
global function lxb_html_parser_scripting(parser: *lxb_html_parser_t): boolean <cimport,nodecl> end
global function lxb_html_parser_scripting_set(parser: *lxb_html_parser_t, scripting: boolean): void <cimport,nodecl> end
global function lxb_html_parser_tokenizer_noi(parser: *lxb_html_parser_t): *lxb_html_tokenizer_t <cimport,nodecl> end
global function lxb_html_parser_tree_noi(parser: *lxb_html_parser_t): *lxb_html_tree_t <cimport,nodecl> end
global function lxb_html_parser_status_noi(parser: *lxb_html_parser_t): cuint <cimport,nodecl> end
global function lxb_html_parser_state_noi(parser: *lxb_html_parser_t): cuint <cimport,nodecl> end
global function lxb_html_parser_scripting_noi(parser: *lxb_html_parser_t): boolean <cimport,nodecl> end
global function lxb_html_parser_scripting_set_noi(parser: *lxb_html_parser_t, scripting: boolean): void <cimport,nodecl> end
global function lxb_html_tokenizer_state_rawtext_before(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_script_data_before(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_comment_before_start(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_doctype_before(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_data_before(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_plaintext_before(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_before_attribute_name(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_self_closing_start_tag(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_cr(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_char_ref(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_tokenizer_state_rcdata_before(tkz: *lxb_html_tokenizer_t, data: *cuchar, End: *cuchar): *cuchar <cimport,nodecl> end
global lxb_html_encoding_entry_t: type <cimport,nodecl> = @record{
  name: *cuchar,
  End: *cuchar
}
global lxb_html_encoding_t: type <cimport,nodecl> = @record{
  cache: lexbor_array_obj_t,
  result: lexbor_array_obj_t
}
global function lxb_html_encoding_init(em: *lxb_html_encoding_t): cuint <cimport,nodecl> end
global function lxb_html_encoding_destroy(em: *lxb_html_encoding_t, self_destroy: boolean): *lxb_html_encoding_t <cimport,nodecl> end
global function lxb_html_encoding_determine(em: *lxb_html_encoding_t, data: *cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_html_encoding_content(data: *cuchar, End: *cuchar, name_end: **cuchar): *cuchar <cimport,nodecl> end
global function lxb_html_encoding_create(): *lxb_html_encoding_t <cimport,nodecl> end
global function lxb_html_encoding_clean(em: *lxb_html_encoding_t): void <cimport,nodecl> end
global function lxb_html_encoding_meta_entry(em: *lxb_html_encoding_t, idx: csize): *lxb_html_encoding_entry_t <cimport,nodecl> end
global function lxb_html_encoding_meta_length(em: *lxb_html_encoding_t): csize <cimport,nodecl> end
global function lxb_html_encoding_meta_result(em: *lxb_html_encoding_t): *lexbor_array_obj_t <cimport,nodecl> end
global function lxb_html_encoding_create_noi(): *lxb_html_encoding_t <cimport,nodecl> end
global function lxb_html_encoding_clean_noi(em: *lxb_html_encoding_t): void <cimport,nodecl> end
global function lxb_html_encoding_meta_entry_noi(em: *lxb_html_encoding_t, idx: csize): *lxb_html_encoding_entry_t <cimport,nodecl> end
global function lxb_html_encoding_meta_length_noi(em: *lxb_html_encoding_t): csize <cimport,nodecl> end
global function lxb_html_encoding_meta_result_noi(em: *lxb_html_encoding_t): *lexbor_array_obj_t <cimport,nodecl> end
global lxb_dom_collection_t: type <cimport,nodecl> = @record{
  array: lexbor_array_t,
  document: *lxb_dom_document_t
}
global function lxb_dom_collection_create(document: *lxb_dom_document_t): *lxb_dom_collection_t <cimport,nodecl> end
global function lxb_dom_collection_init(col: *lxb_dom_collection_t, start_list_size: csize): cuint <cimport,nodecl> end
global function lxb_dom_collection_destroy(col: *lxb_dom_collection_t, self_destroy: boolean): *lxb_dom_collection_t <cimport,nodecl> end
global function lxb_dom_collection_make(document: *lxb_dom_document_t, start_list_size: csize): *lxb_dom_collection_t <cimport,nodecl> end
global function lxb_dom_collection_clean(col: *lxb_dom_collection_t): void <cimport,nodecl> end
global function lxb_dom_collection_append(col: *lxb_dom_collection_t, value: pointer): cuint <cimport,nodecl> end
global function lxb_dom_collection_element(col: *lxb_dom_collection_t, idx: csize): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_collection_node(col: *lxb_dom_collection_t, idx: csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_collection_length(col: *lxb_dom_collection_t): csize <cimport,nodecl> end
global function lxb_dom_collection_make_noi(document: *lxb_dom_document_t, start_list_size: csize): *lxb_dom_collection_t <cimport,nodecl> end
global function lxb_dom_collection_clean_noi(col: *lxb_dom_collection_t): void <cimport,nodecl> end
global function lxb_dom_collection_append_noi(col: *lxb_dom_collection_t, value: pointer): cuint <cimport,nodecl> end
global function lxb_dom_collection_element_noi(col: *lxb_dom_collection_t, idx: csize): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_collection_node_noi(col: *lxb_dom_collection_t, idx: csize): *lxb_dom_node_t <cimport,nodecl> end
global function lxb_dom_collection_length_noi(col: *lxb_dom_collection_t): csize <cimport,nodecl> end
global lxb_dom_element_custom_state_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_DOM_ELEMENT_CUSTOM_STATE_UNDEFINED = 0,
  LXB_DOM_ELEMENT_CUSTOM_STATE_FAILED = 1,
  LXB_DOM_ELEMENT_CUSTOM_STATE_UNCUSTOMIZED = 2,
  LXB_DOM_ELEMENT_CUSTOM_STATE_CUSTOM = 3
}
lxb_dom_element = @record{
  node: lxb_dom_node_t,
  upper_name: culong,
  qualified_name: culong,
  is_value: *lexbor_str_t,
  first_attr: *lxb_dom_attr_t,
  last_attr: *lxb_dom_attr_t,
  attr_id: *lxb_dom_attr_t,
  attr_class: *lxb_dom_attr_t,
  custom_state: lxb_dom_element_custom_state_t
}
global function lxb_dom_element_interface_create(document: *lxb_dom_document_t): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_element_interface_clone(document: *lxb_dom_document_t, element: *lxb_dom_element_t): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_element_interface_destroy(element: *lxb_dom_element_t): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_element_interface_copy(dst: *lxb_dom_element_t, src: *lxb_dom_element_t): cuint <cimport,nodecl> end
global function lxb_dom_element_create(document: *lxb_dom_document_t, local_name: *cuchar, lname_len: csize, ns_name: *cuchar, ns_len: csize, prefix: *cuchar, prefix_len: csize, is: *cuchar, is_len: csize, sync_custom: boolean): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_element_destroy(element: *lxb_dom_element_t): *lxb_dom_element_t <cimport,nodecl> end
global function lxb_dom_element_has_attributes(element: *lxb_dom_element_t): boolean <cimport,nodecl> end
global function lxb_dom_element_set_attribute(element: *lxb_dom_element_t, qualified_name: *cuchar, qn_len: csize, value: *cuchar, value_len: csize): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_get_attribute(element: *lxb_dom_element_t, qualified_name: *cuchar, qn_len: csize, value_len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_remove_attribute(element: *lxb_dom_element_t, qualified_name: *cuchar, qn_len: csize): cuint <cimport,nodecl> end
global function lxb_dom_element_has_attribute(element: *lxb_dom_element_t, qualified_name: *cuchar, qn_len: csize): boolean <cimport,nodecl> end
global function lxb_dom_element_attr_append(element: *lxb_dom_element_t, attr: *lxb_dom_attr_t): cuint <cimport,nodecl> end
global function lxb_dom_element_attr_remove(element: *lxb_dom_element_t, attr: *lxb_dom_attr_t): cuint <cimport,nodecl> end
global function lxb_dom_element_attr_by_name(element: *lxb_dom_element_t, qualified_name: *cuchar, length: csize): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_attr_by_local_name_data(element: *lxb_dom_element_t, data: *lxb_dom_attr_data_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_attr_by_id(element: *lxb_dom_element_t, attr_id: culong): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_attr_by_data(element: *lxb_dom_element_t, data: *lxb_dom_attr_data_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_compare(first: *lxb_dom_element_t, second: *lxb_dom_element_t): boolean <cimport,nodecl> end
global function lxb_dom_element_attr_is_exist(element: *lxb_dom_element_t, qualified_name: *cuchar, length: csize): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_is_set(element: *lxb_dom_element_t, is: *cuchar, is_len: csize): cuint <cimport,nodecl> end
global function lxb_dom_elements_by_tag_name(root: *lxb_dom_element_t, collection: *lxb_dom_collection_t, qualified_name: *cuchar, len: csize): cuint <cimport,nodecl> end
global function lxb_dom_elements_by_class_name(root: *lxb_dom_element_t, collection: *lxb_dom_collection_t, class_name: *cuchar, len: csize): cuint <cimport,nodecl> end
global function lxb_dom_elements_by_attr(root: *lxb_dom_element_t, collection: *lxb_dom_collection_t, qualified_name: *cuchar, qname_len: csize, value: *cuchar, value_len: csize, case_insensitive: boolean): cuint <cimport,nodecl> end
global function lxb_dom_elements_by_attr_begin(root: *lxb_dom_element_t, collection: *lxb_dom_collection_t, qualified_name: *cuchar, qname_len: csize, value: *cuchar, value_len: csize, case_insensitive: boolean): cuint <cimport,nodecl> end
global function lxb_dom_elements_by_attr_end(root: *lxb_dom_element_t, collection: *lxb_dom_collection_t, qualified_name: *cuchar, qname_len: csize, value: *cuchar, value_len: csize, case_insensitive: boolean): cuint <cimport,nodecl> end
global function lxb_dom_elements_by_attr_contain(root: *lxb_dom_element_t, collection: *lxb_dom_collection_t, qualified_name: *cuchar, qname_len: csize, value: *cuchar, value_len: csize, case_insensitive: boolean): cuint <cimport,nodecl> end
global function lxb_dom_element_qualified_name(element: *lxb_dom_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_qualified_name_upper(element: *lxb_dom_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_local_name(element: *lxb_dom_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_prefix(element: *lxb_dom_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_tag_name(element: *lxb_dom_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_id(element: *lxb_dom_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_class(element: *lxb_dom_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_is_custom(element: *lxb_dom_element_t): boolean <cimport,nodecl> end
global function lxb_dom_element_custom_is_defined(element: *lxb_dom_element_t): boolean <cimport,nodecl> end
global function lxb_dom_element_first_attribute(element: *lxb_dom_element_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_next_attribute(attr: *lxb_dom_attr_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_prev_attribute(attr: *lxb_dom_attr_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_last_attribute(element: *lxb_dom_element_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_id_attribute(element: *lxb_dom_element_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_class_attribute(element: *lxb_dom_element_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_tag_id(element: *lxb_dom_element_t): culong <cimport,nodecl> end
global function lxb_dom_element_ns_id(element: *lxb_dom_element_t): culong <cimport,nodecl> end
global function lxb_dom_element_id_noi(element: *lxb_dom_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_class_noi(element: *lxb_dom_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_element_is_custom_noi(element: *lxb_dom_element_t): boolean <cimport,nodecl> end
global function lxb_dom_element_custom_is_defined_noi(element: *lxb_dom_element_t): boolean <cimport,nodecl> end
global function lxb_dom_element_first_attribute_noi(element: *lxb_dom_element_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_next_attribute_noi(attr: *lxb_dom_attr_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_prev_attribute_noi(attr: *lxb_dom_attr_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_last_attribute_noi(element: *lxb_dom_element_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_id_attribute_noi(element: *lxb_dom_element_t): *lxb_dom_attr_t <cimport,nodecl> end
global function lxb_dom_element_class_attribute_noi(element: *lxb_dom_element_t): *lxb_dom_attr_t <cimport,nodecl> end
global lxb_html_serialize_opt: type <cimport,nodecl,using,ctypedef> = @enum(cint){
  LXB_HTML_SERIALIZE_OPT_UNDEF = 0,
  LXB_HTML_SERIALIZE_OPT_SKIP_WS_NODES = 1,
  LXB_HTML_SERIALIZE_OPT_SKIP_COMMENT = 2,
  LXB_HTML_SERIALIZE_OPT_RAW = 4,
  LXB_HTML_SERIALIZE_OPT_WITHOUT_CLOSING = 8,
  LXB_HTML_SERIALIZE_OPT_TAG_WITH_NS = 16,
  LXB_HTML_SERIALIZE_OPT_WITHOUT_TEXT_INDENT = 32,
  LXB_HTML_SERIALIZE_OPT_FULL_DOCTYPE = 64
}
global lxb_html_serialize_cb_f: type <cimport,nodecl> = @function(*cuchar, csize, pointer): cuint
global function lxb_html_serialize_cb(node: *lxb_dom_node_t, cb: lxb_html_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_serialize_str(node: *lxb_dom_node_t, str: *lexbor_str_t): cuint <cimport,nodecl> end
global function lxb_html_serialize_tree_cb(node: *lxb_dom_node_t, cb: lxb_html_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_serialize_tree_str(node: *lxb_dom_node_t, str: *lexbor_str_t): cuint <cimport,nodecl> end
global function lxb_html_serialize_deep_cb(node: *lxb_dom_node_t, cb: lxb_html_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_serialize_deep_str(node: *lxb_dom_node_t, str: *lexbor_str_t): cuint <cimport,nodecl> end
global function lxb_html_serialize_pretty_cb(node: *lxb_dom_node_t, opt: cint, indent: csize, cb: lxb_html_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_serialize_pretty_str(node: *lxb_dom_node_t, opt: cint, indent: csize, str: *lexbor_str_t): cuint <cimport,nodecl> end
global function lxb_html_serialize_pretty_tree_cb(node: *lxb_dom_node_t, opt: cint, indent: csize, cb: lxb_html_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_serialize_pretty_tree_str(node: *lxb_dom_node_t, opt: cint, indent: csize, str: *lexbor_str_t): cuint <cimport,nodecl> end
global function lxb_html_serialize_pretty_deep_cb(node: *lxb_dom_node_t, opt: cint, indent: csize, cb: lxb_html_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_html_serialize_pretty_deep_str(node: *lxb_dom_node_t, opt: cint, indent: csize, str: *lexbor_str_t): cuint <cimport,nodecl> end
lxb_html_element = @record{
  element: lxb_dom_element_t
}
global function lxb_html_element_interface_create(document: *lxb_html_document_t): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_element_interface_destroy(element: *lxb_html_element_t): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_element_inner_html_set(element: *lxb_html_element_t, html: *cuchar, size: csize): *lxb_html_element_t <cimport,nodecl> end
global function lxb_html_element_tag_id(element: *lxb_html_element_t): culong <cimport,nodecl> end
global function lxb_html_element_ns_id(element: *lxb_html_element_t): culong <cimport,nodecl> end
lxb_html_media_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_media_element_interface_create(document: *lxb_html_document_t): *lxb_html_media_element_t <cimport,nodecl> end
global function lxb_html_media_element_interface_destroy(media_element: *lxb_html_media_element_t): *lxb_html_media_element_t <cimport,nodecl> end
lxb_html_video_element = @record{
  media_element: lxb_html_media_element_t
}
global function lxb_html_video_element_interface_create(document: *lxb_html_document_t): *lxb_html_video_element_t <cimport,nodecl> end
global function lxb_html_video_element_interface_destroy(video_element: *lxb_html_video_element_t): *lxb_html_video_element_t <cimport,nodecl> end
lxb_html_data_list_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_data_list_element_interface_create(document: *lxb_html_document_t): *lxb_html_data_list_element_t <cimport,nodecl> end
global function lxb_html_data_list_element_interface_destroy(data_list_element: *lxb_html_data_list_element_t): *lxb_html_data_list_element_t <cimport,nodecl> end
lxb_html_picture_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_picture_element_interface_create(document: *lxb_html_document_t): *lxb_html_picture_element_t <cimport,nodecl> end
global function lxb_html_picture_element_interface_destroy(picture_element: *lxb_html_picture_element_t): *lxb_html_picture_element_t <cimport,nodecl> end
lxb_html_field_set_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_field_set_element_interface_create(document: *lxb_html_document_t): *lxb_html_field_set_element_t <cimport,nodecl> end
global function lxb_html_field_set_element_interface_destroy(field_set_element: *lxb_html_field_set_element_t): *lxb_html_field_set_element_t <cimport,nodecl> end
lxb_html_quote_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_quote_element_interface_create(document: *lxb_html_document_t): *lxb_html_quote_element_t <cimport,nodecl> end
global function lxb_html_quote_element_interface_destroy(quote_element: *lxb_html_quote_element_t): *lxb_html_quote_element_t <cimport,nodecl> end
lxb_html_li_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_li_element_interface_create(document: *lxb_html_document_t): *lxb_html_li_element_t <cimport,nodecl> end
global function lxb_html_li_element_interface_destroy(li_element: *lxb_html_li_element_t): *lxb_html_li_element_t <cimport,nodecl> end
lxb_html_progress_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_progress_element_interface_create(document: *lxb_html_document_t): *lxb_html_progress_element_t <cimport,nodecl> end
global function lxb_html_progress_element_interface_destroy(progress_element: *lxb_html_progress_element_t): *lxb_html_progress_element_t <cimport,nodecl> end
lxb_html_iframe_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_iframe_element_interface_create(document: *lxb_html_document_t): *lxb_html_iframe_element_t <cimport,nodecl> end
global function lxb_html_iframe_element_interface_destroy(iframe_element: *lxb_html_iframe_element_t): *lxb_html_iframe_element_t <cimport,nodecl> end
lxb_html_style_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_style_element_interface_create(document: *lxb_html_document_t): *lxb_html_style_element_t <cimport,nodecl> end
global function lxb_html_style_element_interface_destroy(style_element: *lxb_html_style_element_t): *lxb_html_style_element_t <cimport,nodecl> end
lxb_html_select_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_select_element_interface_create(document: *lxb_html_document_t): *lxb_html_select_element_t <cimport,nodecl> end
global function lxb_html_select_element_interface_destroy(select_element: *lxb_html_select_element_t): *lxb_html_select_element_t <cimport,nodecl> end
lxb_html_details_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_details_element_interface_create(document: *lxb_html_document_t): *lxb_html_details_element_t <cimport,nodecl> end
global function lxb_html_details_element_interface_destroy(details_element: *lxb_html_details_element_t): *lxb_html_details_element_t <cimport,nodecl> end
lxb_html_div_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_div_element_interface_create(document: *lxb_html_document_t): *lxb_html_div_element_t <cimport,nodecl> end
global function lxb_html_div_element_interface_destroy(div_element: *lxb_html_div_element_t): *lxb_html_div_element_t <cimport,nodecl> end
lxb_html_d_list_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_d_list_element_interface_create(document: *lxb_html_document_t): *lxb_html_d_list_element_t <cimport,nodecl> end
global function lxb_html_d_list_element_interface_destroy(d_list_element: *lxb_html_d_list_element_t): *lxb_html_d_list_element_t <cimport,nodecl> end
lxb_html_html_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_html_element_interface_create(document: *lxb_html_document_t): *lxb_html_html_element_t <cimport,nodecl> end
global function lxb_html_html_element_interface_destroy(html_element: *lxb_html_html_element_t): *lxb_html_html_element_t <cimport,nodecl> end
lxb_html_map_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_map_element_interface_create(document: *lxb_html_document_t): *lxb_html_map_element_t <cimport,nodecl> end
global function lxb_html_map_element_interface_destroy(map_element: *lxb_html_map_element_t): *lxb_html_map_element_t <cimport,nodecl> end
lxb_html_br_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_br_element_interface_create(document: *lxb_html_document_t): *lxb_html_br_element_t <cimport,nodecl> end
global function lxb_html_br_element_interface_destroy(br_element: *lxb_html_br_element_t): *lxb_html_br_element_t <cimport,nodecl> end
lxb_html_text_area_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_text_area_element_interface_create(document: *lxb_html_document_t): *lxb_html_text_area_element_t <cimport,nodecl> end
global function lxb_html_text_area_element_interface_destroy(text_area_element: *lxb_html_text_area_element_t): *lxb_html_text_area_element_t <cimport,nodecl> end
lxb_html_legend_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_legend_element_interface_create(document: *lxb_html_document_t): *lxb_html_legend_element_t <cimport,nodecl> end
global function lxb_html_legend_element_interface_destroy(legend_element: *lxb_html_legend_element_t): *lxb_html_legend_element_t <cimport,nodecl> end
lxb_html_slot_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_slot_element_interface_create(document: *lxb_html_document_t): *lxb_html_slot_element_t <cimport,nodecl> end
global function lxb_html_slot_element_interface_destroy(slot_element: *lxb_html_slot_element_t): *lxb_html_slot_element_t <cimport,nodecl> end
lxb_html_body_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_body_element_interface_create(document: *lxb_html_document_t): *lxb_html_body_element_t <cimport,nodecl> end
global function lxb_html_body_element_interface_destroy(body_element: *lxb_html_body_element_t): *lxb_html_body_element_t <cimport,nodecl> end
lxb_html_param_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_param_element_interface_create(document: *lxb_html_document_t): *lxb_html_param_element_t <cimport,nodecl> end
global function lxb_html_param_element_interface_destroy(param_element: *lxb_html_param_element_t): *lxb_html_param_element_t <cimport,nodecl> end
lxb_html_track_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_track_element_interface_create(document: *lxb_html_document_t): *lxb_html_track_element_t <cimport,nodecl> end
global function lxb_html_track_element_interface_destroy(track_element: *lxb_html_track_element_t): *lxb_html_track_element_t <cimport,nodecl> end
lxb_html_frame_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_frame_element_interface_create(document: *lxb_html_document_t): *lxb_html_frame_element_t <cimport,nodecl> end
global function lxb_html_frame_element_interface_destroy(frame_element: *lxb_html_frame_element_t): *lxb_html_frame_element_t <cimport,nodecl> end
lxb_html_span_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_span_element_interface_create(document: *lxb_html_document_t): *lxb_html_span_element_t <cimport,nodecl> end
global function lxb_html_span_element_interface_destroy(span_element: *lxb_html_span_element_t): *lxb_html_span_element_t <cimport,nodecl> end
lxb_html_meta_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_meta_element_interface_create(document: *lxb_html_document_t): *lxb_html_meta_element_t <cimport,nodecl> end
global function lxb_html_meta_element_interface_destroy(meta_element: *lxb_html_meta_element_t): *lxb_html_meta_element_t <cimport,nodecl> end
lxb_html_hr_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_hr_element_interface_create(document: *lxb_html_document_t): *lxb_html_hr_element_t <cimport,nodecl> end
global function lxb_html_hr_element_interface_destroy(hr_element: *lxb_html_hr_element_t): *lxb_html_hr_element_t <cimport,nodecl> end
lxb_html_marquee_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_marquee_element_interface_create(document: *lxb_html_document_t): *lxb_html_marquee_element_t <cimport,nodecl> end
global function lxb_html_marquee_element_interface_destroy(marquee_element: *lxb_html_marquee_element_t): *lxb_html_marquee_element_t <cimport,nodecl> end
lxb_html_data_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_data_element_interface_create(document: *lxb_html_document_t): *lxb_html_data_element_t <cimport,nodecl> end
global function lxb_html_data_element_interface_destroy(data_element: *lxb_html_data_element_t): *lxb_html_data_element_t <cimport,nodecl> end
lxb_html_window = @record{
  event_target: lxb_dom_event_target_t
}
global function lxb_html_window_create(document: *lxb_html_document_t): *lxb_html_window_t <cimport,nodecl> end
global function lxb_html_window_destroy(window: *lxb_html_window_t): *lxb_html_window_t <cimport,nodecl> end
lxb_html_heading_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_heading_element_interface_create(document: *lxb_html_document_t): *lxb_html_heading_element_t <cimport,nodecl> end
global function lxb_html_heading_element_interface_destroy(heading_element: *lxb_html_heading_element_t): *lxb_html_heading_element_t <cimport,nodecl> end
lxb_dom_document_fragment = @record{
  node: lxb_dom_node_t,
  host: *lxb_dom_element_t
}
global function lxb_dom_document_fragment_interface_create(document: *lxb_dom_document_t): *lxb_dom_document_fragment_t <cimport,nodecl> end
global function lxb_dom_document_fragment_interface_destroy(document_fragment: *lxb_dom_document_fragment_t): *lxb_dom_document_fragment_t <cimport,nodecl> end
lxb_html_template_element = @record{
  element: lxb_html_element_t,
  content: *lxb_dom_document_fragment_t
}
global function lxb_html_template_element_interface_create(document: *lxb_html_document_t): *lxb_html_template_element_t <cimport,nodecl> end
global function lxb_html_template_element_interface_destroy(template_element: *lxb_html_template_element_t): *lxb_html_template_element_t <cimport,nodecl> end
lxb_html_source_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_source_element_interface_create(document: *lxb_html_document_t): *lxb_html_source_element_t <cimport,nodecl> end
global function lxb_html_source_element_interface_destroy(source_element: *lxb_html_source_element_t): *lxb_html_source_element_t <cimport,nodecl> end
lxb_html_canvas_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_canvas_element_interface_create(document: *lxb_html_document_t): *lxb_html_canvas_element_t <cimport,nodecl> end
global function lxb_html_canvas_element_interface_destroy(canvas_element: *lxb_html_canvas_element_t): *lxb_html_canvas_element_t <cimport,nodecl> end
lxb_html_embed_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_embed_element_interface_create(document: *lxb_html_document_t): *lxb_html_embed_element_t <cimport,nodecl> end
global function lxb_html_embed_element_interface_destroy(embed_element: *lxb_html_embed_element_t): *lxb_html_embed_element_t <cimport,nodecl> end
lxb_html_title_element = @record{
  element: lxb_html_element_t,
  strict_text: *lexbor_str_t
}
global function lxb_html_title_element_interface_create(document: *lxb_html_document_t): *lxb_html_title_element_t <cimport,nodecl> end
global function lxb_html_title_element_interface_destroy(title_element: *lxb_html_title_element_t): *lxb_html_title_element_t <cimport,nodecl> end
global function lxb_html_title_element_text(title: *lxb_html_title_element_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_html_title_element_strict_text(title: *lxb_html_title_element_t, len: *csize): *cuchar <cimport,nodecl> end
lxb_html_o_list_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_o_list_element_interface_create(document: *lxb_html_document_t): *lxb_html_o_list_element_t <cimport,nodecl> end
global function lxb_html_o_list_element_interface_destroy(o_list_element: *lxb_html_o_list_element_t): *lxb_html_o_list_element_t <cimport,nodecl> end
lxb_html_output_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_output_element_interface_create(document: *lxb_html_document_t): *lxb_html_output_element_t <cimport,nodecl> end
global function lxb_html_output_element_interface_destroy(output_element: *lxb_html_output_element_t): *lxb_html_output_element_t <cimport,nodecl> end
lxb_html_frame_set_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_frame_set_element_interface_create(document: *lxb_html_document_t): *lxb_html_frame_set_element_t <cimport,nodecl> end
global function lxb_html_frame_set_element_interface_destroy(frame_set_element: *lxb_html_frame_set_element_t): *lxb_html_frame_set_element_t <cimport,nodecl> end
lxb_html_directory_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_directory_element_interface_create(document: *lxb_html_document_t): *lxb_html_directory_element_t <cimport,nodecl> end
global function lxb_html_directory_element_interface_destroy(directory_element: *lxb_html_directory_element_t): *lxb_html_directory_element_t <cimport,nodecl> end
lxb_html_mod_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_mod_element_interface_create(document: *lxb_html_document_t): *lxb_html_mod_element_t <cimport,nodecl> end
global function lxb_html_mod_element_interface_destroy(mod_element: *lxb_html_mod_element_t): *lxb_html_mod_element_t <cimport,nodecl> end
lxb_html_unknown_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_unknown_element_interface_create(document: *lxb_html_document_t): *lxb_html_unknown_element_t <cimport,nodecl> end
global function lxb_html_unknown_element_interface_destroy(unknown_element: *lxb_html_unknown_element_t): *lxb_html_unknown_element_t <cimport,nodecl> end
lxb_html_menu_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_menu_element_interface_create(document: *lxb_html_document_t): *lxb_html_menu_element_t <cimport,nodecl> end
global function lxb_html_menu_element_interface_destroy(menu_element: *lxb_html_menu_element_t): *lxb_html_menu_element_t <cimport,nodecl> end
lxb_html_button_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_button_element_interface_create(document: *lxb_html_document_t): *lxb_html_button_element_t <cimport,nodecl> end
global function lxb_html_button_element_interface_destroy(button_element: *lxb_html_button_element_t): *lxb_html_button_element_t <cimport,nodecl> end
lxb_html_time_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_time_element_interface_create(document: *lxb_html_document_t): *lxb_html_time_element_t <cimport,nodecl> end
global function lxb_html_time_element_interface_destroy(time_element: *lxb_html_time_element_t): *lxb_html_time_element_t <cimport,nodecl> end
lxb_html_base_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_base_element_interface_create(document: *lxb_html_document_t): *lxb_html_base_element_t <cimport,nodecl> end
global function lxb_html_base_element_interface_destroy(base_element: *lxb_html_base_element_t): *lxb_html_base_element_t <cimport,nodecl> end
lxb_html_meter_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_meter_element_interface_create(document: *lxb_html_document_t): *lxb_html_meter_element_t <cimport,nodecl> end
global function lxb_html_meter_element_interface_destroy(meter_element: *lxb_html_meter_element_t): *lxb_html_meter_element_t <cimport,nodecl> end
lxb_html_table_section_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_table_section_element_interface_create(document: *lxb_html_document_t): *lxb_html_table_section_element_t <cimport,nodecl> end
global function lxb_html_table_section_element_interface_destroy(table_section_element: *lxb_html_table_section_element_t): *lxb_html_table_section_element_t <cimport,nodecl> end
lxb_html_head_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_head_element_interface_create(document: *lxb_html_document_t): *lxb_html_head_element_t <cimport,nodecl> end
global function lxb_html_head_element_interface_destroy(head_element: *lxb_html_head_element_t): *lxb_html_head_element_t <cimport,nodecl> end
lxb_html_input_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_input_element_interface_create(document: *lxb_html_document_t): *lxb_html_input_element_t <cimport,nodecl> end
global function lxb_html_input_element_interface_destroy(input_element: *lxb_html_input_element_t): *lxb_html_input_element_t <cimport,nodecl> end
lxb_html_label_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_label_element_interface_create(document: *lxb_html_document_t): *lxb_html_label_element_t <cimport,nodecl> end
global function lxb_html_label_element_interface_destroy(label_element: *lxb_html_label_element_t): *lxb_html_label_element_t <cimport,nodecl> end
lxb_html_u_list_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_u_list_element_interface_create(document: *lxb_html_document_t): *lxb_html_u_list_element_t <cimport,nodecl> end
global function lxb_html_u_list_element_interface_destroy(u_list_element: *lxb_html_u_list_element_t): *lxb_html_u_list_element_t <cimport,nodecl> end
lxb_html_paragraph_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_paragraph_element_interface_create(document: *lxb_html_document_t): *lxb_html_paragraph_element_t <cimport,nodecl> end
global function lxb_html_paragraph_element_interface_destroy(paragraph_element: *lxb_html_paragraph_element_t): *lxb_html_paragraph_element_t <cimport,nodecl> end
lxb_html_audio_element = @record{
  media_element: lxb_html_media_element_t
}
global function lxb_html_audio_element_interface_create(document: *lxb_html_document_t): *lxb_html_audio_element_t <cimport,nodecl> end
global function lxb_html_audio_element_interface_destroy(audio_element: *lxb_html_audio_element_t): *lxb_html_audio_element_t <cimport,nodecl> end
lxb_html_image_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_image_element_interface_create(document: *lxb_html_document_t): *lxb_html_image_element_t <cimport,nodecl> end
global function lxb_html_image_element_interface_destroy(image_element: *lxb_html_image_element_t): *lxb_html_image_element_t <cimport,nodecl> end
lxb_html_link_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_link_element_interface_create(document: *lxb_html_document_t): *lxb_html_link_element_t <cimport,nodecl> end
global function lxb_html_link_element_interface_destroy(link_element: *lxb_html_link_element_t): *lxb_html_link_element_t <cimport,nodecl> end
lxb_html_opt_group_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_opt_group_element_interface_create(document: *lxb_html_document_t): *lxb_html_opt_group_element_t <cimport,nodecl> end
global function lxb_html_opt_group_element_interface_destroy(opt_group_element: *lxb_html_opt_group_element_t): *lxb_html_opt_group_element_t <cimport,nodecl> end
lxb_html_table_col_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_table_col_element_interface_create(document: *lxb_html_document_t): *lxb_html_table_col_element_t <cimport,nodecl> end
global function lxb_html_table_col_element_interface_destroy(table_col_element: *lxb_html_table_col_element_t): *lxb_html_table_col_element_t <cimport,nodecl> end
lxb_html_object_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_object_element_interface_create(document: *lxb_html_document_t): *lxb_html_object_element_t <cimport,nodecl> end
global function lxb_html_object_element_interface_destroy(object_element: *lxb_html_object_element_t): *lxb_html_object_element_t <cimport,nodecl> end
lxb_html_dialog_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_dialog_element_interface_create(document: *lxb_html_document_t): *lxb_html_dialog_element_t <cimport,nodecl> end
global function lxb_html_dialog_element_interface_destroy(dialog_element: *lxb_html_dialog_element_t): *lxb_html_dialog_element_t <cimport,nodecl> end
lxb_html_option_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_option_element_interface_create(document: *lxb_html_document_t): *lxb_html_option_element_t <cimport,nodecl> end
global function lxb_html_option_element_interface_destroy(option_element: *lxb_html_option_element_t): *lxb_html_option_element_t <cimport,nodecl> end
lxb_html_pre_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_pre_element_interface_create(document: *lxb_html_document_t): *lxb_html_pre_element_t <cimport,nodecl> end
global function lxb_html_pre_element_interface_destroy(pre_element: *lxb_html_pre_element_t): *lxb_html_pre_element_t <cimport,nodecl> end
lxb_html_form_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_form_element_interface_create(document: *lxb_html_document_t): *lxb_html_form_element_t <cimport,nodecl> end
global function lxb_html_form_element_interface_destroy(form_element: *lxb_html_form_element_t): *lxb_html_form_element_t <cimport,nodecl> end
lxb_html_table_caption_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_table_caption_element_interface_create(document: *lxb_html_document_t): *lxb_html_table_caption_element_t <cimport,nodecl> end
global function lxb_html_table_caption_element_interface_destroy(table_caption_element: *lxb_html_table_caption_element_t): *lxb_html_table_caption_element_t <cimport,nodecl> end
lxb_html_anchor_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_anchor_element_interface_create(document: *lxb_html_document_t): *lxb_html_anchor_element_t <cimport,nodecl> end
global function lxb_html_anchor_element_interface_destroy(anchor_element: *lxb_html_anchor_element_t): *lxb_html_anchor_element_t <cimport,nodecl> end
lxb_html_script_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_script_element_interface_create(document: *lxb_html_document_t): *lxb_html_script_element_t <cimport,nodecl> end
global function lxb_html_script_element_interface_destroy(script_element: *lxb_html_script_element_t): *lxb_html_script_element_t <cimport,nodecl> end
lxb_html_font_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_font_element_interface_create(document: *lxb_html_document_t): *lxb_html_font_element_t <cimport,nodecl> end
global function lxb_html_font_element_interface_destroy(font_element: *lxb_html_font_element_t): *lxb_html_font_element_t <cimport,nodecl> end
lxb_html_table_cell_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_table_cell_element_interface_create(document: *lxb_html_document_t): *lxb_html_table_cell_element_t <cimport,nodecl> end
global function lxb_html_table_cell_element_interface_destroy(table_cell_element: *lxb_html_table_cell_element_t): *lxb_html_table_cell_element_t <cimport,nodecl> end
lxb_html_table_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_table_element_interface_create(document: *lxb_html_document_t): *lxb_html_table_element_t <cimport,nodecl> end
global function lxb_html_table_element_interface_destroy(table_element: *lxb_html_table_element_t): *lxb_html_table_element_t <cimport,nodecl> end
lxb_html_table_row_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_table_row_element_interface_create(document: *lxb_html_document_t): *lxb_html_table_row_element_t <cimport,nodecl> end
global function lxb_html_table_row_element_interface_destroy(table_row_element: *lxb_html_table_row_element_t): *lxb_html_table_row_element_t <cimport,nodecl> end
lxb_html_area_element = @record{
  element: lxb_html_element_t
}
global function lxb_html_area_element_interface_create(document: *lxb_html_document_t): *lxb_html_area_element_t <cimport,nodecl> end
global function lxb_html_area_element_interface_destroy(area_element: *lxb_html_area_element_t): *lxb_html_area_element_t <cimport,nodecl> end
global lxb_dom_shadow_root_mode_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_DOM_SHADOW_ROOT_MODE_OPEN = 0,
  LXB_DOM_SHADOW_ROOT_MODE_CLOSED = 1
}
lxb_dom_shadow_root = @record{
  document_fragment: lxb_dom_document_fragment_t,
  mode: lxb_dom_shadow_root_mode_t,
  host: *lxb_dom_element_t
}
global function lxb_dom_shadow_root_interface_create(document: *lxb_dom_document_t): *lxb_dom_shadow_root_t <cimport,nodecl> end
global function lxb_dom_shadow_root_interface_destroy(shadow_root: *lxb_dom_shadow_root_t): *lxb_dom_shadow_root_t <cimport,nodecl> end
lxb_dom_character_data = @record{
  node: lxb_dom_node_t,
  data: lexbor_str_t
}
global function lxb_dom_character_data_interface_create(document: *lxb_dom_document_t): *lxb_dom_character_data_t <cimport,nodecl> end
global function lxb_dom_character_data_interface_clone(document: *lxb_dom_document_t, ch_data: *lxb_dom_character_data_t): *lxb_dom_character_data_t <cimport,nodecl> end
global function lxb_dom_character_data_interface_destroy(character_data: *lxb_dom_character_data_t): *lxb_dom_character_data_t <cimport,nodecl> end
global function lxb_dom_character_data_interface_copy(dst: *lxb_dom_character_data_t, src: *lxb_dom_character_data_t): cuint <cimport,nodecl> end
global function lxb_dom_character_data_replace(ch_data: *lxb_dom_character_data_t, data: *cuchar, len: csize, offset: csize, count: csize): cuint <cimport,nodecl> end
lxb_dom_text = @record{
  char_data: lxb_dom_character_data_t
}
global function lxb_dom_text_interface_create(document: *lxb_dom_document_t): *lxb_dom_text_t <cimport,nodecl> end
global function lxb_dom_text_interface_clone(document: *lxb_dom_document_t, text: *lxb_dom_text_t): *lxb_dom_text_t <cimport,nodecl> end
global function lxb_dom_text_interface_destroy(text: *lxb_dom_text_t): *lxb_dom_text_t <cimport,nodecl> end
global function lxb_dom_text_interface_copy(dst: *lxb_dom_text_t, src: *lxb_dom_text_t): cuint <cimport,nodecl> end
lxb_dom_cdata_section = @record{
  text: lxb_dom_text_t
}
global function lxb_dom_cdata_section_interface_create(document: *lxb_dom_document_t): *lxb_dom_cdata_section_t <cimport,nodecl> end
global function lxb_dom_cdata_section_interface_clone(document: *lxb_dom_document_t, cdata: *lxb_dom_cdata_section_t): *lxb_dom_cdata_section_t <cimport,nodecl> end
global function lxb_dom_cdata_section_interface_destroy(cdata_section: *lxb_dom_cdata_section_t): *lxb_dom_cdata_section_t <cimport,nodecl> end
lxb_dom_comment = @record{
  char_data: lxb_dom_character_data_t
}
global function lxb_dom_comment_interface_create(document: *lxb_dom_document_t): *lxb_dom_comment_t <cimport,nodecl> end
global function lxb_dom_comment_interface_clone(document: *lxb_dom_document_t, text: *lxb_dom_comment_t): *lxb_dom_comment_t <cimport,nodecl> end
global function lxb_dom_comment_interface_destroy(comment: *lxb_dom_comment_t): *lxb_dom_comment_t <cimport,nodecl> end
global function lxb_dom_comment_interface_copy(dst: *lxb_dom_comment_t, src: *lxb_dom_comment_t): cuint <cimport,nodecl> end
lxb_dom_document_type = @record{
  node: lxb_dom_node_t,
  name: culong,
  public_id: lexbor_str_t,
  system_id: lexbor_str_t
}
global function lxb_dom_document_type_interface_create(document: *lxb_dom_document_t): *lxb_dom_document_type_t <cimport,nodecl> end
global function lxb_dom_document_type_interface_clone(document: *lxb_dom_document_t, dtype: *lxb_dom_document_type_t): *lxb_dom_document_type_t <cimport,nodecl> end
global function lxb_dom_document_type_interface_destroy(document_type: *lxb_dom_document_type_t): *lxb_dom_document_type_t <cimport,nodecl> end
global lxb_empty: [1]cuchar <cimport,nodecl>
global function lxb_dom_document_type_name(doc_type: *lxb_dom_document_type_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_document_type_public_id(doc_type: *lxb_dom_document_type_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_document_type_system_id(doc_type: *lxb_dom_document_type_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_document_type_name_noi(doc_type: *lxb_dom_document_type_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_document_type_public_id_noi(doc_type: *lxb_dom_document_type_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_document_type_system_id_noi(doc_type: *lxb_dom_document_type_t, len: *csize): *cuchar <cimport,nodecl> end
lxb_dom_processing_instruction = @record{
  char_data: lxb_dom_character_data_t,
  target: lexbor_str_t
}
global function lxb_dom_processing_instruction_interface_create(document: *lxb_dom_document_t): *lxb_dom_processing_instruction_t <cimport,nodecl> end
global function lxb_dom_processing_instruction_interface_clone(document: *lxb_dom_document_t, processing_instruction: *lxb_dom_processing_instruction_t): *lxb_dom_processing_instruction_t <cimport,nodecl> end
global function lxb_dom_processing_instruction_interface_destroy(processing_instruction: *lxb_dom_processing_instruction_t): *lxb_dom_processing_instruction_t <cimport,nodecl> end
global function lxb_dom_processing_instruction_copy(dst: *lxb_dom_processing_instruction_t, src: *lxb_dom_processing_instruction_t): cuint <cimport,nodecl> end
global function lxb_dom_processing_instruction_target(pi: *lxb_dom_processing_instruction_t, len: *csize): *cuchar <cimport,nodecl> end
global function lxb_dom_processing_instruction_target_noi(pi: *lxb_dom_processing_instruction_t, len: *csize): *cuchar <cimport,nodecl> end
global lxb_css_parser: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_parser_t: type = @lxb_css_parser
global lxb_css_parser_stack: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_parser_stack_t: type = @lxb_css_parser_stack
global lxb_css_parser_error: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_parser_error_t: type = @lxb_css_parser_error
global lxb_css_syntax_tokenizer: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_syntax_tokenizer_t: type = @lxb_css_syntax_tokenizer
global lxb_css_syntax_token: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_syntax_token_t: type = @lxb_css_syntax_token
global lxb_css_parser_state_f: type <cimport,nodecl> = @function(*lxb_css_parser_t, *lxb_css_syntax_token_t, pointer): boolean
global lxb_css_log_type_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_LOG_INFO = 0,
  LXB_CSS_LOG_WARNING = 1,
  LXB_CSS_LOG_ERROR = 2,
  LXB_CSS_LOG_SYNTAX_ERROR = 3
}
global lxb_css_log_message_t: type <cimport,nodecl> = @record{
  text: lexbor_str_t,
  type: lxb_css_log_type_t
}
global lxb_css_log_t: type <cimport,nodecl> = @record{
  messages: lexbor_array_obj_t,
  mraw: *lexbor_mraw_t,
  self_mraw: boolean
}
global function lxb_css_log_create(): *lxb_css_log_t <cimport,nodecl> end
global function lxb_css_log_init(log: *lxb_css_log_t, mraw: *lexbor_mraw_t): cuint <cimport,nodecl> end
global function lxb_css_log_clean(log: *lxb_css_log_t): void <cimport,nodecl> end
global function lxb_css_log_destroy(log: *lxb_css_log_t, self_destroy: boolean): *lxb_css_log_t <cimport,nodecl> end
global function lxb_css_log_append(log: *lxb_css_log_t, type: lxb_css_log_type_t, str: *cuchar, length: csize): *lxb_css_log_message_t <cimport,nodecl> end
global function lxb_css_log_push(log: *lxb_css_log_t, type: lxb_css_log_type_t, length: csize): *lxb_css_log_message_t <cimport,nodecl> end
global function lxb_css_log_format(log: *lxb_css_log_t, type: lxb_css_log_type_t, format: cstring, ...: cvarargs): *lxb_css_log_message_t <cimport,nodecl> end
global function lxb_css_log_not_supported(log: *lxb_css_log_t, module_name: cstring, description: cstring): *lxb_css_log_message_t <cimport,nodecl> end
global function lxb_css_log_type_by_id(type: lxb_css_log_type_t, out_length: *csize): *cuchar <cimport,nodecl> end
global function lxb_css_log_serialize(log: *lxb_css_log_t, cb: lexbor_serialize_cb_f, ctx: pointer, indent: *cuchar, indent_length: csize): cuint <cimport,nodecl> end
global function lxb_css_log_serialize_char(log: *lxb_css_log_t, out_length: *csize, indent: *cuchar, indent_length: csize): *cuchar <cimport,nodecl> end
global function lxb_css_log_message_serialize(msg: *lxb_css_log_message_t, cb: lexbor_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_css_log_message_serialize_char(msg: *lxb_css_log_message_t, out_length: *csize): *cuchar <cimport,nodecl> end
global function lxb_css_log_length(log: *lxb_css_log_t): csize <cimport,nodecl> end
global lxb_css_type_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_TYPE_UNDEF = 0,
  LXB_CSS_TYPE_STYLESHEET = 1,
  LXB_CSS_TYPE_SELECTOR = 2
}
global lxb_css_node_t: type <cimport,nodecl> = @record{
  type: lxb_css_type_t,
  next: pointer,
  prev: pointer,
  parent: pointer
}
global lexbor_plog_entry_t: type <cimport,nodecl> = @record{
  data: *cuchar,
  context: pointer,
  id: cuint
}
global lexbor_plog_t: type <cimport,nodecl> = @record{
  list: lexbor_array_obj_t
}
global function lexbor_plog_init(plog: *lexbor_plog_t, init_size: csize, struct_size: csize): cuint <cimport,nodecl> end
global function lexbor_plog_destroy(plog: *lexbor_plog_t, self_destroy: boolean): *lexbor_plog_t <cimport,nodecl> end
global function lexbor_plog_create(): *lexbor_plog_t <cimport,nodecl> end
global function lexbor_plog_clean(plog: *lexbor_plog_t): void <cimport,nodecl> end
global function lexbor_plog_push(plog: *lexbor_plog_t, data: *cuchar, ctx: pointer, id: cuint): pointer <cimport,nodecl> end
global function lexbor_plog_length(plog: *lexbor_plog_t): csize <cimport,nodecl> end
global function lexbor_plog_create_noi(): *lexbor_plog_t <cimport,nodecl> end
global function lexbor_plog_clean_noi(plog: *lexbor_plog_t): void <cimport,nodecl> end
global function lexbor_plog_push_noi(plog: *lexbor_plog_t, data: *cuchar, ctx: pointer, id: cuint): pointer <cimport,nodecl> end
global function lexbor_plog_length_noi(plog: *lexbor_plog_t): csize <cimport,nodecl> end
global lxb_css_syntax_token_data: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_syntax_token_data_t: type = @lxb_css_syntax_token_data
global lxb_css_syntax_token_data_cb_f: type <cimport,nodecl> = @function(*cuchar, *cuchar, *lexbor_str_t, *lexbor_mraw_t, *lxb_css_syntax_token_data_t): *cuchar
global lxb_css_syntax_token_cb_f: type <cimport,nodecl> = @function(*cuchar, csize, pointer): cuint
lxb_css_syntax_token_data = @record{
  cb: lxb_css_syntax_token_data_cb_f,
  status: cuint,
  count: cint,
  num: uint32,
  is_last: boolean
}
global lxb_css_syntax_token_type_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SYNTAX_TOKEN_UNDEF = 0,
  LXB_CSS_SYNTAX_TOKEN_IDENT = 1,
  LXB_CSS_SYNTAX_TOKEN_FUNCTION = 2,
  LXB_CSS_SYNTAX_TOKEN_AT_KEYWORD = 3,
  LXB_CSS_SYNTAX_TOKEN_HASH = 4,
  LXB_CSS_SYNTAX_TOKEN_STRING = 5,
  LXB_CSS_SYNTAX_TOKEN_BAD_STRING = 6,
  LXB_CSS_SYNTAX_TOKEN_URL = 7,
  LXB_CSS_SYNTAX_TOKEN_BAD_URL = 8,
  LXB_CSS_SYNTAX_TOKEN_COMMENT = 9,
  LXB_CSS_SYNTAX_TOKEN_WHITESPACE = 10,
  LXB_CSS_SYNTAX_TOKEN_DIMENSION = 11,
  LXB_CSS_SYNTAX_TOKEN_DELIM = 12,
  LXB_CSS_SYNTAX_TOKEN_NUMBER = 13,
  LXB_CSS_SYNTAX_TOKEN_PERCENTAGE = 14,
  LXB_CSS_SYNTAX_TOKEN_CDO = 15,
  LXB_CSS_SYNTAX_TOKEN_CDC = 16,
  LXB_CSS_SYNTAX_TOKEN_COLON = 17,
  LXB_CSS_SYNTAX_TOKEN_SEMICOLON = 18,
  LXB_CSS_SYNTAX_TOKEN_COMMA = 19,
  LXB_CSS_SYNTAX_TOKEN_LS_BRACKET = 20,
  LXB_CSS_SYNTAX_TOKEN_RS_BRACKET = 21,
  LXB_CSS_SYNTAX_TOKEN_L_PARENTHESIS = 22,
  LXB_CSS_SYNTAX_TOKEN_R_PARENTHESIS = 23,
  LXB_CSS_SYNTAX_TOKEN_LC_BRACKET = 24,
  LXB_CSS_SYNTAX_TOKEN_RC_BRACKET = 25,
  LXB_CSS_SYNTAX_TOKEN__EOF = 26,
  LXB_CSS_SYNTAX_TOKEN__LAST_ENTRY = 27
}
global lxb_css_syntax_token_base: type <cimport,nodecl,ctypedef> = @record{
  begin: *cuchar,
  End: *cuchar,
  user_id: usize
}
global lxb_css_syntax_token_base_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_number: type <cimport,nodecl,ctypedef> = @record{
  base: lxb_css_syntax_token_base_t,
  num: float64,
  is_float: boolean,
  have_sign: boolean
}
global lxb_css_syntax_token_number_t: type = @lxb_css_syntax_token_number
global lxb_css_syntax_token_string: type <cimport,nodecl,ctypedef> = @record{
  base: lxb_css_syntax_token_base_t,
  data: *cuchar,
  length: csize
}
global lxb_css_syntax_token_string_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_dimension: type <cimport,nodecl,ctypedef> = @record{
  num: lxb_css_syntax_token_number_t,
  str: lxb_css_syntax_token_string_t
}
global lxb_css_syntax_token_dimension_t: type = @lxb_css_syntax_token_dimension
global lxb_css_syntax_token_delim: type <cimport,nodecl,ctypedef> = @record{
  base: lxb_css_syntax_token_base_t,
  character: cuchar
}
global lxb_css_syntax_token_delim_t: type = @lxb_css_syntax_token_delim
global lxb_css_syntax_token_ident_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_function_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_at_keyword_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_hash_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_bad_string_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_url_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_bad_url_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_percentage_t: type = @lxb_css_syntax_token_number
global lxb_css_syntax_token_whitespace_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_cdo_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_cdc_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_colon_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_semicolon_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_comma_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_ls_bracket_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_rs_bracket_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_l_parenthesis_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_r_parenthesis_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_lc_bracket_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_rc_bracket_t: type = @lxb_css_syntax_token_base
global lxb_css_syntax_token_comment_t: type = @lxb_css_syntax_token_string
global lxb_css_syntax_token_u: type <cimport,nodecl,ctypedef> = @union{
  base: lxb_css_syntax_token_base_t,
  comment: lxb_css_syntax_token_comment_t,
  number: lxb_css_syntax_token_number_t,
  dimension: lxb_css_syntax_token_dimension_t,
  percentage: lxb_css_syntax_token_percentage_t,
  hash: lxb_css_syntax_token_hash_t,
  string: lxb_css_syntax_token_string_t,
  bad_string: lxb_css_syntax_token_bad_string_t,
  delim: lxb_css_syntax_token_delim_t,
  lparenthesis: lxb_css_syntax_token_l_parenthesis_t,
  rparenthesis: lxb_css_syntax_token_r_parenthesis_t,
  cdc: lxb_css_syntax_token_cdc_t,
  Function: lxb_css_syntax_token_function_t,
  ident: lxb_css_syntax_token_ident_t,
  url: lxb_css_syntax_token_url_t,
  bad_url: lxb_css_syntax_token_bad_url_t,
  at_keyword: lxb_css_syntax_token_at_keyword_t,
  whitespace: lxb_css_syntax_token_whitespace_t
}
lxb_css_syntax_token = @record{
  types: lxb_css_syntax_token_u,
  type: lxb_css_syntax_token_type_t,
  cloned: boolean
}
global function lxb_css_syntax_token_next(tkz: *lxb_css_syntax_tokenizer_t): *lxb_css_syntax_token_t <cimport,nodecl> end
global function lxb_css_syntax_token_consume(tkz: *lxb_css_syntax_tokenizer_t): void <cimport,nodecl> end
global function lxb_css_syntax_token_consume_n(tkz: *lxb_css_syntax_tokenizer_t, count: cuint): void <cimport,nodecl> end
global function lxb_css_syntax_token_string_dup(token: *lxb_css_syntax_token_string_t, str: *lexbor_str_t, mraw: *lexbor_mraw_t): cuint <cimport,nodecl> end
global function lxb_css_syntax_token_string_make(tkz: *lxb_css_syntax_tokenizer_t, token: *lxb_css_syntax_token_t): cuint <cimport,nodecl> end
global function lxb_css_syntax_token_string_free(tkz: *lxb_css_syntax_tokenizer_t, token: *lxb_css_syntax_token_t): void <cimport,nodecl> end
global function lxb_css_syntax_token_type_name_by_id(type: lxb_css_syntax_token_type_t): *cuchar <cimport,nodecl> end
global function lxb_css_syntax_token_type_id_by_name(type_name: *cuchar, len: csize): lxb_css_syntax_token_type_t <cimport,nodecl> end
global function lxb_css_syntax_token_serialize(token: *lxb_css_syntax_token_t, cb: lxb_css_syntax_token_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_css_syntax_token_serialize_str(token: *lxb_css_syntax_token_t, str: *lexbor_str_t, mraw: *lexbor_mraw_t): cuint <cimport,nodecl> end
global function lxb_css_syntax_token_serialize_char(token: *lxb_css_syntax_token_t, out_length: *csize): *cuchar <cimport,nodecl> end
global function lxb_css_syntax_token_error(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, module_name: cstring): *lxb_css_log_message_t <cimport,nodecl> end
global function lxb_css_syntax_token_create(dobj: *lexbor_dobject_t): *lxb_css_syntax_token_t <cimport,nodecl> end
global function lxb_css_syntax_token_clean(token: *lxb_css_syntax_token_t): void <cimport,nodecl> end
global function lxb_css_syntax_token_destroy(token: *lxb_css_syntax_token_t, dobj: *lexbor_dobject_t): *lxb_css_syntax_token_t <cimport,nodecl> end
global function lxb_css_syntax_token_type_name(token: *lxb_css_syntax_token_t): *cuchar <cimport,nodecl> end
global function lxb_css_syntax_token_type(token: *lxb_css_syntax_token_t): lxb_css_syntax_token_type_t <cimport,nodecl> end
global function lxb_css_syntax_token_create_noi(dobj: *lexbor_dobject_t): *lxb_css_syntax_token_t <cimport,nodecl> end
global function lxb_css_syntax_token_clean_noi(token: *lxb_css_syntax_token_t): void <cimport,nodecl> end
global function lxb_css_syntax_token_destroy_noi(token: *lxb_css_syntax_token_t, dobj: *lexbor_dobject_t): *lxb_css_syntax_token_t <cimport,nodecl> end
global function lxb_css_syntax_token_type_name_noi(token: *lxb_css_syntax_token_t): *cuchar <cimport,nodecl> end
global function lxb_css_syntax_token_type_noi(token: *lxb_css_syntax_token_t): lxb_css_syntax_token_type_t <cimport,nodecl> end
global lxb_css_syntax_tokenizer_state_f: type <cimport,nodecl> = @function(*lxb_css_syntax_tokenizer_t, *lxb_css_syntax_token_t, *cuchar, *cuchar): *cuchar
global lxb_css_syntax_tokenizer_chunk_f: type <cimport,nodecl> = @function(*lxb_css_syntax_tokenizer_t, **cuchar, **cuchar, pointer): cuint
global lxb_css_syntax_tokenizer_opt: type <cimport,nodecl,using,ctypedef> = @enum(cint){
  LXB_CSS_SYNTAX_TOKENIZER_OPT_UNDEF = 0
}
lxb_css_syntax_tokenizer = @record{
  token: *lxb_css_syntax_token_t,
  last: *lxb_css_syntax_token_t,
  prepared: *lxb_css_syntax_token_t,
  tokens_begin: *lxb_css_syntax_token_t,
  tokens_end: *lxb_css_syntax_token_t,
  parse_errors: *lexbor_array_obj_t,
  in_begin: *cuchar,
  in_end: *cuchar,
  mraw: *lexbor_mraw_t,
  chunk_cb: lxb_css_syntax_tokenizer_chunk_f,
  chunk_ctx: pointer,
  start: *cuchar,
  pos: *cuchar,
  End: *cuchar,
  buffer: [128]cuchar,
  token_data: lxb_css_syntax_token_data_t,
  opt: cuint,
  status: cuint,
  eof: boolean,
  with_comment: boolean
}
global function lxb_css_syntax_tokenizer_create(): *lxb_css_syntax_tokenizer_t <cimport,nodecl> end
global function lxb_css_syntax_tokenizer_init(tkz: *lxb_css_syntax_tokenizer_t): cuint <cimport,nodecl> end
global function lxb_css_syntax_tokenizer_clean(tkz: *lxb_css_syntax_tokenizer_t): cuint <cimport,nodecl> end
global function lxb_css_syntax_tokenizer_destroy(tkz: *lxb_css_syntax_tokenizer_t): *lxb_css_syntax_tokenizer_t <cimport,nodecl> end
global function lxb_css_syntax_tokenizer_status(tkz: *lxb_css_syntax_tokenizer_t): cuint <cimport,nodecl> end
global function lxb_css_syntax_tokenizer_chunk_cb_set(tkz: *lxb_css_syntax_tokenizer_t, cb: lxb_css_syntax_tokenizer_chunk_f, ctx: pointer): void <cimport,nodecl> end
global function lxb_css_syntax_tokenizer_buffer_set(tkz: *lxb_css_syntax_tokenizer_t, data: *cuchar, size: csize): void <cimport,nodecl> end
global function lxb_css_syntax_tokenizer_status_noi(tkz: *lxb_css_syntax_tokenizer_t): cuint <cimport,nodecl> end
global lxb_css_selectors: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_selectors_t: type = @lxb_css_selectors
global lxb_css_selector: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_selector_t: type = @lxb_css_selector
global lxb_css_selector_list: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_selector_list_t: type = @lxb_css_selector_list
global lxb_css_selectors_memory: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_selectors_memory_t: type = @lxb_css_selectors_memory
global lxb_css_syntax_anb_t: type <cimport,nodecl> = @record{
  a: clong,
  b: clong
}
global function lxb_css_syntax_anb_parse(parser: *lxb_css_parser_t, data: *cuchar, length: csize): lxb_css_syntax_anb_t <cimport,nodecl> end
global function lxb_css_syntax_anb_handler(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, anb: *lxb_css_syntax_anb_t): cuint <cimport,nodecl> end
global function lxb_css_syntax_anb_serialize(anb: *lxb_css_syntax_anb_t, cb: lexbor_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_css_syntax_anb_serialize_char(anb: *lxb_css_syntax_anb_t, out_length: *csize): *cuchar <cimport,nodecl> end
global lxb_css_selector_type_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SELECTOR_TYPE__UNDEF = 0,
  LXB_CSS_SELECTOR_TYPE_ANY = 1,
  LXB_CSS_SELECTOR_TYPE_ELEMENT = 2,
  LXB_CSS_SELECTOR_TYPE_ID = 3,
  LXB_CSS_SELECTOR_TYPE_CLASS = 4,
  LXB_CSS_SELECTOR_TYPE_ATTRIBUTE = 5,
  LXB_CSS_SELECTOR_TYPE_PSEUDO_CLASS = 6,
  LXB_CSS_SELECTOR_TYPE_PSEUDO_CLASS_FUNCTION = 7,
  LXB_CSS_SELECTOR_TYPE_PSEUDO_ELEMENT = 8,
  LXB_CSS_SELECTOR_TYPE_PSEUDO_ELEMENT_FUNCTION = 9,
  LXB_CSS_SELECTOR_TYPE__LAST_ENTRY = 10
}
global lxb_css_selector_combinator_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SELECTOR_COMBINATOR_DESCENDANT = 0,
  LXB_CSS_SELECTOR_COMBINATOR_CLOSE = 1,
  LXB_CSS_SELECTOR_COMBINATOR_CHILD = 2,
  LXB_CSS_SELECTOR_COMBINATOR_SIBLING = 3,
  LXB_CSS_SELECTOR_COMBINATOR_FOLLOWING = 4,
  LXB_CSS_SELECTOR_COMBINATOR_CELL = 5,
  LXB_CSS_SELECTOR_COMBINATOR__LAST_ENTRY = 6
}
global lxb_css_selector_match_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SELECTOR_MATCH_EQUAL = 0,
  LXB_CSS_SELECTOR_MATCH_INCLUDE = 1,
  LXB_CSS_SELECTOR_MATCH_DASH = 2,
  LXB_CSS_SELECTOR_MATCH_PREFIX = 3,
  LXB_CSS_SELECTOR_MATCH_SUFFIX = 4,
  LXB_CSS_SELECTOR_MATCH_SUBSTRING = 5,
  LXB_CSS_SELECTOR_MATCH__LAST_ENTRY = 6
}
global lxb_css_selector_modifier_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SELECTOR_MODIFIER_UNSET = 0,
  LXB_CSS_SELECTOR_MODIFIER_I = 1,
  LXB_CSS_SELECTOR_MODIFIER_S = 2,
  LXB_CSS_SELECTOR_MODIFIER__LAST_ENTRY = 3
}
global lxb_css_selector_attribute_t: type <cimport,nodecl> = @record{
  match: lxb_css_selector_match_t,
  modifier: lxb_css_selector_modifier_t,
  value: lexbor_str_t
}
global lxb_css_selector_pseudo_t: type <cimport,nodecl> = @record{
  type: cuint,
  data: pointer
}
global lxb_css_selector_anb_of_t: type <cimport,nodecl> = @record{
  anb: lxb_css_syntax_anb_t,
  of: *lxb_css_selector_list_t
}
global lxb_css_selector_u: type <cimport,nodecl,ctypedef> = @union{
  attribute: lxb_css_selector_attribute_t,
  pseudo: lxb_css_selector_pseudo_t
}
lxb_css_selector = @record{
  type: lxb_css_selector_type_t,
  combinator: lxb_css_selector_combinator_t,
  name: lexbor_str_t,
  ns: lexbor_str_t,
  u: lxb_css_selector_u,
  next: *lxb_css_selector_t,
  prev: *lxb_css_selector_t,
  list: *lxb_css_selector_list_t
}
global lxb_css_selector_specificity_t: type <cimport,nodecl> = @record{
  a: cuint,
  b: cuint,
  c: cuint
}
lxb_css_selector_list = @record{
  first: *lxb_css_selector_t,
  last: *lxb_css_selector_t,
  parent: *lxb_css_selector_t,
  next: *lxb_css_selector_list_t,
  prev: *lxb_css_selector_list_t,
  memory: *lxb_css_selectors_memory_t,
  specificity: lxb_css_selector_specificity_t,
  invalid: boolean
}
global function lxb_css_selector_create(list: *lxb_css_selector_list_t): *lxb_css_selector_t <cimport,nodecl> end
global function lxb_css_selector_destroy(selector: *lxb_css_selector_t): void <cimport,nodecl> end
global function lxb_css_selector_destroy_chain(selector: *lxb_css_selector_t): void <cimport,nodecl> end
global function lxb_css_selector_list_create(mem: *lxb_css_selectors_memory_t): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selector_list_remove(list: *lxb_css_selector_list_t): void <cimport,nodecl> end
global function lxb_css_selector_list_selectors_remove(selectors: *lxb_css_selectors_t, list: *lxb_css_selector_list_t): void <cimport,nodecl> end
global function lxb_css_selector_list_destroy(list: *lxb_css_selector_list_t): void <cimport,nodecl> end
global function lxb_css_selector_list_destroy_chain(list: *lxb_css_selector_list_t): void <cimport,nodecl> end
global function lxb_css_selector_list_destroy_memory(list: *lxb_css_selector_list_t): void <cimport,nodecl> end
global function lxb_css_selector_serialize(selector: *lxb_css_selector_t, cb: lexbor_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_css_selector_serialize_chain(selector: *lxb_css_selector_t, cb: lexbor_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_css_selector_serialize_chain_char(selector: *lxb_css_selector_t, out_length: *csize): *cuchar <cimport,nodecl> end
global function lxb_css_selector_serialize_list(list: *lxb_css_selector_list_t, cb: lexbor_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_css_selector_serialize_list_chain(list: *lxb_css_selector_list_t, cb: lexbor_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_css_selector_serialize_list_chain_char(list: *lxb_css_selector_list_t, out_length: *csize): *cuchar <cimport,nodecl> end
global function lxb_css_selector_serialize_anb_of(anbof: *lxb_css_selector_anb_of_t, cb: lexbor_serialize_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_css_selector_combinator(selector: *lxb_css_selector_t, out_length: *csize): *cuchar <cimport,nodecl> end
global function lxb_css_selector_list_append(list: *lxb_css_selector_list_t, selector: *lxb_css_selector_t): void <cimport,nodecl> end
global function lxb_css_selector_list_append_next(dist: *lxb_css_selector_list_t, src: *lxb_css_selector_list_t): void <cimport,nodecl> end
global function lxb_css_selector_append_next(dist: *lxb_css_selector_t, src: *lxb_css_selector_t): void <cimport,nodecl> end
global lxb_css_selector_pseudo_class_id_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SELECTOR_PSEUDO_CLASS__UNDEF = 0,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_ACTIVE = 1,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_ANY_LINK = 2,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_BLANK = 3,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_CHECKED = 4,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_CURRENT = 5,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_DEFAULT = 6,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_DISABLED = 7,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_EMPTY = 8,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_ENABLED = 9,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FIRST_CHILD = 10,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FIRST_OF_TYPE = 11,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FOCUS = 12,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FOCUS_VISIBLE = 13,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FOCUS_WITHIN = 14,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FULLSCREEN = 15,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUTURE = 16,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_HOVER = 17,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_IN_RANGE = 18,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_INDETERMINATE = 19,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_INVALID = 20,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_LAST_CHILD = 21,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_LAST_OF_TYPE = 22,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_LINK = 23,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_LOCAL_LINK = 24,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_ONLY_CHILD = 25,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_ONLY_OF_TYPE = 26,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_OPTIONAL = 27,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_OUT_OF_RANGE = 28,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_PAST = 29,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_PLACEHOLDER_SHOWN = 30,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_READ_ONLY = 31,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_READ_WRITE = 32,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_REQUIRED = 33,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_ROOT = 34,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_SCOPE = 35,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_TARGET = 36,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_TARGET_WITHIN = 37,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_USER_INVALID = 38,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_VALID = 39,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_VISITED = 40,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_WARNING = 41,
  LXB_CSS_SELECTOR_PSEUDO_CLASS__LAST_ENTRY = 42
}
global lxb_css_selector_pseudo_class_function_id_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION__UNDEF = 0,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_CURRENT = 1,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_DIR = 2,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_HAS = 3,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_IS = 4,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_LANG = 5,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_NOT = 6,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_NTH_CHILD = 7,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_NTH_COL = 8,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_NTH_LAST_CHILD = 9,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_NTH_LAST_COL = 10,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_NTH_LAST_OF_TYPE = 11,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_NTH_OF_TYPE = 12,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION_WHERE = 13,
  LXB_CSS_SELECTOR_PSEUDO_CLASS_FUNCTION__LAST_ENTRY = 14
}
global lxb_css_selector_pseudo_element_id_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT__UNDEF = 0,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_AFTER = 1,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_BACKDROP = 2,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_BEFORE = 3,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_FIRST_LETTER = 4,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_FIRST_LINE = 5,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_GRAMMAR_ERROR = 6,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_INACTIVE_SELECTION = 7,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_MARKER = 8,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_PLACEHOLDER = 9,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_SELECTION = 10,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_SPELLING_ERROR = 11,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_TARGET_TEXT = 12,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT__LAST_ENTRY = 13
}
global lxb_css_selector_pseudo_element_function_id_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_FUNCTION__UNDEF = 0,
  LXB_CSS_SELECTOR_PSEUDO_ELEMENT_FUNCTION__LAST_ENTRY = 1
}
lxb_css_selectors_memory = @record{
  objs: *lexbor_dobject_t,
  mraw: *lexbor_mraw_t
}
lxb_css_selectors = @record{
  list: *lxb_css_selector_list_t,
  list_last: *lxb_css_selector_list_t,
  parent: *lxb_css_selector_t,
  memory: *lxb_css_selectors_memory_t,
  combinator: lxb_css_selector_combinator_t,
  comb_default: lxb_css_selector_combinator_t,
  deep: csize,
  status: boolean,
  bracket: boolean
}
global function lxb_css_selectors_create(): *lxb_css_selectors_t <cimport,nodecl> end
global function lxb_css_selectors_init(selectors: *lxb_css_selectors_t, prepare_count: csize): cuint <cimport,nodecl> end
global function lxb_css_selectors_clean(selectors: *lxb_css_selectors_t): void <cimport,nodecl> end
global function lxb_css_selectors_erase(selectors: *lxb_css_selectors_t): void <cimport,nodecl> end
global function lxb_css_selectors_destroy(selectors: *lxb_css_selectors_t, with_memory: boolean, self_destroy: boolean): *lxb_css_selectors_t <cimport,nodecl> end
global function lxb_css_selectors_parser_destroy_list(parser: *lxb_css_parser_t): void <cimport,nodecl> end
global function lxb_css_selectors_parse(parser: *lxb_css_parser_t, data: *cuchar, length: csize): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selectors_parse_complex_list(parser: *lxb_css_parser_t, data: *cuchar, length: csize): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selectors_parse_compound_list(parser: *lxb_css_parser_t, data: *cuchar, length: csize): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selectors_parse_simple_list(parser: *lxb_css_parser_t, data: *cuchar, length: csize): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selectors_parse_relative_list(parser: *lxb_css_parser_t, data: *cuchar, length: csize): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selectors_parse_complex(parser: *lxb_css_parser_t, data: *cuchar, length: csize): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selectors_parse_relative(parser: *lxb_css_parser_t, data: *cuchar, length: csize): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selectors_parse_compound(parser: *lxb_css_parser_t, data: *cuchar, length: csize): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selectors_parse_simple(parser: *lxb_css_parser_t, data: *cuchar, length: csize): *lxb_css_selector_list_t <cimport,nodecl> end
global function lxb_css_selectors_append_next(selectors: *lxb_css_selectors_t, selector: *lxb_css_selector_t): void <cimport,nodecl> end
global function lxb_css_selectors_list_append_next(selectors: *lxb_css_selectors_t, list: *lxb_css_selector_list_t): void <cimport,nodecl> end
global lxb_css_parser_stage_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_PARSER_CLEAN = 0,
  LXB_CSS_PARSER_RUN = 1,
  LXB_CSS_PARSER_STOP = 2,
  LXB_CSS_PARSER_END = 3
}
lxb_css_parser = @record{
  state: lxb_css_parser_state_f,
  context: pointer,
  tkz: *lxb_css_syntax_tokenizer_t,
  selectors: *lxb_css_selectors_t,
  mraw: *lexbor_mraw_t,
  stack_begin: *lxb_css_parser_stack_t,
  stack_end: *lxb_css_parser_stack_t,
  stack: *lxb_css_parser_stack_t,
  types_begin: *lxb_css_syntax_token_type_t,
  types_end: *lxb_css_syntax_token_type_t,
  types_pos: *lxb_css_syntax_token_type_t,
  log: *lxb_css_log_t,
  stage: lxb_css_parser_stage_t,
  loop: boolean,
  top_level: boolean,
  my_mraw: boolean,
  my_tkz: boolean,
  status: cuint
}
lxb_css_parser_stack = @record{
  state: lxb_css_parser_state_f,
  context: pointer,
  required_stop: boolean
}
lxb_css_parser_error = @record{
  message: lexbor_str_t
}
global function lxb_css_parser_create(): *lxb_css_parser_t <cimport,nodecl> end
global function lxb_css_parser_init(parser: *lxb_css_parser_t, tkz: *lxb_css_syntax_tokenizer_t, mraw: *lexbor_mraw_t): cuint <cimport,nodecl> end
global function lxb_css_parser_clean(parser: *lxb_css_parser_t): void <cimport,nodecl> end
global function lxb_css_parser_destroy(parser: *lxb_css_parser_t, self_destroy: boolean): *lxb_css_parser_t <cimport,nodecl> end
global function lxb_css_parser_stack_push(parser: *lxb_css_parser_t, state: lxb_css_parser_state_f, context: pointer, stop: boolean): *lxb_css_parser_stack_t <cimport,nodecl> end
global function lxb_css_parser_run(parser: *lxb_css_parser_t, state: lxb_css_parser_state_f, context: pointer): cuint <cimport,nodecl> end
global function lxb_css_parser_stop(parser: *lxb_css_parser_t): boolean <cimport,nodecl> end
global function lxb_css_parser_fail(parser: *lxb_css_parser_t, status: cuint): boolean <cimport,nodecl> end
global function lxb_css_parser_unexpected(parser: *lxb_css_parser_t): boolean <cimport,nodecl> end
global function lxb_css_parser_unexpected_status(parser: *lxb_css_parser_t): cuint <cimport,nodecl> end
global function lxb_css_parser_unexpected_data(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t): boolean <cimport,nodecl> end
global function lxb_css_parser_unexpected_data_status(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t): cuint <cimport,nodecl> end
global function lxb_css_parser_memory_fail(parser: *lxb_css_parser_t): boolean <cimport,nodecl> end
global function lxb_css_parser_find_close(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, opt_data: *cuchar, type: lxb_css_syntax_token_type_t, stop: lxb_css_syntax_token_type_t): *lxb_css_syntax_token_t <cimport,nodecl> end
global function lxb_css_parser_find_close_deep(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, type: lxb_css_syntax_token_type_t, deep: *csize): *lxb_css_syntax_token_t <cimport,nodecl> end
global function lxb_css_parser_status(parser: *lxb_css_parser_t): cuint <cimport,nodecl> end
global function lxb_css_parser_selectors(parser: *lxb_css_parser_t): *lxb_css_selectors_t <cimport,nodecl> end
global function lxb_css_parser_selectors_set(parser: *lxb_css_parser_t, selectors: *lxb_css_selectors_t): void <cimport,nodecl> end
global function lxb_css_parser_status_is_unexpected_data(parser: *lxb_css_parser_t): boolean <cimport,nodecl> end
global function lxb_css_parser_buffer(parser: *lxb_css_parser_t, length: *csize): *cuchar <cimport,nodecl> end
global function lxb_css_parser_buffer_set(parser: *lxb_css_parser_t, data: *cuchar, length: csize): void <cimport,nodecl> end
global function lxb_css_parser_state(parser: *lxb_css_parser_t): lxb_css_parser_state_f <cimport,nodecl> end
global function lxb_css_parser_state_set(parser: *lxb_css_parser_t, state: lxb_css_parser_state_f): void <cimport,nodecl> end
global function lxb_css_parser_context(parser: *lxb_css_parser_t): pointer <cimport,nodecl> end
global function lxb_css_parser_context_set(parser: *lxb_css_parser_t, context: pointer): void <cimport,nodecl> end
global function lxb_css_parser_stack_pop(parser: *lxb_css_parser_t): *lxb_css_parser_stack_t <cimport,nodecl> end
global function lxb_css_parser_stack_to_stop(parser: *lxb_css_parser_t): *lxb_css_parser_stack_t <cimport,nodecl> end
global function lxb_css_parser_stack_clean(parser: *lxb_css_parser_t): void <cimport,nodecl> end
global function lxb_css_parser_stack_current(parser: *lxb_css_parser_t): *lxb_css_parser_stack_t <cimport,nodecl> end
global function lxb_css_parser_stack_set(stack: *lxb_css_parser_stack_t, state: lxb_css_parser_state_f, context: pointer): void <cimport,nodecl> end
global function lxb_css_parser_stack_up(parser: *lxb_css_parser_t): void <cimport,nodecl> end
global function lxb_css_parser_stack_down(parser: *lxb_css_parser_t): void <cimport,nodecl> end
global function lxb_css_parser_log(parser: *lxb_css_parser_t): *lxb_css_log_t <cimport,nodecl> end
global lxb_css_stylesheet: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_css_stylesheet_t: type = @lxb_css_stylesheet
lxb_css_stylesheet = @record{
  node: lxb_css_node_t,
  mraw: *lexbor_mraw_t
}
global function lxb_css_stylesheet_create(mraw: *lexbor_mraw_t): *lxb_css_stylesheet_t <cimport,nodecl> end
global lxb_css_syntax_tokenizer_error_id_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_CSS_SYNTAX_TOKENIZER_ERROR_UNEOF = 0,
  LXB_CSS_SYNTAX_TOKENIZER_ERROR_EOINCO = 1,
  LXB_CSS_SYNTAX_TOKENIZER_ERROR_EOINST = 2,
  LXB_CSS_SYNTAX_TOKENIZER_ERROR_EOINUR = 3,
  LXB_CSS_SYNTAX_TOKENIZER_ERROR_QOINUR = 4,
  LXB_CSS_SYNTAX_TOKENIZER_ERROR_WRESINUR = 5,
  LXB_CSS_SYNTAX_TOKENIZER_ERROR_NEINST = 6,
  LXB_CSS_SYNTAX_TOKENIZER_ERROR_BACH = 7,
  LXB_CSS_SYNTAX_TOKENIZER_ERROR_BACOPO = 8
}
global lxb_css_syntax_tokenizer_error_t: type <cimport,nodecl> = @record{
  pos: *cuchar,
  id: lxb_css_syntax_tokenizer_error_id_t
}
global function lxb_css_syntax_tokenizer_error_add(parse_errors: *lexbor_array_obj_t, pos: *cuchar, id: lxb_css_syntax_tokenizer_error_id_t): *lxb_css_syntax_tokenizer_error_t <cimport,nodecl> end
global function lxb_css_selectors_state_complex_list(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_compound_list(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_simple_list(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_relative_list(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_relative(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_complex(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_compound(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_simple(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_success(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_forgiving(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_forgiving_relative(parser: *lxb_css_parser_t, token: *lxb_css_syntax_token_t, ctx: pointer): boolean <cimport,nodecl> end
global function lxb_css_selectors_state_fail(parser: *lxb_css_parser_t): boolean <cimport,nodecl> end
global lxb_css_selectors_pseudo_data_func_t: type <cimport,nodecl> = @record{
  name: *cuchar,
  length: csize,
  id: cuint,
  success: lxb_css_parser_state_f,
  state: lxb_css_parser_state_f,
  empty: boolean,
  combinator: lxb_css_selector_combinator_t
}
global lxb_css_selectors_pseudo_data_t: type <cimport,nodecl> = @record{
  name: *cuchar,
  length: csize,
  id: cuint
}
global function lxb_css_selector_pseudo_class_by_name(name: *cuchar, length: csize): *lxb_css_selectors_pseudo_data_t <cimport,nodecl> end
global function lxb_css_selector_pseudo_class_function_by_name(name: *cuchar, length: csize): *lxb_css_selectors_pseudo_data_func_t <cimport,nodecl> end
global function lxb_css_selector_pseudo_class_function_by_id(id: cuint): *lxb_css_selectors_pseudo_data_func_t <cimport,nodecl> end
global function lxb_css_selector_pseudo_element_by_name(name: *cuchar, length: csize): *lxb_css_selectors_pseudo_data_t <cimport,nodecl> end
global function lxb_css_selector_pseudo_element_function_by_name(name: *cuchar, length: csize): *lxb_css_selectors_pseudo_data_func_t <cimport,nodecl> end
global function lxb_css_selector_pseudo_element_function_by_id(id: cuint): *lxb_css_selectors_pseudo_data_func_t <cimport,nodecl> end
global function lxb_css_selector_pseudo_function_can_empty(id: cuint, is_class: boolean): boolean <cimport,nodecl> end
global lxb_encoding_t: type <cimport,nodecl,using> = @enum(cint){
  LXB_ENCODING_DEFAULT = 0,
  LXB_ENCODING_AUTO = 1,
  LXB_ENCODING_UNDEFINED = 2,
  LXB_ENCODING_BIG5 = 3,
  LXB_ENCODING_EUC_JP = 4,
  LXB_ENCODING_EUC_KR = 5,
  LXB_ENCODING_GBK = 6,
  LXB_ENCODING_IBM866 = 7,
  LXB_ENCODING_ISO_2022_JP = 8,
  LXB_ENCODING_ISO_8859_10 = 9,
  LXB_ENCODING_ISO_8859_13 = 10,
  LXB_ENCODING_ISO_8859_14 = 11,
  LXB_ENCODING_ISO_8859_15 = 12,
  LXB_ENCODING_ISO_8859_16 = 13,
  LXB_ENCODING_ISO_8859_2 = 14,
  LXB_ENCODING_ISO_8859_3 = 15,
  LXB_ENCODING_ISO_8859_4 = 16,
  LXB_ENCODING_ISO_8859_5 = 17,
  LXB_ENCODING_ISO_8859_6 = 18,
  LXB_ENCODING_ISO_8859_7 = 19,
  LXB_ENCODING_ISO_8859_8 = 20,
  LXB_ENCODING_ISO_8859_8_I = 21,
  LXB_ENCODING_KOI8_R = 22,
  LXB_ENCODING_KOI8_U = 23,
  LXB_ENCODING_SHIFT_JIS = 24,
  LXB_ENCODING_UTF_16BE = 25,
  LXB_ENCODING_UTF_16LE = 26,
  LXB_ENCODING_UTF_8 = 27,
  LXB_ENCODING_GB18030 = 28,
  LXB_ENCODING_MACINTOSH = 29,
  LXB_ENCODING_REPLACEMENT = 30,
  LXB_ENCODING_WINDOWS_1250 = 31,
  LXB_ENCODING_WINDOWS_1251 = 32,
  LXB_ENCODING_WINDOWS_1252 = 33,
  LXB_ENCODING_WINDOWS_1253 = 34,
  LXB_ENCODING_WINDOWS_1254 = 35,
  LXB_ENCODING_WINDOWS_1255 = 36,
  LXB_ENCODING_WINDOWS_1256 = 37,
  LXB_ENCODING_WINDOWS_1257 = 38,
  LXB_ENCODING_WINDOWS_1258 = 39,
  LXB_ENCODING_WINDOWS_874 = 40,
  LXB_ENCODING_X_MAC_CYRILLIC = 41,
  LXB_ENCODING_X_USER_DEFINED = 42,
  LXB_ENCODING_LAST_ENTRY = 43
}
global lxb_encoding_ctx_utf_8_t: type <cimport,nodecl> = @record{
  need: cuint,
  lower: cuchar,
  upper: cuchar
}
global lxb_encoding_ctx_gb18030_t: type <cimport,nodecl> = @record{
  first: cuchar,
  second: cuchar,
  third: cuchar
}
global lxb_encoding_ctx_euc_jp_t: type <cimport,nodecl> = @record{
  lead: cuchar,
  is_jis0212: boolean
}
global lxb_encoding_ctx_2022_jp_t: type <cimport,nodecl> = @record{
  lead: cuchar,
  prepand: cuchar,
  state: cuint,
  out_state: cuint,
  out_flag: boolean
}
global lxb_encoding_data: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_encoding_data_t: type = @lxb_encoding_data
global lxb_encoding_decode_t: type <cimport,nodecl> = @record{
  encoding_data: *lxb_encoding_data_t,
  buffer_out: *cuint,
  buffer_length: csize,
  buffer_used: csize,
  replace_to: *cuint,
  replace_len: csize,
  codepoint: cuint,
  second_codepoint: cuint,
  prepend: boolean,
  have_error: boolean,
  status: cuint,
  u: union{
    utf_8: lxb_encoding_ctx_utf_8_t,
    gb18030: lxb_encoding_ctx_gb18030_t,
    lead: cuint,
    euc_jp: lxb_encoding_ctx_euc_jp_t,
    iso_2022_jp: lxb_encoding_ctx_2022_jp_t
  }
}
global lxb_encoding_encode_t: type <cimport,nodecl> = @record{
  encoding_data: *lxb_encoding_data_t,
  buffer_out: *cuchar,
  buffer_length: csize,
  buffer_used: csize,
  replace_to: *cuchar,
  replace_len: csize,
  state: cuint
}
global lxb_encoding_encode_f: type <cimport,nodecl> = @function(*lxb_encoding_encode_t, **cuint, *cuint): cuint
global lxb_encoding_decode_f: type <cimport,nodecl> = @function(*lxb_encoding_decode_t, **cuchar, *cuchar): cuint
global lxb_encoding_encode_single_f: type <cimport,nodecl> = @function(*lxb_encoding_encode_t, **cuchar, *cuchar, cuint): int8
global lxb_encoding_decode_single_f: type <cimport,nodecl> = @function(*lxb_encoding_decode_t, **cuchar, *cuchar): cuint
lxb_encoding_data = @record{
  encoding: lxb_encoding_t,
  encode: lxb_encoding_encode_f,
  decode: lxb_encoding_decode_f,
  encode_single: lxb_encoding_encode_single_f,
  decode_single: lxb_encoding_decode_single_f,
  name: *cuchar
}
global lxb_encoding_single_index_t: type <cimport,nodecl> = @record{
  name: *cuchar,
  size: cuint,
  codepoint: cuint
}
global lxb_encoding_multi_index_t: type = @lxb_encoding_single_index_t
global lxb_encoding_range_index_t: type <cimport,nodecl> = @record{
  index: cuint,
  codepoint: cuint
}
global lxb_encoding_res_map: [43]lxb_encoding_data_t <cimport,nodecl>
global lxb_encoding_res_shs_entities: [220]lexbor_shs_entry_t <cimport,nodecl>
global function lxb_encoding_encode_default(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_auto(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_undefined(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_big5(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_euc_jp(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_euc_kr(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_gbk(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_ibm866(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_2022_jp(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_2022_jp_eof(ctx: *lxb_encoding_encode_t): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_10(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_13(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_14(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_15(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_16(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_2(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_3(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_4(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_5(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_6(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_7(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_8(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_8_i(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_koi8_r(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_koi8_u(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_shift_jis(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_utf_16be(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_utf_16le(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_utf_8(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_gb18030(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_macintosh(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_replacement(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_1250(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_1251(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_1252(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_1253(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_1254(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_1255(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_1256(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_1257(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_1258(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_windows_874(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_x_mac_cyrillic(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_x_user_defined(ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_encode_default_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_auto_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_undefined_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_big5_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_euc_jp_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_euc_kr_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_gbk_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_ibm866_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_2022_jp_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_2022_jp_eof_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_10_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_13_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_14_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_15_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_16_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_2_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_3_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_4_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_5_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_6_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_7_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_8_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_iso_8859_8_i_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_koi8_r_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_koi8_u_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_shift_jis_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_utf_16be_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_utf_16le_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_utf_8_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_gb18030_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_macintosh_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_replacement_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_1250_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_1251_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_1252_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_1253_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_1254_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_1255_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_1256_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_1257_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_1258_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_windows_874_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_x_mac_cyrillic_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_encode_x_user_defined_single(ctx: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar, cp: cuint): int8 <cimport,nodecl> end
global function lxb_encoding_decode_default(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_auto(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_undefined(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_big5(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_euc_jp(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_euc_kr(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_gbk(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_ibm866(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_2022_jp(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_10(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_13(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_14(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_15(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_16(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_2(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_3(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_4(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_5(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_6(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_7(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_8(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_8_i(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_koi8_r(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_koi8_u(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_shift_jis(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_utf_16be(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_utf_16le(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_utf_8(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_gb18030(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_macintosh(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_replacement(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1250(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1251(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1252(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1253(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1254(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1255(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1256(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1257(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1258(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_874(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_x_mac_cyrillic(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_x_user_defined(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_default_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_auto_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_undefined_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_big5_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_euc_jp_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_euc_kr_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_gbk_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_ibm866_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_2022_jp_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_10_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_13_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_14_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_15_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_16_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_2_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_3_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_4_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_5_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_6_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_7_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_8_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_iso_8859_8_i_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_koi8_r_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_koi8_u_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_shift_jis_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_utf_16be_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_utf_16le_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_utf_8_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_gb18030_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_macintosh_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_replacement_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1250_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1251_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1252_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1253_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1254_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1255_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1256_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1257_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_1258_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_windows_874_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_x_mac_cyrillic_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_decode_x_user_defined_single(ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_data_by_pre_name(name: *cuchar, length: csize): *lxb_encoding_data_t <cimport,nodecl> end
global function lxb_encoding_encode_init(encode: *lxb_encoding_encode_t, encoding_data: *lxb_encoding_data_t, buffer_out: *cuchar, buffer_length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_encode_finish(encode: *lxb_encoding_encode_t): cuint <cimport,nodecl> end
global function lxb_encoding_encode_buf(encode: *lxb_encoding_encode_t): *cuchar <cimport,nodecl> end
global function lxb_encoding_encode_buf_set(encode: *lxb_encoding_encode_t, buffer_out: *cuchar, buffer_length: csize): void <cimport,nodecl> end
global function lxb_encoding_encode_buf_used_set(encode: *lxb_encoding_encode_t, buffer_used: csize): void <cimport,nodecl> end
global function lxb_encoding_encode_buf_used(encode: *lxb_encoding_encode_t): csize <cimport,nodecl> end
global function lxb_encoding_encode_replace_set(encode: *lxb_encoding_encode_t, replace: *cuchar, length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_encode_buf_add_to(encode: *lxb_encoding_encode_t, data: *cuchar, length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_decode_buf_add_to(decode: *lxb_encoding_decode_t, data: *cuint, length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_decode_init(decode: *lxb_encoding_decode_t, encoding_data: *lxb_encoding_data_t, buffer_out: *cuint, buffer_length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_decode_finish(decode: *lxb_encoding_decode_t): cuint <cimport,nodecl> end
global function lxb_encoding_decode_buf(decode: *lxb_encoding_decode_t): *cuint <cimport,nodecl> end
global function lxb_encoding_decode_buf_set(decode: *lxb_encoding_decode_t, buffer_out: *cuint, buffer_length: csize): void <cimport,nodecl> end
global function lxb_encoding_decode_buf_used_set(decode: *lxb_encoding_decode_t, buffer_used: csize): void <cimport,nodecl> end
global function lxb_encoding_decode_buf_used(decode: *lxb_encoding_decode_t): csize <cimport,nodecl> end
global function lxb_encoding_decode_replace_set(decode: *lxb_encoding_decode_t, replace: *cuint, length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_encode_init_single(encode: *lxb_encoding_encode_t, encoding_data: *lxb_encoding_data_t): cuint <cimport,nodecl> end
global function lxb_encoding_encode_finish_single(encode: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar): int8 <cimport,nodecl> end
global function lxb_encoding_decode_init_single(decode: *lxb_encoding_decode_t, encoding_data: *lxb_encoding_data_t): cuint <cimport,nodecl> end
global function lxb_encoding_decode_finish_single(decode: *lxb_encoding_decode_t): cuint <cimport,nodecl> end
global function lxb_encoding_data_by_name(name: *cuchar, length: csize): *lxb_encoding_data_t <cimport,nodecl> end
global function lxb_encoding_encode_function(encoding: lxb_encoding_t): lxb_encoding_encode_f <cimport,nodecl> end
global function lxb_encoding_decode_function(encoding: lxb_encoding_t): lxb_encoding_decode_f <cimport,nodecl> end
global function lxb_encoding_data_call_encode(encoding_data: *lxb_encoding_data_t, ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_data_call_decode(encoding_data: *lxb_encoding_data_t, ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_data_encoding(data: *lxb_encoding_data_t): lxb_encoding_t <cimport,nodecl> end
global function lxb_encoding_encode_init_noi(encode: *lxb_encoding_encode_t, encoding_data: *lxb_encoding_data_t, buffer_out: *cuchar, buffer_length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_encode_finish_noi(encode: *lxb_encoding_encode_t): cuint <cimport,nodecl> end
global function lxb_encoding_encode_buf_noi(encode: *lxb_encoding_encode_t): *cuchar <cimport,nodecl> end
global function lxb_encoding_encode_buf_set_noi(encode: *lxb_encoding_encode_t, buffer_out: *cuchar, buffer_length: csize): void <cimport,nodecl> end
global function lxb_encoding_encode_buf_used_set_noi(encode: *lxb_encoding_encode_t, buffer_used: csize): void <cimport,nodecl> end
global function lxb_encoding_encode_buf_used_noi(encode: *lxb_encoding_encode_t): csize <cimport,nodecl> end
global function lxb_encoding_encode_replace_set_noi(encode: *lxb_encoding_encode_t, replace: *cuchar, buffer_length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_encode_buf_add_to_noi(encode: *lxb_encoding_encode_t, data: *cuchar, length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_decode_init_noi(decode: *lxb_encoding_decode_t, encoding_data: *lxb_encoding_data_t, buffer_out: *cuint, buffer_length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_decode_finish_noi(decode: *lxb_encoding_decode_t): cuint <cimport,nodecl> end
global function lxb_encoding_decode_buf_noi(decode: *lxb_encoding_decode_t): *cuint <cimport,nodecl> end
global function lxb_encoding_decode_buf_set_noi(decode: *lxb_encoding_decode_t, buffer_out: *cuint, buffer_length: csize): void <cimport,nodecl> end
global function lxb_encoding_decode_buf_used_set_noi(decode: *lxb_encoding_decode_t, buffer_used: csize): void <cimport,nodecl> end
global function lxb_encoding_decode_buf_used_noi(decode: *lxb_encoding_decode_t): csize <cimport,nodecl> end
global function lxb_encoding_decode_replace_set_noi(decode: *lxb_encoding_decode_t, replace: *cuint, length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_decode_buf_add_to_noi(decode: *lxb_encoding_decode_t, data: *cuint, length: csize): cuint <cimport,nodecl> end
global function lxb_encoding_encode_init_single_noi(encode: *lxb_encoding_encode_t, encoding_data: *lxb_encoding_data_t): cuint <cimport,nodecl> end
global function lxb_encoding_encode_finish_single_noi(encode: *lxb_encoding_encode_t, data: **cuchar, End: *cuchar): int8 <cimport,nodecl> end
global function lxb_encoding_decode_init_single_noi(decode: *lxb_encoding_decode_t, encoding_data: *lxb_encoding_data_t): cuint <cimport,nodecl> end
global function lxb_encoding_decode_finish_single_noi(decode: *lxb_encoding_decode_t): cuint <cimport,nodecl> end
global function lxb_encoding_data_by_name_noi(name: *cuchar, length: csize): *lxb_encoding_data_t <cimport,nodecl> end
global function lxb_encoding_data_noi(encoding: lxb_encoding_t): *lxb_encoding_data_t <cimport,nodecl> end
global function lxb_encoding_encode_function_noi(encoding: lxb_encoding_t): lxb_encoding_encode_f <cimport,nodecl> end
global function lxb_encoding_decode_function_noi(encoding: lxb_encoding_t): lxb_encoding_decode_f <cimport,nodecl> end
global function lxb_encoding_data_call_encode_noi(encoding_data: *lxb_encoding_data_t, ctx: *lxb_encoding_encode_t, cp: **cuint, End: *cuint): cuint <cimport,nodecl> end
global function lxb_encoding_data_call_decode_noi(encoding_data: *lxb_encoding_data_t, ctx: *lxb_encoding_decode_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_encoding_data_encoding_noi(data: *lxb_encoding_data_t): lxb_encoding_t <cimport,nodecl> end
global function lxb_encoding_encode_t_sizeof(): csize <cimport,nodecl> end
global function lxb_encoding_decode_t_sizeof(): csize <cimport,nodecl> end
global lxb_selectors_cb_f: type <cimport,nodecl> = @function(*lxb_dom_node_t, *lxb_css_selector_specificity_t, pointer): cuint
global lxb_selectors_entry: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_selectors_entry_t: type = @lxb_selectors_entry
global lxb_selectors_entry_child: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_selectors_entry_child_t: type = @lxb_selectors_entry_child
global lxb_selectors_t: type <cimport,nodecl> = @record{
  objs: *lexbor_dobject_t,
  chld: *lexbor_dobject_t,
  status: cuint
}
lxb_selectors_entry = @record{
  id: usize,
  selector: *lxb_css_selector_t,
  node: *lxb_dom_node_t,
  next: *lxb_selectors_entry_t,
  prev: *lxb_selectors_entry_t,
  child: *lxb_selectors_entry_child_t
}
lxb_selectors_entry_child = @record{
  entry: *lxb_selectors_entry_t,
  next: *lxb_selectors_entry_child_t
}
global function lxb_selectors_create(): *lxb_selectors_t <cimport,nodecl> end
global function lxb_selectors_init(selectors: *lxb_selectors_t): cuint <cimport,nodecl> end
global function lxb_selectors_clean(selectors: *lxb_selectors_t): void <cimport,nodecl> end
global function lxb_selectors_destroy(selectors: *lxb_selectors_t, self_destroy: boolean): *lxb_selectors_t <cimport,nodecl> end
global function lxb_selectors_find(selectors: *lxb_selectors_t, root: *lxb_dom_node_t, list: *lxb_css_selector_list_t, cb: lxb_selectors_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global lxb_utils_http_version_t: type <cimport,nodecl> = @record{
  name: lexbor_str_t,
  number: float64,
  status: cuint
}
global lxb_utils_http_field_t: type <cimport,nodecl> = @record{
  name: lexbor_str_t,
  value: lexbor_str_t
}
global lxb_utils_http_t: type <cimport,nodecl> = @record{
  mraw: *lexbor_mraw_t,
  fields: *lexbor_array_obj_t,
  tmp: lexbor_str_t,
  version: lxb_utils_http_version_t,
  error: cstring,
  state: cuint
}
global function lxb_utils_http_create(): *lxb_utils_http_t <cimport,nodecl> end
global function lxb_utils_http_init(http: *lxb_utils_http_t, mraw: *lexbor_mraw_t): cuint <cimport,nodecl> end
global function lxb_utils_http_clear(http: *lxb_utils_http_t): cuint <cimport,nodecl> end
global function lxb_utils_http_destroy(http: *lxb_utils_http_t, self_destroy: boolean): *lxb_utils_http_t <cimport,nodecl> end
global function lxb_utils_http_parse(http: *lxb_utils_http_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_utils_http_header_parse_eof(http: *lxb_utils_http_t): cuint <cimport,nodecl> end
global function lxb_utils_http_header_field(http: *lxb_utils_http_t, name: *cuchar, len: csize, offset: csize): *lxb_utils_http_field_t <cimport,nodecl> end
global function lxb_utils_http_header_serialize(http: *lxb_utils_http_t, str: *lexbor_str_t): cuint <cimport,nodecl> end
global function lxb_utils_http_field_serialize(http: *lxb_utils_http_t, str: *lexbor_str_t, field: *lxb_utils_http_field_t): cuint <cimport,nodecl> end
global lxb_utils_warc: type <cimport,nodecl,forwarddecl,ctypedef> = @record{}
global lxb_utils_warc_t: type = @lxb_utils_warc
global lxb_utils_warc_version_t: type <cimport,nodecl> = @record{
  type: lexbor_str_t,
  number: float64
}
global lxb_utils_warc_field_t: type <cimport,nodecl> = @record{
  name: lexbor_str_t,
  value: lexbor_str_t
}
global lxb_utils_warc_header_cb_f: type <cimport,nodecl> = @function(*lxb_utils_warc_t): cuint
global lxb_utils_warc_content_cb_f: type <cimport,nodecl> = @function(*lxb_utils_warc_t, *cuchar, *cuchar): cuint
global lxb_utils_warc_content_end_cb_f: type <cimport,nodecl> = @function(*lxb_utils_warc_t): cuint
lxb_utils_warc = @record{
  mraw: *lexbor_mraw_t,
  fields: *lexbor_array_obj_t,
  tmp: lexbor_str_t,
  version: lxb_utils_warc_version_t,
  header_cb: lxb_utils_warc_header_cb_f,
  content_cb: lxb_utils_warc_content_cb_f,
  content_end_cb: lxb_utils_warc_content_end_cb_f,
  ctx: pointer,
  content_length: csize,
  content_read: csize,
  count: csize,
  error: cstring,
  state: cuint,
  ends: cuint,
  skip: boolean
}
global function lxb_utils_warc_create(): *lxb_utils_warc_t <cimport,nodecl> end
global function lxb_utils_warc_init(warc: *lxb_utils_warc_t, h_cd: lxb_utils_warc_header_cb_f, c_cb: lxb_utils_warc_content_cb_f, c_end_cb: lxb_utils_warc_content_end_cb_f, ctx: pointer): cuint <cimport,nodecl> end
global function lxb_utils_warc_clear(warc: *lxb_utils_warc_t): cuint <cimport,nodecl> end
global function lxb_utils_warc_destroy(warc: *lxb_utils_warc_t, self_destroy: boolean): *lxb_utils_warc_t <cimport,nodecl> end
global function lxb_utils_warc_parse_file(warc: *lxb_utils_warc_t, fh: *FILE): cuint <cimport,nodecl> end
global function lxb_utils_warc_parse(warc: *lxb_utils_warc_t, data: **cuchar, End: *cuchar): cuint <cimport,nodecl> end
global function lxb_utils_warc_parse_eof(warc: *lxb_utils_warc_t): cuint <cimport,nodecl> end
global function lxb_utils_warc_header_field(warc: *lxb_utils_warc_t, name: *cuchar, len: csize, offset: csize): *lxb_utils_warc_field_t <cimport,nodecl> end
global function lxb_utils_warc_header_serialize(warc: *lxb_utils_warc_t, str: *lexbor_str_t): cuint <cimport,nodecl> end
global function lxb_utils_warc_content_length(warc: *lxb_utils_warc_t): csize <cimport,nodecl> end
global function lxb_utils_warc_content_length_noi(warc: *lxb_utils_warc_t): csize <cimport,nodecl> end
